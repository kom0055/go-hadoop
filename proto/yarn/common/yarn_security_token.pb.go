//*
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.3
// source: yarn_security_token.proto

package common

import (
	api "github.com/kom0055/go-hadoop/proto/yarn/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NMTokenIdentifierProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppAttemptId *api.ApplicationAttemptIdProto `protobuf:"bytes,1,opt,name=appAttemptId" json:"appAttemptId,omitempty"`
	NodeId       *api.NodeIdProto               `protobuf:"bytes,2,opt,name=nodeId" json:"nodeId,omitempty"`
	AppSubmitter *string                        `protobuf:"bytes,3,opt,name=appSubmitter" json:"appSubmitter,omitempty"`
	KeyId        *int32                         `protobuf:"varint,4,opt,name=keyId,def=-1" json:"keyId,omitempty"`
}

// Default values for NMTokenIdentifierProto fields.
const (
	Default_NMTokenIdentifierProto_KeyId = int32(-1)
)

func (x *NMTokenIdentifierProto) Reset() {
	*x = NMTokenIdentifierProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_security_token_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NMTokenIdentifierProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NMTokenIdentifierProto) ProtoMessage() {}

func (x *NMTokenIdentifierProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_security_token_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NMTokenIdentifierProto.ProtoReflect.Descriptor instead.
func (*NMTokenIdentifierProto) Descriptor() ([]byte, []int) {
	return file_yarn_security_token_proto_rawDescGZIP(), []int{0}
}

func (x *NMTokenIdentifierProto) GetAppAttemptId() *api.ApplicationAttemptIdProto {
	if x != nil {
		return x.AppAttemptId
	}
	return nil
}

func (x *NMTokenIdentifierProto) GetNodeId() *api.NodeIdProto {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *NMTokenIdentifierProto) GetAppSubmitter() string {
	if x != nil && x.AppSubmitter != nil {
		return *x.AppSubmitter
	}
	return ""
}

func (x *NMTokenIdentifierProto) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return Default_NMTokenIdentifierProto_KeyId
}

type AMRMTokenIdentifierProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppAttemptId *api.ApplicationAttemptIdProto `protobuf:"bytes,1,opt,name=appAttemptId" json:"appAttemptId,omitempty"`
	KeyId        *int32                         `protobuf:"varint,2,opt,name=keyId,def=-1" json:"keyId,omitempty"`
}

// Default values for AMRMTokenIdentifierProto fields.
const (
	Default_AMRMTokenIdentifierProto_KeyId = int32(-1)
)

func (x *AMRMTokenIdentifierProto) Reset() {
	*x = AMRMTokenIdentifierProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_security_token_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AMRMTokenIdentifierProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AMRMTokenIdentifierProto) ProtoMessage() {}

func (x *AMRMTokenIdentifierProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_security_token_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AMRMTokenIdentifierProto.ProtoReflect.Descriptor instead.
func (*AMRMTokenIdentifierProto) Descriptor() ([]byte, []int) {
	return file_yarn_security_token_proto_rawDescGZIP(), []int{1}
}

func (x *AMRMTokenIdentifierProto) GetAppAttemptId() *api.ApplicationAttemptIdProto {
	if x != nil {
		return x.AppAttemptId
	}
	return nil
}

func (x *AMRMTokenIdentifierProto) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return Default_AMRMTokenIdentifierProto_KeyId
}

type ContainerTokenIdentifierProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId           *api.ContainerIdProto           `protobuf:"bytes,1,opt,name=containerId" json:"containerId,omitempty"`
	NmHostAddr            *string                         `protobuf:"bytes,2,opt,name=nmHostAddr" json:"nmHostAddr,omitempty"`
	AppSubmitter          *string                         `protobuf:"bytes,3,opt,name=appSubmitter" json:"appSubmitter,omitempty"`
	Resource              *api.ResourceProto              `protobuf:"bytes,4,opt,name=resource" json:"resource,omitempty"`
	ExpiryTimeStamp       *int64                          `protobuf:"varint,5,opt,name=expiryTimeStamp" json:"expiryTimeStamp,omitempty"`
	MasterKeyId           *int32                          `protobuf:"varint,6,opt,name=masterKeyId,def=-1" json:"masterKeyId,omitempty"`
	RmIdentifier          *int64                          `protobuf:"varint,7,opt,name=rmIdentifier" json:"rmIdentifier,omitempty"`
	Priority              *api.PriorityProto              `protobuf:"bytes,8,opt,name=priority" json:"priority,omitempty"`
	CreationTime          *int64                          `protobuf:"varint,9,opt,name=creationTime" json:"creationTime,omitempty"`
	LogAggregationContext *api.LogAggregationContextProto `protobuf:"bytes,10,opt,name=logAggregationContext" json:"logAggregationContext,omitempty"`
	NodeLabelExpression   *string                         `protobuf:"bytes,11,opt,name=nodeLabelExpression" json:"nodeLabelExpression,omitempty"`
	ContainerType         *api.ContainerTypeProto         `protobuf:"varint,12,opt,name=containerType,enum=hadoop.yarn.ContainerTypeProto" json:"containerType,omitempty"`
	ExecutionType         *api.ExecutionTypeProto         `protobuf:"varint,13,opt,name=executionType,enum=hadoop.yarn.ExecutionTypeProto,def=1" json:"executionType,omitempty"`
	Version               *int32                          `protobuf:"varint,14,opt,name=version,def=0" json:"version,omitempty"`
	AllocationRequestId   *int64                          `protobuf:"varint,15,opt,name=allocation_request_id,json=allocationRequestId,def=-1" json:"allocation_request_id,omitempty"`
	AllocationTags        []string                        `protobuf:"bytes,16,rep,name=allocation_tags,json=allocationTags" json:"allocation_tags,omitempty"`
}

// Default values for ContainerTokenIdentifierProto fields.
const (
	Default_ContainerTokenIdentifierProto_MasterKeyId         = int32(-1)
	Default_ContainerTokenIdentifierProto_ExecutionType       = api.ExecutionTypeProto(1) // api.ExecutionTypeProto_GUARANTEED
	Default_ContainerTokenIdentifierProto_Version             = int32(0)
	Default_ContainerTokenIdentifierProto_AllocationRequestId = int64(-1)
)

func (x *ContainerTokenIdentifierProto) Reset() {
	*x = ContainerTokenIdentifierProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_security_token_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerTokenIdentifierProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerTokenIdentifierProto) ProtoMessage() {}

func (x *ContainerTokenIdentifierProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_security_token_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerTokenIdentifierProto.ProtoReflect.Descriptor instead.
func (*ContainerTokenIdentifierProto) Descriptor() ([]byte, []int) {
	return file_yarn_security_token_proto_rawDescGZIP(), []int{2}
}

func (x *ContainerTokenIdentifierProto) GetContainerId() *api.ContainerIdProto {
	if x != nil {
		return x.ContainerId
	}
	return nil
}

func (x *ContainerTokenIdentifierProto) GetNmHostAddr() string {
	if x != nil && x.NmHostAddr != nil {
		return *x.NmHostAddr
	}
	return ""
}

func (x *ContainerTokenIdentifierProto) GetAppSubmitter() string {
	if x != nil && x.AppSubmitter != nil {
		return *x.AppSubmitter
	}
	return ""
}

func (x *ContainerTokenIdentifierProto) GetResource() *api.ResourceProto {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ContainerTokenIdentifierProto) GetExpiryTimeStamp() int64 {
	if x != nil && x.ExpiryTimeStamp != nil {
		return *x.ExpiryTimeStamp
	}
	return 0
}

func (x *ContainerTokenIdentifierProto) GetMasterKeyId() int32 {
	if x != nil && x.MasterKeyId != nil {
		return *x.MasterKeyId
	}
	return Default_ContainerTokenIdentifierProto_MasterKeyId
}

func (x *ContainerTokenIdentifierProto) GetRmIdentifier() int64 {
	if x != nil && x.RmIdentifier != nil {
		return *x.RmIdentifier
	}
	return 0
}

func (x *ContainerTokenIdentifierProto) GetPriority() *api.PriorityProto {
	if x != nil {
		return x.Priority
	}
	return nil
}

func (x *ContainerTokenIdentifierProto) GetCreationTime() int64 {
	if x != nil && x.CreationTime != nil {
		return *x.CreationTime
	}
	return 0
}

func (x *ContainerTokenIdentifierProto) GetLogAggregationContext() *api.LogAggregationContextProto {
	if x != nil {
		return x.LogAggregationContext
	}
	return nil
}

func (x *ContainerTokenIdentifierProto) GetNodeLabelExpression() string {
	if x != nil && x.NodeLabelExpression != nil {
		return *x.NodeLabelExpression
	}
	return ""
}

func (x *ContainerTokenIdentifierProto) GetContainerType() api.ContainerTypeProto {
	if x != nil && x.ContainerType != nil {
		return *x.ContainerType
	}
	return api.ContainerTypeProto(1)
}

func (x *ContainerTokenIdentifierProto) GetExecutionType() api.ExecutionTypeProto {
	if x != nil && x.ExecutionType != nil {
		return *x.ExecutionType
	}
	return Default_ContainerTokenIdentifierProto_ExecutionType
}

func (x *ContainerTokenIdentifierProto) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return Default_ContainerTokenIdentifierProto_Version
}

func (x *ContainerTokenIdentifierProto) GetAllocationRequestId() int64 {
	if x != nil && x.AllocationRequestId != nil {
		return *x.AllocationRequestId
	}
	return Default_ContainerTokenIdentifierProto_AllocationRequestId
}

func (x *ContainerTokenIdentifierProto) GetAllocationTags() []string {
	if x != nil {
		return x.AllocationTags
	}
	return nil
}

type ClientToAMTokenIdentifierProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppAttemptId *api.ApplicationAttemptIdProto `protobuf:"bytes,1,opt,name=appAttemptId" json:"appAttemptId,omitempty"`
	ClientName   *string                        `protobuf:"bytes,2,opt,name=clientName" json:"clientName,omitempty"`
}

func (x *ClientToAMTokenIdentifierProto) Reset() {
	*x = ClientToAMTokenIdentifierProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_security_token_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientToAMTokenIdentifierProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientToAMTokenIdentifierProto) ProtoMessage() {}

func (x *ClientToAMTokenIdentifierProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_security_token_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientToAMTokenIdentifierProto.ProtoReflect.Descriptor instead.
func (*ClientToAMTokenIdentifierProto) Descriptor() ([]byte, []int) {
	return file_yarn_security_token_proto_rawDescGZIP(), []int{3}
}

func (x *ClientToAMTokenIdentifierProto) GetAppAttemptId() *api.ApplicationAttemptIdProto {
	if x != nil {
		return x.AppAttemptId
	}
	return nil
}

func (x *ClientToAMTokenIdentifierProto) GetClientName() string {
	if x != nil && x.ClientName != nil {
		return *x.ClientName
	}
	return ""
}

type YARNDelegationTokenIdentifierProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner          *string `protobuf:"bytes,1,opt,name=owner" json:"owner,omitempty"`
	Renewer        *string `protobuf:"bytes,2,opt,name=renewer" json:"renewer,omitempty"`
	RealUser       *string `protobuf:"bytes,3,opt,name=realUser" json:"realUser,omitempty"`
	IssueDate      *int64  `protobuf:"varint,4,opt,name=issueDate" json:"issueDate,omitempty"`
	MaxDate        *int64  `protobuf:"varint,5,opt,name=maxDate" json:"maxDate,omitempty"`
	SequenceNumber *int32  `protobuf:"varint,6,opt,name=sequenceNumber" json:"sequenceNumber,omitempty"`
	MasterKeyId    *int32  `protobuf:"varint,7,opt,name=masterKeyId" json:"masterKeyId,omitempty"`
}

func (x *YARNDelegationTokenIdentifierProto) Reset() {
	*x = YARNDelegationTokenIdentifierProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_security_token_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YARNDelegationTokenIdentifierProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YARNDelegationTokenIdentifierProto) ProtoMessage() {}

func (x *YARNDelegationTokenIdentifierProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_security_token_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YARNDelegationTokenIdentifierProto.ProtoReflect.Descriptor instead.
func (*YARNDelegationTokenIdentifierProto) Descriptor() ([]byte, []int) {
	return file_yarn_security_token_proto_rawDescGZIP(), []int{4}
}

func (x *YARNDelegationTokenIdentifierProto) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *YARNDelegationTokenIdentifierProto) GetRenewer() string {
	if x != nil && x.Renewer != nil {
		return *x.Renewer
	}
	return ""
}

func (x *YARNDelegationTokenIdentifierProto) GetRealUser() string {
	if x != nil && x.RealUser != nil {
		return *x.RealUser
	}
	return ""
}

func (x *YARNDelegationTokenIdentifierProto) GetIssueDate() int64 {
	if x != nil && x.IssueDate != nil {
		return *x.IssueDate
	}
	return 0
}

func (x *YARNDelegationTokenIdentifierProto) GetMaxDate() int64 {
	if x != nil && x.MaxDate != nil {
		return *x.MaxDate
	}
	return 0
}

func (x *YARNDelegationTokenIdentifierProto) GetSequenceNumber() int32 {
	if x != nil && x.SequenceNumber != nil {
		return *x.SequenceNumber
	}
	return 0
}

func (x *YARNDelegationTokenIdentifierProto) GetMasterKeyId() int32 {
	if x != nil && x.MasterKeyId != nil {
		return *x.MasterKeyId
	}
	return 0
}

type DockerCredentialTokenIdentifierProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistryUrl   *string `protobuf:"bytes,1,opt,name=registryUrl" json:"registryUrl,omitempty"`
	ApplicationId *string `protobuf:"bytes,2,opt,name=applicationId" json:"applicationId,omitempty"`
}

func (x *DockerCredentialTokenIdentifierProto) Reset() {
	*x = DockerCredentialTokenIdentifierProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_security_token_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerCredentialTokenIdentifierProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerCredentialTokenIdentifierProto) ProtoMessage() {}

func (x *DockerCredentialTokenIdentifierProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_security_token_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerCredentialTokenIdentifierProto.ProtoReflect.Descriptor instead.
func (*DockerCredentialTokenIdentifierProto) Descriptor() ([]byte, []int) {
	return file_yarn_security_token_proto_rawDescGZIP(), []int{5}
}

func (x *DockerCredentialTokenIdentifierProto) GetRegistryUrl() string {
	if x != nil && x.RegistryUrl != nil {
		return *x.RegistryUrl
	}
	return ""
}

func (x *DockerCredentialTokenIdentifierProto) GetApplicationId() string {
	if x != nil && x.ApplicationId != nil {
		return *x.ApplicationId
	}
	return ""
}

var File_yarn_security_token_proto protoreflect.FileDescriptor

var file_yarn_security_token_proto_rawDesc = []byte{
	0x0a, 0x19, 0x79, 0x61, 0x72, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x1a, 0x11, 0x79, 0x61, 0x72, 0x6e, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd4, 0x01, 0x0a, 0x16,
	0x4e, 0x4d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x4a, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x41, 0x74, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x49, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x05, 0x6b, 0x65, 0x79,
	0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x18, 0x41, 0x4d, 0x52, 0x4d, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x4a, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79,
	0x61, 0x72, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x61,
	0x70, 0x70, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x05, 0x6b,
	0x65, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x05,
	0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0xd5, 0x06, 0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6d, 0x48, 0x6f,
	0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6d,
	0x48, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x70, 0x70, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24,
	0x0a, 0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b,
	0x65, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x6d, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x5d, 0x0a, 0x15, 0x6c, 0x6f, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x15, 0x6c, 0x6f,
	0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x6e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x6e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x51, 0x0a, 0x0d,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x3a, 0x0a, 0x47, 0x55, 0x41, 0x52, 0x41, 0x4e, 0x54, 0x45, 0x45, 0x44,
	0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x3a, 0x01, 0x30, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x15,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x3a, 0x02, 0x2d, 0x31, 0x52,
	0x13, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x73, 0x22, 0x8c, 0x01,
	0x0a, 0x1e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x4d, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x4a, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e,
	0x79, 0x61, 0x72, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c,
	0x61, 0x70, 0x70, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xf2, 0x01, 0x0a,
	0x22, 0x59, 0x41, 0x52, 0x4e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6e,
	0x65, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6e, 0x65,
	0x77, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x61, 0x78, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6d, 0x61, 0x78, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x49,
	0x64, 0x22, 0x6e, 0x0a, 0x24, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2f, 0x67, 0x6f, 0x2d, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x61, 0x72, 0x6e, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e,
}

var (
	file_yarn_security_token_proto_rawDescOnce sync.Once
	file_yarn_security_token_proto_rawDescData = file_yarn_security_token_proto_rawDesc
)

func file_yarn_security_token_proto_rawDescGZIP() []byte {
	file_yarn_security_token_proto_rawDescOnce.Do(func() {
		file_yarn_security_token_proto_rawDescData = protoimpl.X.CompressGZIP(file_yarn_security_token_proto_rawDescData)
	})
	return file_yarn_security_token_proto_rawDescData
}

var file_yarn_security_token_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_yarn_security_token_proto_goTypes = []interface{}{
	(*NMTokenIdentifierProto)(nil),               // 0: hadoop.yarn.NMTokenIdentifierProto
	(*AMRMTokenIdentifierProto)(nil),             // 1: hadoop.yarn.AMRMTokenIdentifierProto
	(*ContainerTokenIdentifierProto)(nil),        // 2: hadoop.yarn.ContainerTokenIdentifierProto
	(*ClientToAMTokenIdentifierProto)(nil),       // 3: hadoop.yarn.ClientToAMTokenIdentifierProto
	(*YARNDelegationTokenIdentifierProto)(nil),   // 4: hadoop.yarn.YARNDelegationTokenIdentifierProto
	(*DockerCredentialTokenIdentifierProto)(nil), // 5: hadoop.yarn.DockerCredentialTokenIdentifierProto
	(*api.ApplicationAttemptIdProto)(nil),        // 6: hadoop.yarn.ApplicationAttemptIdProto
	(*api.NodeIdProto)(nil),                      // 7: hadoop.yarn.NodeIdProto
	(*api.ContainerIdProto)(nil),                 // 8: hadoop.yarn.ContainerIdProto
	(*api.ResourceProto)(nil),                    // 9: hadoop.yarn.ResourceProto
	(*api.PriorityProto)(nil),                    // 10: hadoop.yarn.PriorityProto
	(*api.LogAggregationContextProto)(nil),       // 11: hadoop.yarn.LogAggregationContextProto
	(api.ContainerTypeProto)(0),                  // 12: hadoop.yarn.ContainerTypeProto
	(api.ExecutionTypeProto)(0),                  // 13: hadoop.yarn.ExecutionTypeProto
}
var file_yarn_security_token_proto_depIdxs = []int32{
	6,  // 0: hadoop.yarn.NMTokenIdentifierProto.appAttemptId:type_name -> hadoop.yarn.ApplicationAttemptIdProto
	7,  // 1: hadoop.yarn.NMTokenIdentifierProto.nodeId:type_name -> hadoop.yarn.NodeIdProto
	6,  // 2: hadoop.yarn.AMRMTokenIdentifierProto.appAttemptId:type_name -> hadoop.yarn.ApplicationAttemptIdProto
	8,  // 3: hadoop.yarn.ContainerTokenIdentifierProto.containerId:type_name -> hadoop.yarn.ContainerIdProto
	9,  // 4: hadoop.yarn.ContainerTokenIdentifierProto.resource:type_name -> hadoop.yarn.ResourceProto
	10, // 5: hadoop.yarn.ContainerTokenIdentifierProto.priority:type_name -> hadoop.yarn.PriorityProto
	11, // 6: hadoop.yarn.ContainerTokenIdentifierProto.logAggregationContext:type_name -> hadoop.yarn.LogAggregationContextProto
	12, // 7: hadoop.yarn.ContainerTokenIdentifierProto.containerType:type_name -> hadoop.yarn.ContainerTypeProto
	13, // 8: hadoop.yarn.ContainerTokenIdentifierProto.executionType:type_name -> hadoop.yarn.ExecutionTypeProto
	6,  // 9: hadoop.yarn.ClientToAMTokenIdentifierProto.appAttemptId:type_name -> hadoop.yarn.ApplicationAttemptIdProto
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_yarn_security_token_proto_init() }
func file_yarn_security_token_proto_init() {
	if File_yarn_security_token_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yarn_security_token_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NMTokenIdentifierProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_security_token_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AMRMTokenIdentifierProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_security_token_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerTokenIdentifierProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_security_token_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientToAMTokenIdentifierProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_security_token_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YARNDelegationTokenIdentifierProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_security_token_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerCredentialTokenIdentifierProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yarn_security_token_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yarn_security_token_proto_goTypes,
		DependencyIndexes: file_yarn_security_token_proto_depIdxs,
		MessageInfos:      file_yarn_security_token_proto_msgTypes,
	}.Build()
	File_yarn_security_token_proto = out.File
	file_yarn_security_token_proto_rawDesc = nil
	file_yarn_security_token_proto_goTypes = nil
	file_yarn_security_token_proto_depIdxs = nil
}
