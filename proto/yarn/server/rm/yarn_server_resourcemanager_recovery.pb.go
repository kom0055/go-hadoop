//*
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.3
// source: yarn_server_resourcemanager_recovery.proto

package rm

import (
	common "github.com/kom0055/go-hadoop/proto/common"
	api "github.com/kom0055/go-hadoop/proto/yarn/api"
	common2 "github.com/kom0055/go-hadoop/proto/yarn/common"
	common1 "github.com/kom0055/go-hadoop/proto/yarn/server/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

////////////////////////////////////////////////////////////////////////
////// RM recovery related records /////////////////////////////////////
////////////////////////////////////////////////////////////////////////
type RMAppAttemptStateProto int32

const (
	RMAppAttemptStateProto_RMATTEMPT_NEW                       RMAppAttemptStateProto = 1
	RMAppAttemptStateProto_RMATTEMPT_SUBMITTED                 RMAppAttemptStateProto = 2
	RMAppAttemptStateProto_RMATTEMPT_SCHEDULED                 RMAppAttemptStateProto = 3
	RMAppAttemptStateProto_RMATTEMPT_ALLOCATED                 RMAppAttemptStateProto = 4
	RMAppAttemptStateProto_RMATTEMPT_LAUNCHED                  RMAppAttemptStateProto = 5
	RMAppAttemptStateProto_RMATTEMPT_FAILED                    RMAppAttemptStateProto = 6
	RMAppAttemptStateProto_RMATTEMPT_RUNNING                   RMAppAttemptStateProto = 7
	RMAppAttemptStateProto_RMATTEMPT_FINISHING                 RMAppAttemptStateProto = 8
	RMAppAttemptStateProto_RMATTEMPT_FINISHED                  RMAppAttemptStateProto = 9
	RMAppAttemptStateProto_RMATTEMPT_KILLED                    RMAppAttemptStateProto = 10
	RMAppAttemptStateProto_RMATTEMPT_ALLOCATED_SAVING          RMAppAttemptStateProto = 11
	RMAppAttemptStateProto_RMATTEMPT_LAUNCHED_UNMANAGED_SAVING RMAppAttemptStateProto = 12
	RMAppAttemptStateProto_RMATTEMPT_RECOVERED                 RMAppAttemptStateProto = 13
	RMAppAttemptStateProto_RMATTEMPT_FINAL_SAVING              RMAppAttemptStateProto = 14
)

// Enum value maps for RMAppAttemptStateProto.
var (
	RMAppAttemptStateProto_name = map[int32]string{
		1:  "RMATTEMPT_NEW",
		2:  "RMATTEMPT_SUBMITTED",
		3:  "RMATTEMPT_SCHEDULED",
		4:  "RMATTEMPT_ALLOCATED",
		5:  "RMATTEMPT_LAUNCHED",
		6:  "RMATTEMPT_FAILED",
		7:  "RMATTEMPT_RUNNING",
		8:  "RMATTEMPT_FINISHING",
		9:  "RMATTEMPT_FINISHED",
		10: "RMATTEMPT_KILLED",
		11: "RMATTEMPT_ALLOCATED_SAVING",
		12: "RMATTEMPT_LAUNCHED_UNMANAGED_SAVING",
		13: "RMATTEMPT_RECOVERED",
		14: "RMATTEMPT_FINAL_SAVING",
	}
	RMAppAttemptStateProto_value = map[string]int32{
		"RMATTEMPT_NEW":                       1,
		"RMATTEMPT_SUBMITTED":                 2,
		"RMATTEMPT_SCHEDULED":                 3,
		"RMATTEMPT_ALLOCATED":                 4,
		"RMATTEMPT_LAUNCHED":                  5,
		"RMATTEMPT_FAILED":                    6,
		"RMATTEMPT_RUNNING":                   7,
		"RMATTEMPT_FINISHING":                 8,
		"RMATTEMPT_FINISHED":                  9,
		"RMATTEMPT_KILLED":                    10,
		"RMATTEMPT_ALLOCATED_SAVING":          11,
		"RMATTEMPT_LAUNCHED_UNMANAGED_SAVING": 12,
		"RMATTEMPT_RECOVERED":                 13,
		"RMATTEMPT_FINAL_SAVING":              14,
	}
)

func (x RMAppAttemptStateProto) Enum() *RMAppAttemptStateProto {
	p := new(RMAppAttemptStateProto)
	*p = x
	return p
}

func (x RMAppAttemptStateProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RMAppAttemptStateProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_server_resourcemanager_recovery_proto_enumTypes[0].Descriptor()
}

func (RMAppAttemptStateProto) Type() protoreflect.EnumType {
	return &file_yarn_server_resourcemanager_recovery_proto_enumTypes[0]
}

func (x RMAppAttemptStateProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *RMAppAttemptStateProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = RMAppAttemptStateProto(num)
	return nil
}

// Deprecated: Use RMAppAttemptStateProto.Descriptor instead.
func (RMAppAttemptStateProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_server_resourcemanager_recovery_proto_rawDescGZIP(), []int{0}
}

type RMAppStateProto int32

const (
	RMAppStateProto_RMAPP_NEW          RMAppStateProto = 1
	RMAppStateProto_RMAPP_NEW_SAVING   RMAppStateProto = 2
	RMAppStateProto_RMAPP_SUBMITTED    RMAppStateProto = 3
	RMAppStateProto_RMAPP_ACCEPTED     RMAppStateProto = 4
	RMAppStateProto_RMAPP_RUNNING      RMAppStateProto = 5
	RMAppStateProto_RMAPP_FINAL_SAVING RMAppStateProto = 6
	RMAppStateProto_RMAPP_FINISHING    RMAppStateProto = 7
	RMAppStateProto_RMAPP_FINISHED     RMAppStateProto = 8
	RMAppStateProto_RMAPP_FAILED       RMAppStateProto = 9
	RMAppStateProto_RMAPP_KILLED       RMAppStateProto = 10
)

// Enum value maps for RMAppStateProto.
var (
	RMAppStateProto_name = map[int32]string{
		1:  "RMAPP_NEW",
		2:  "RMAPP_NEW_SAVING",
		3:  "RMAPP_SUBMITTED",
		4:  "RMAPP_ACCEPTED",
		5:  "RMAPP_RUNNING",
		6:  "RMAPP_FINAL_SAVING",
		7:  "RMAPP_FINISHING",
		8:  "RMAPP_FINISHED",
		9:  "RMAPP_FAILED",
		10: "RMAPP_KILLED",
	}
	RMAppStateProto_value = map[string]int32{
		"RMAPP_NEW":          1,
		"RMAPP_NEW_SAVING":   2,
		"RMAPP_SUBMITTED":    3,
		"RMAPP_ACCEPTED":     4,
		"RMAPP_RUNNING":      5,
		"RMAPP_FINAL_SAVING": 6,
		"RMAPP_FINISHING":    7,
		"RMAPP_FINISHED":     8,
		"RMAPP_FAILED":       9,
		"RMAPP_KILLED":       10,
	}
)

func (x RMAppStateProto) Enum() *RMAppStateProto {
	p := new(RMAppStateProto)
	*p = x
	return p
}

func (x RMAppStateProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RMAppStateProto) Descriptor() protoreflect.EnumDescriptor {
	return file_yarn_server_resourcemanager_recovery_proto_enumTypes[1].Descriptor()
}

func (RMAppStateProto) Type() protoreflect.EnumType {
	return &file_yarn_server_resourcemanager_recovery_proto_enumTypes[1]
}

func (x RMAppStateProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *RMAppStateProto) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = RMAppStateProto(num)
	return nil
}

// Deprecated: Use RMAppStateProto.Descriptor instead.
func (RMAppStateProto) EnumDescriptor() ([]byte, []int) {
	return file_yarn_server_resourcemanager_recovery_proto_rawDescGZIP(), []int{1}
}

type ApplicationStateDataProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmitTime                   *int64                                 `protobuf:"varint,1,opt,name=submit_time,json=submitTime" json:"submit_time,omitempty"`
	ApplicationSubmissionContext *api.ApplicationSubmissionContextProto `protobuf:"bytes,2,opt,name=application_submission_context,json=applicationSubmissionContext" json:"application_submission_context,omitempty"`
	User                         *string                                `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
	StartTime                    *int64                                 `protobuf:"varint,4,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	ApplicationState             *RMAppStateProto                       `protobuf:"varint,5,opt,name=application_state,json=applicationState,enum=hadoop.yarn.RMAppStateProto" json:"application_state,omitempty"`
	Diagnostics                  *string                                `protobuf:"bytes,6,opt,name=diagnostics,def=N/A" json:"diagnostics,omitempty"`
	FinishTime                   *int64                                 `protobuf:"varint,7,opt,name=finish_time,json=finishTime" json:"finish_time,omitempty"`
	CallerContext                *common.RPCCallerContextProto          `protobuf:"bytes,8,opt,name=caller_context,json=callerContext" json:"caller_context,omitempty"`
	ApplicationTimeouts          []*api.ApplicationTimeoutMapProto      `protobuf:"bytes,9,rep,name=application_timeouts,json=applicationTimeouts" json:"application_timeouts,omitempty"`
	LaunchTime                   *int64                                 `protobuf:"varint,10,opt,name=launch_time,json=launchTime" json:"launch_time,omitempty"`
}

// Default values for ApplicationStateDataProto fields.
const (
	Default_ApplicationStateDataProto_Diagnostics = string("N/A")
)

func (x *ApplicationStateDataProto) Reset() {
	*x = ApplicationStateDataProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_server_resourcemanager_recovery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationStateDataProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationStateDataProto) ProtoMessage() {}

func (x *ApplicationStateDataProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_server_resourcemanager_recovery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationStateDataProto.ProtoReflect.Descriptor instead.
func (*ApplicationStateDataProto) Descriptor() ([]byte, []int) {
	return file_yarn_server_resourcemanager_recovery_proto_rawDescGZIP(), []int{0}
}

func (x *ApplicationStateDataProto) GetSubmitTime() int64 {
	if x != nil && x.SubmitTime != nil {
		return *x.SubmitTime
	}
	return 0
}

func (x *ApplicationStateDataProto) GetApplicationSubmissionContext() *api.ApplicationSubmissionContextProto {
	if x != nil {
		return x.ApplicationSubmissionContext
	}
	return nil
}

func (x *ApplicationStateDataProto) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *ApplicationStateDataProto) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *ApplicationStateDataProto) GetApplicationState() RMAppStateProto {
	if x != nil && x.ApplicationState != nil {
		return *x.ApplicationState
	}
	return RMAppStateProto_RMAPP_NEW
}

func (x *ApplicationStateDataProto) GetDiagnostics() string {
	if x != nil && x.Diagnostics != nil {
		return *x.Diagnostics
	}
	return Default_ApplicationStateDataProto_Diagnostics
}

func (x *ApplicationStateDataProto) GetFinishTime() int64 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *ApplicationStateDataProto) GetCallerContext() *common.RPCCallerContextProto {
	if x != nil {
		return x.CallerContext
	}
	return nil
}

func (x *ApplicationStateDataProto) GetApplicationTimeouts() []*api.ApplicationTimeoutMapProto {
	if x != nil {
		return x.ApplicationTimeouts
	}
	return nil
}

func (x *ApplicationStateDataProto) GetLaunchTime() int64 {
	if x != nil && x.LaunchTime != nil {
		return *x.LaunchTime
	}
	return 0
}

type ApplicationAttemptStateDataProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttemptId                   *api.ApplicationAttemptIdProto   `protobuf:"bytes,1,opt,name=attemptId" json:"attemptId,omitempty"`
	MasterContainer             *api.ContainerProto              `protobuf:"bytes,2,opt,name=master_container,json=masterContainer" json:"master_container,omitempty"`
	AppAttemptTokens            []byte                           `protobuf:"bytes,3,opt,name=app_attempt_tokens,json=appAttemptTokens" json:"app_attempt_tokens,omitempty"`
	AppAttemptState             *RMAppAttemptStateProto          `protobuf:"varint,4,opt,name=app_attempt_state,json=appAttemptState,enum=hadoop.yarn.RMAppAttemptStateProto" json:"app_attempt_state,omitempty"`
	FinalTrackingUrl            *string                          `protobuf:"bytes,5,opt,name=final_tracking_url,json=finalTrackingUrl" json:"final_tracking_url,omitempty"`
	Diagnostics                 *string                          `protobuf:"bytes,6,opt,name=diagnostics,def=N/A" json:"diagnostics,omitempty"`
	StartTime                   *int64                           `protobuf:"varint,7,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	FinalApplicationStatus      *api.FinalApplicationStatusProto `protobuf:"varint,8,opt,name=final_application_status,json=finalApplicationStatus,enum=hadoop.yarn.FinalApplicationStatusProto" json:"final_application_status,omitempty"`
	AmContainerExitStatus       *int32                           `protobuf:"varint,9,opt,name=am_container_exit_status,json=amContainerExitStatus,def=-1000" json:"am_container_exit_status,omitempty"`
	MemorySeconds               *int64                           `protobuf:"varint,10,opt,name=memory_seconds,json=memorySeconds" json:"memory_seconds,omitempty"`
	VcoreSeconds                *int64                           `protobuf:"varint,11,opt,name=vcore_seconds,json=vcoreSeconds" json:"vcore_seconds,omitempty"`
	FinishTime                  *int64                           `protobuf:"varint,12,opt,name=finish_time,json=finishTime" json:"finish_time,omitempty"`
	PreemptedMemorySeconds      *int64                           `protobuf:"varint,13,opt,name=preempted_memory_seconds,json=preemptedMemorySeconds" json:"preempted_memory_seconds,omitempty"`
	PreemptedVcoreSeconds       *int64                           `protobuf:"varint,14,opt,name=preempted_vcore_seconds,json=preemptedVcoreSeconds" json:"preempted_vcore_seconds,omitempty"`
	ApplicationResourceUsageMap []*api.StringLongMapProto        `protobuf:"bytes,15,rep,name=application_resource_usage_map,json=applicationResourceUsageMap" json:"application_resource_usage_map,omitempty"`
	PreemptedResourceUsageMap   []*api.StringLongMapProto        `protobuf:"bytes,16,rep,name=preempted_resource_usage_map,json=preemptedResourceUsageMap" json:"preempted_resource_usage_map,omitempty"`
	TotalAllocatedContainers    *int32                           `protobuf:"varint,17,opt,name=total_allocated_containers,json=totalAllocatedContainers" json:"total_allocated_containers,omitempty"`
}

// Default values for ApplicationAttemptStateDataProto fields.
const (
	Default_ApplicationAttemptStateDataProto_Diagnostics           = string("N/A")
	Default_ApplicationAttemptStateDataProto_AmContainerExitStatus = int32(-1000)
)

func (x *ApplicationAttemptStateDataProto) Reset() {
	*x = ApplicationAttemptStateDataProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_server_resourcemanager_recovery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationAttemptStateDataProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationAttemptStateDataProto) ProtoMessage() {}

func (x *ApplicationAttemptStateDataProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_server_resourcemanager_recovery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationAttemptStateDataProto.ProtoReflect.Descriptor instead.
func (*ApplicationAttemptStateDataProto) Descriptor() ([]byte, []int) {
	return file_yarn_server_resourcemanager_recovery_proto_rawDescGZIP(), []int{1}
}

func (x *ApplicationAttemptStateDataProto) GetAttemptId() *api.ApplicationAttemptIdProto {
	if x != nil {
		return x.AttemptId
	}
	return nil
}

func (x *ApplicationAttemptStateDataProto) GetMasterContainer() *api.ContainerProto {
	if x != nil {
		return x.MasterContainer
	}
	return nil
}

func (x *ApplicationAttemptStateDataProto) GetAppAttemptTokens() []byte {
	if x != nil {
		return x.AppAttemptTokens
	}
	return nil
}

func (x *ApplicationAttemptStateDataProto) GetAppAttemptState() RMAppAttemptStateProto {
	if x != nil && x.AppAttemptState != nil {
		return *x.AppAttemptState
	}
	return RMAppAttemptStateProto_RMATTEMPT_NEW
}

func (x *ApplicationAttemptStateDataProto) GetFinalTrackingUrl() string {
	if x != nil && x.FinalTrackingUrl != nil {
		return *x.FinalTrackingUrl
	}
	return ""
}

func (x *ApplicationAttemptStateDataProto) GetDiagnostics() string {
	if x != nil && x.Diagnostics != nil {
		return *x.Diagnostics
	}
	return Default_ApplicationAttemptStateDataProto_Diagnostics
}

func (x *ApplicationAttemptStateDataProto) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *ApplicationAttemptStateDataProto) GetFinalApplicationStatus() api.FinalApplicationStatusProto {
	if x != nil && x.FinalApplicationStatus != nil {
		return *x.FinalApplicationStatus
	}
	return api.FinalApplicationStatusProto(0)
}

func (x *ApplicationAttemptStateDataProto) GetAmContainerExitStatus() int32 {
	if x != nil && x.AmContainerExitStatus != nil {
		return *x.AmContainerExitStatus
	}
	return Default_ApplicationAttemptStateDataProto_AmContainerExitStatus
}

func (x *ApplicationAttemptStateDataProto) GetMemorySeconds() int64 {
	if x != nil && x.MemorySeconds != nil {
		return *x.MemorySeconds
	}
	return 0
}

func (x *ApplicationAttemptStateDataProto) GetVcoreSeconds() int64 {
	if x != nil && x.VcoreSeconds != nil {
		return *x.VcoreSeconds
	}
	return 0
}

func (x *ApplicationAttemptStateDataProto) GetFinishTime() int64 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *ApplicationAttemptStateDataProto) GetPreemptedMemorySeconds() int64 {
	if x != nil && x.PreemptedMemorySeconds != nil {
		return *x.PreemptedMemorySeconds
	}
	return 0
}

func (x *ApplicationAttemptStateDataProto) GetPreemptedVcoreSeconds() int64 {
	if x != nil && x.PreemptedVcoreSeconds != nil {
		return *x.PreemptedVcoreSeconds
	}
	return 0
}

func (x *ApplicationAttemptStateDataProto) GetApplicationResourceUsageMap() []*api.StringLongMapProto {
	if x != nil {
		return x.ApplicationResourceUsageMap
	}
	return nil
}

func (x *ApplicationAttemptStateDataProto) GetPreemptedResourceUsageMap() []*api.StringLongMapProto {
	if x != nil {
		return x.PreemptedResourceUsageMap
	}
	return nil
}

func (x *ApplicationAttemptStateDataProto) GetTotalAllocatedContainers() int32 {
	if x != nil && x.TotalAllocatedContainers != nil {
		return *x.TotalAllocatedContainers
	}
	return 0
}

type EpochProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch *int64 `protobuf:"varint,1,opt,name=epoch" json:"epoch,omitempty"`
}

func (x *EpochProto) Reset() {
	*x = EpochProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_server_resourcemanager_recovery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpochProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpochProto) ProtoMessage() {}

func (x *EpochProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_server_resourcemanager_recovery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpochProto.ProtoReflect.Descriptor instead.
func (*EpochProto) Descriptor() ([]byte, []int) {
	return file_yarn_server_resourcemanager_recovery_proto_rawDescGZIP(), []int{2}
}

func (x *EpochProto) GetEpoch() int64 {
	if x != nil && x.Epoch != nil {
		return *x.Epoch
	}
	return 0
}

type AMRMTokenSecretManagerStateProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentMasterKey *common1.MasterKeyProto `protobuf:"bytes,1,opt,name=current_master_key,json=currentMasterKey" json:"current_master_key,omitempty"`
	NextMasterKey    *common1.MasterKeyProto `protobuf:"bytes,2,opt,name=next_master_key,json=nextMasterKey" json:"next_master_key,omitempty"`
}

func (x *AMRMTokenSecretManagerStateProto) Reset() {
	*x = AMRMTokenSecretManagerStateProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_server_resourcemanager_recovery_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AMRMTokenSecretManagerStateProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AMRMTokenSecretManagerStateProto) ProtoMessage() {}

func (x *AMRMTokenSecretManagerStateProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_server_resourcemanager_recovery_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AMRMTokenSecretManagerStateProto.ProtoReflect.Descriptor instead.
func (*AMRMTokenSecretManagerStateProto) Descriptor() ([]byte, []int) {
	return file_yarn_server_resourcemanager_recovery_proto_rawDescGZIP(), []int{3}
}

func (x *AMRMTokenSecretManagerStateProto) GetCurrentMasterKey() *common1.MasterKeyProto {
	if x != nil {
		return x.CurrentMasterKey
	}
	return nil
}

func (x *AMRMTokenSecretManagerStateProto) GetNextMasterKey() *common1.MasterKeyProto {
	if x != nil {
		return x.NextMasterKey
	}
	return nil
}

type RMDelegationTokenIdentifierDataProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenIdentifier *common2.YARNDelegationTokenIdentifierProto `protobuf:"bytes,1,opt,name=token_identifier,json=tokenIdentifier" json:"token_identifier,omitempty"`
	RenewDate       *int64                                      `protobuf:"varint,2,opt,name=renewDate" json:"renewDate,omitempty"`
}

func (x *RMDelegationTokenIdentifierDataProto) Reset() {
	*x = RMDelegationTokenIdentifierDataProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yarn_server_resourcemanager_recovery_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RMDelegationTokenIdentifierDataProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RMDelegationTokenIdentifierDataProto) ProtoMessage() {}

func (x *RMDelegationTokenIdentifierDataProto) ProtoReflect() protoreflect.Message {
	mi := &file_yarn_server_resourcemanager_recovery_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RMDelegationTokenIdentifierDataProto.ProtoReflect.Descriptor instead.
func (*RMDelegationTokenIdentifierDataProto) Descriptor() ([]byte, []int) {
	return file_yarn_server_resourcemanager_recovery_proto_rawDescGZIP(), []int{4}
}

func (x *RMDelegationTokenIdentifierDataProto) GetTokenIdentifier() *common2.YARNDelegationTokenIdentifierProto {
	if x != nil {
		return x.TokenIdentifier
	}
	return nil
}

func (x *RMDelegationTokenIdentifierDataProto) GetRenewDate() int64 {
	if x != nil && x.RenewDate != nil {
		return *x.RenewDate
	}
	return 0
}

var File_yarn_server_resourcemanager_recovery_proto protoreflect.FileDescriptor

var file_yarn_server_resourcemanager_recovery_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x79, 0x61, 0x72, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x1a, 0x1f, 0x79, 0x61, 0x72, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x79, 0x61, 0x72, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x79,
	0x61, 0x72, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x52, 0x70, 0x63, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x04, 0x0a, 0x19, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x74, 0x0a, 0x1e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x1c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x49, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x4d, 0x41, 0x70, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0b,
	0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x3a, 0x03, 0x4e, 0x2f, 0x41, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x50, 0x43,
	0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x5a, 0x0a, 0x14, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x13, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xac,
	0x08, 0x0a, 0x20, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x44, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e,
	0x79, 0x61, 0x72, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x09,
	0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x0f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x61,
	0x70, 0x70, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12,
	0x4f, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x52, 0x4d, 0x41, 0x70, 0x70, 0x41, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x0f, 0x61, 0x70, 0x70, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x25,
	0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x3a, 0x03, 0x4e, 0x2f, 0x41, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x62, 0x0a, 0x18, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e,
	0x79, 0x61, 0x72, 0x6e, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x16, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x18, 0x61, 0x6d, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x05, 0x2d, 0x31, 0x30, 0x30,
	0x30, 0x52, 0x15, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x78,
	0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x76, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x76, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74,
	0x65, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74,
	0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x36, 0x0a, 0x17, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x15, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x56, 0x63, 0x6f, 0x72, 0x65,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x64, 0x0a, 0x1e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x1b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x60, 0x0a,
	0x1c, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x10, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x19, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x70, 0x12,
	0x3c, 0x0a, 0x1a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x22, 0x0a,
	0x0a, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x22, 0xb2, 0x01, 0x0a, 0x20, 0x41, 0x4d, 0x52, 0x4d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x49, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x12, 0x43, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b,
	0x65, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x22, 0xa0, 0x01, 0x0a, 0x24, 0x52, 0x4d, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x5a, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x59, 0x41, 0x52, 0x4e, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x6e, 0x65, 0x77, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x72, 0x65, 0x6e, 0x65, 0x77, 0x44, 0x61, 0x74, 0x65, 0x2a, 0x80, 0x03, 0x0a, 0x16, 0x52, 0x4d,
	0x41, 0x70, 0x70, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x4d, 0x41, 0x54, 0x54, 0x45, 0x4d, 0x50,
	0x54, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x4d, 0x41, 0x54, 0x54,
	0x45, 0x4d, 0x50, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x17, 0x0a, 0x13, 0x52, 0x4d, 0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x5f, 0x53, 0x43,
	0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x4d, 0x41,
	0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x4d, 0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x5f,
	0x4c, 0x41, 0x55, 0x4e, 0x43, 0x48, 0x45, 0x44, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x4d,
	0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x06,
	0x12, 0x15, 0x0a, 0x11, 0x52, 0x4d, 0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x5f, 0x52, 0x55,
	0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x4d, 0x41, 0x54, 0x54,
	0x45, 0x4d, 0x50, 0x54, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x08,
	0x12, 0x16, 0x0a, 0x12, 0x52, 0x4d, 0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x5f, 0x46, 0x49,
	0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x09, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x4d, 0x41, 0x54,
	0x54, 0x45, 0x4d, 0x50, 0x54, 0x5f, 0x4b, 0x49, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x1e,
	0x0a, 0x1a, 0x52, 0x4d, 0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x4f,
	0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x53, 0x41, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x0b, 0x12, 0x27,
	0x0a, 0x23, 0x52, 0x4d, 0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x5f, 0x4c, 0x41, 0x55, 0x4e,
	0x43, 0x48, 0x45, 0x44, 0x5f, 0x55, 0x4e, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x44, 0x5f, 0x53,
	0x41, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x0c, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x4d, 0x41, 0x54, 0x54,
	0x45, 0x4d, 0x50, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x0d,
	0x12, 0x1a, 0x0a, 0x16, 0x52, 0x4d, 0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x5f, 0x46, 0x49,
	0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x41, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x0e, 0x2a, 0xd7, 0x01, 0x0a,
	0x0f, 0x52, 0x4d, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x0a, 0x09, 0x52, 0x4d, 0x41, 0x50, 0x50, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x52, 0x4d, 0x41, 0x50, 0x50, 0x5f, 0x4e, 0x45, 0x57, 0x5f, 0x53, 0x41, 0x56,
	0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x4d, 0x41, 0x50, 0x50, 0x5f, 0x53,
	0x55, 0x42, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x4d,
	0x41, 0x50, 0x50, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x11,
	0x0a, 0x0d, 0x52, 0x4d, 0x41, 0x50, 0x50, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10,
	0x05, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x4d, 0x41, 0x50, 0x50, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c,
	0x5f, 0x53, 0x41, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x4d, 0x41,
	0x50, 0x50, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x12, 0x12,
	0x0a, 0x0e, 0x52, 0x4d, 0x41, 0x50, 0x50, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44,
	0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x4d, 0x41, 0x50, 0x50, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x4d, 0x41, 0x50, 0x50, 0x5f, 0x4b, 0x49,
	0x4c, 0x4c, 0x45, 0x44, 0x10, 0x0a, 0x42, 0x80, 0x01, 0x0a, 0x1c, 0x6f, 0x72, 0x67, 0x2e, 0x61,
	0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x27, 0x59, 0x61, 0x72, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x6d,
	0x30, 0x30, 0x35, 0x35, 0x2f, 0x67, 0x6f, 0x2d, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x61, 0x72, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2f, 0x72, 0x6d, 0x88, 0x01, 0x01, 0xa0, 0x01, 0x01,
}

var (
	file_yarn_server_resourcemanager_recovery_proto_rawDescOnce sync.Once
	file_yarn_server_resourcemanager_recovery_proto_rawDescData = file_yarn_server_resourcemanager_recovery_proto_rawDesc
)

func file_yarn_server_resourcemanager_recovery_proto_rawDescGZIP() []byte {
	file_yarn_server_resourcemanager_recovery_proto_rawDescOnce.Do(func() {
		file_yarn_server_resourcemanager_recovery_proto_rawDescData = protoimpl.X.CompressGZIP(file_yarn_server_resourcemanager_recovery_proto_rawDescData)
	})
	return file_yarn_server_resourcemanager_recovery_proto_rawDescData
}

var file_yarn_server_resourcemanager_recovery_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_yarn_server_resourcemanager_recovery_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_yarn_server_resourcemanager_recovery_proto_goTypes = []interface{}{
	(RMAppAttemptStateProto)(0),                        // 0: hadoop.yarn.RMAppAttemptStateProto
	(RMAppStateProto)(0),                               // 1: hadoop.yarn.RMAppStateProto
	(*ApplicationStateDataProto)(nil),                  // 2: hadoop.yarn.ApplicationStateDataProto
	(*ApplicationAttemptStateDataProto)(nil),           // 3: hadoop.yarn.ApplicationAttemptStateDataProto
	(*EpochProto)(nil),                                 // 4: hadoop.yarn.EpochProto
	(*AMRMTokenSecretManagerStateProto)(nil),           // 5: hadoop.yarn.AMRMTokenSecretManagerStateProto
	(*RMDelegationTokenIdentifierDataProto)(nil),       // 6: hadoop.yarn.RMDelegationTokenIdentifierDataProto
	(*api.ApplicationSubmissionContextProto)(nil),      // 7: hadoop.yarn.ApplicationSubmissionContextProto
	(*common.RPCCallerContextProto)(nil),               // 8: hadoop.common.RPCCallerContextProto
	(*api.ApplicationTimeoutMapProto)(nil),             // 9: hadoop.yarn.ApplicationTimeoutMapProto
	(*api.ApplicationAttemptIdProto)(nil),              // 10: hadoop.yarn.ApplicationAttemptIdProto
	(*api.ContainerProto)(nil),                         // 11: hadoop.yarn.ContainerProto
	(api.FinalApplicationStatusProto)(0),               // 12: hadoop.yarn.FinalApplicationStatusProto
	(*api.StringLongMapProto)(nil),                     // 13: hadoop.yarn.StringLongMapProto
	(*common1.MasterKeyProto)(nil),                     // 14: hadoop.yarn.MasterKeyProto
	(*common2.YARNDelegationTokenIdentifierProto)(nil), // 15: hadoop.yarn.YARNDelegationTokenIdentifierProto
}
var file_yarn_server_resourcemanager_recovery_proto_depIdxs = []int32{
	7,  // 0: hadoop.yarn.ApplicationStateDataProto.application_submission_context:type_name -> hadoop.yarn.ApplicationSubmissionContextProto
	1,  // 1: hadoop.yarn.ApplicationStateDataProto.application_state:type_name -> hadoop.yarn.RMAppStateProto
	8,  // 2: hadoop.yarn.ApplicationStateDataProto.caller_context:type_name -> hadoop.common.RPCCallerContextProto
	9,  // 3: hadoop.yarn.ApplicationStateDataProto.application_timeouts:type_name -> hadoop.yarn.ApplicationTimeoutMapProto
	10, // 4: hadoop.yarn.ApplicationAttemptStateDataProto.attemptId:type_name -> hadoop.yarn.ApplicationAttemptIdProto
	11, // 5: hadoop.yarn.ApplicationAttemptStateDataProto.master_container:type_name -> hadoop.yarn.ContainerProto
	0,  // 6: hadoop.yarn.ApplicationAttemptStateDataProto.app_attempt_state:type_name -> hadoop.yarn.RMAppAttemptStateProto
	12, // 7: hadoop.yarn.ApplicationAttemptStateDataProto.final_application_status:type_name -> hadoop.yarn.FinalApplicationStatusProto
	13, // 8: hadoop.yarn.ApplicationAttemptStateDataProto.application_resource_usage_map:type_name -> hadoop.yarn.StringLongMapProto
	13, // 9: hadoop.yarn.ApplicationAttemptStateDataProto.preempted_resource_usage_map:type_name -> hadoop.yarn.StringLongMapProto
	14, // 10: hadoop.yarn.AMRMTokenSecretManagerStateProto.current_master_key:type_name -> hadoop.yarn.MasterKeyProto
	14, // 11: hadoop.yarn.AMRMTokenSecretManagerStateProto.next_master_key:type_name -> hadoop.yarn.MasterKeyProto
	15, // 12: hadoop.yarn.RMDelegationTokenIdentifierDataProto.token_identifier:type_name -> hadoop.yarn.YARNDelegationTokenIdentifierProto
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_yarn_server_resourcemanager_recovery_proto_init() }
func file_yarn_server_resourcemanager_recovery_proto_init() {
	if File_yarn_server_resourcemanager_recovery_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yarn_server_resourcemanager_recovery_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationStateDataProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_server_resourcemanager_recovery_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationAttemptStateDataProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_server_resourcemanager_recovery_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpochProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_server_resourcemanager_recovery_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AMRMTokenSecretManagerStateProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yarn_server_resourcemanager_recovery_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RMDelegationTokenIdentifierDataProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yarn_server_resourcemanager_recovery_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yarn_server_resourcemanager_recovery_proto_goTypes,
		DependencyIndexes: file_yarn_server_resourcemanager_recovery_proto_depIdxs,
		EnumInfos:         file_yarn_server_resourcemanager_recovery_proto_enumTypes,
		MessageInfos:      file_yarn_server_resourcemanager_recovery_proto_msgTypes,
	}.Build()
	File_yarn_server_resourcemanager_recovery_proto = out.File
	file_yarn_server_resourcemanager_recovery_proto_rawDesc = nil
	file_yarn_server_resourcemanager_recovery_proto_goTypes = nil
	file_yarn_server_resourcemanager_recovery_proto_depIdxs = nil
}
