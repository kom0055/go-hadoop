//*
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//*
// These .proto interfaces are private and stable.
// Please see http://wiki.apache.org/hadoop/Compatibility
// for what changes are allowed for a *stable* .proto interface.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.3
// source: QJournalProtocol.proto

package qjournal

import (
	hdfs "github.com/kom0055/go-hadoop/proto/hdfs"
	_ "github.com/kom0055/go-hadoop/proto/hdfs/client"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JournalIdProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *string `protobuf:"bytes,1,req,name=identifier" json:"identifier,omitempty"`
}

func (x *JournalIdProto) Reset() {
	*x = JournalIdProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JournalIdProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JournalIdProto) ProtoMessage() {}

func (x *JournalIdProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JournalIdProto.ProtoReflect.Descriptor instead.
func (*JournalIdProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{0}
}

func (x *JournalIdProto) GetIdentifier() string {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return ""
}

type RequestInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JournalId       *JournalIdProto `protobuf:"bytes,1,req,name=journalId" json:"journalId,omitempty"`
	Epoch           *uint64         `protobuf:"varint,2,req,name=epoch" json:"epoch,omitempty"`
	IpcSerialNumber *uint64         `protobuf:"varint,3,req,name=ipcSerialNumber" json:"ipcSerialNumber,omitempty"`
	// Whenever a writer makes a request, it informs
	// the node of the latest committed txid. This may
	// be higher than the transaction data included in the
	// request itself, eg in the case that the node has
	// fallen behind.
	CommittedTxId *uint64 `protobuf:"varint,4,opt,name=committedTxId" json:"committedTxId,omitempty"`
	NameServiceId *string `protobuf:"bytes,5,opt,name=nameServiceId" json:"nameServiceId,omitempty"`
}

func (x *RequestInfoProto) Reset() {
	*x = RequestInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestInfoProto) ProtoMessage() {}

func (x *RequestInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestInfoProto.ProtoReflect.Descriptor instead.
func (*RequestInfoProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{1}
}

func (x *RequestInfoProto) GetJournalId() *JournalIdProto {
	if x != nil {
		return x.JournalId
	}
	return nil
}

func (x *RequestInfoProto) GetEpoch() uint64 {
	if x != nil && x.Epoch != nil {
		return *x.Epoch
	}
	return 0
}

func (x *RequestInfoProto) GetIpcSerialNumber() uint64 {
	if x != nil && x.IpcSerialNumber != nil {
		return *x.IpcSerialNumber
	}
	return 0
}

func (x *RequestInfoProto) GetCommittedTxId() uint64 {
	if x != nil && x.CommittedTxId != nil {
		return *x.CommittedTxId
	}
	return 0
}

func (x *RequestInfoProto) GetNameServiceId() string {
	if x != nil && x.NameServiceId != nil {
		return *x.NameServiceId
	}
	return ""
}

type SegmentStateProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTxId    *uint64 `protobuf:"varint,1,req,name=startTxId" json:"startTxId,omitempty"`
	EndTxId      *uint64 `protobuf:"varint,2,req,name=endTxId" json:"endTxId,omitempty"`
	IsInProgress *bool   `protobuf:"varint,3,req,name=isInProgress" json:"isInProgress,omitempty"`
}

func (x *SegmentStateProto) Reset() {
	*x = SegmentStateProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentStateProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentStateProto) ProtoMessage() {}

func (x *SegmentStateProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentStateProto.ProtoReflect.Descriptor instead.
func (*SegmentStateProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{2}
}

func (x *SegmentStateProto) GetStartTxId() uint64 {
	if x != nil && x.StartTxId != nil {
		return *x.StartTxId
	}
	return 0
}

func (x *SegmentStateProto) GetEndTxId() uint64 {
	if x != nil && x.EndTxId != nil {
		return *x.EndTxId
	}
	return 0
}

func (x *SegmentStateProto) GetIsInProgress() bool {
	if x != nil && x.IsInProgress != nil {
		return *x.IsInProgress
	}
	return false
}

//*
// The storage format used on local disk for previously
// accepted decisions.
type PersistedRecoveryPaxosData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SegmentState    *SegmentStateProto `protobuf:"bytes,1,req,name=segmentState" json:"segmentState,omitempty"`
	AcceptedInEpoch *uint64            `protobuf:"varint,2,req,name=acceptedInEpoch" json:"acceptedInEpoch,omitempty"`
}

func (x *PersistedRecoveryPaxosData) Reset() {
	*x = PersistedRecoveryPaxosData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersistedRecoveryPaxosData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersistedRecoveryPaxosData) ProtoMessage() {}

func (x *PersistedRecoveryPaxosData) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersistedRecoveryPaxosData.ProtoReflect.Descriptor instead.
func (*PersistedRecoveryPaxosData) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{3}
}

func (x *PersistedRecoveryPaxosData) GetSegmentState() *SegmentStateProto {
	if x != nil {
		return x.SegmentState
	}
	return nil
}

func (x *PersistedRecoveryPaxosData) GetAcceptedInEpoch() uint64 {
	if x != nil && x.AcceptedInEpoch != nil {
		return *x.AcceptedInEpoch
	}
	return 0
}

type JournalRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqInfo       *RequestInfoProto `protobuf:"bytes,1,req,name=reqInfo" json:"reqInfo,omitempty"`
	FirstTxnId    *uint64           `protobuf:"varint,2,req,name=firstTxnId" json:"firstTxnId,omitempty"`
	NumTxns       *uint32           `protobuf:"varint,3,req,name=numTxns" json:"numTxns,omitempty"`
	Records       []byte            `protobuf:"bytes,4,req,name=records" json:"records,omitempty"`
	SegmentTxnId  *uint64           `protobuf:"varint,5,req,name=segmentTxnId" json:"segmentTxnId,omitempty"`
	NameServiceId *string           `protobuf:"bytes,6,opt,name=nameServiceId" json:"nameServiceId,omitempty"`
}

func (x *JournalRequestProto) Reset() {
	*x = JournalRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JournalRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JournalRequestProto) ProtoMessage() {}

func (x *JournalRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JournalRequestProto.ProtoReflect.Descriptor instead.
func (*JournalRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{4}
}

func (x *JournalRequestProto) GetReqInfo() *RequestInfoProto {
	if x != nil {
		return x.ReqInfo
	}
	return nil
}

func (x *JournalRequestProto) GetFirstTxnId() uint64 {
	if x != nil && x.FirstTxnId != nil {
		return *x.FirstTxnId
	}
	return 0
}

func (x *JournalRequestProto) GetNumTxns() uint32 {
	if x != nil && x.NumTxns != nil {
		return *x.NumTxns
	}
	return 0
}

func (x *JournalRequestProto) GetRecords() []byte {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *JournalRequestProto) GetSegmentTxnId() uint64 {
	if x != nil && x.SegmentTxnId != nil {
		return *x.SegmentTxnId
	}
	return 0
}

func (x *JournalRequestProto) GetNameServiceId() string {
	if x != nil && x.NameServiceId != nil {
		return *x.NameServiceId
	}
	return ""
}

type JournalResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JournalResponseProto) Reset() {
	*x = JournalResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JournalResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JournalResponseProto) ProtoMessage() {}

func (x *JournalResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JournalResponseProto.ProtoReflect.Descriptor instead.
func (*JournalResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{5}
}

type HeartbeatRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqInfo *RequestInfoProto `protobuf:"bytes,1,req,name=reqInfo" json:"reqInfo,omitempty"`
}

func (x *HeartbeatRequestProto) Reset() {
	*x = HeartbeatRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequestProto) ProtoMessage() {}

func (x *HeartbeatRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequestProto.ProtoReflect.Descriptor instead.
func (*HeartbeatRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{6}
}

func (x *HeartbeatRequestProto) GetReqInfo() *RequestInfoProto {
	if x != nil {
		return x.ReqInfo
	}
	return nil
}

type HeartbeatResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartbeatResponseProto) Reset() {
	*x = HeartbeatResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponseProto) ProtoMessage() {}

func (x *HeartbeatResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponseProto.ProtoReflect.Descriptor instead.
func (*HeartbeatResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{7}
}

//*
// startLogSegment()
type StartLogSegmentRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqInfo       *RequestInfoProto `protobuf:"bytes,1,req,name=reqInfo" json:"reqInfo,omitempty"`
	Txid          *uint64           `protobuf:"varint,2,req,name=txid" json:"txid,omitempty"`                     // Transaction ID
	LayoutVersion *int32            `protobuf:"zigzag32,3,opt,name=layoutVersion" json:"layoutVersion,omitempty"` // the LayoutVersion in the client
}

func (x *StartLogSegmentRequestProto) Reset() {
	*x = StartLogSegmentRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartLogSegmentRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartLogSegmentRequestProto) ProtoMessage() {}

func (x *StartLogSegmentRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartLogSegmentRequestProto.ProtoReflect.Descriptor instead.
func (*StartLogSegmentRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{8}
}

func (x *StartLogSegmentRequestProto) GetReqInfo() *RequestInfoProto {
	if x != nil {
		return x.ReqInfo
	}
	return nil
}

func (x *StartLogSegmentRequestProto) GetTxid() uint64 {
	if x != nil && x.Txid != nil {
		return *x.Txid
	}
	return 0
}

func (x *StartLogSegmentRequestProto) GetLayoutVersion() int32 {
	if x != nil && x.LayoutVersion != nil {
		return *x.LayoutVersion
	}
	return 0
}

type StartLogSegmentResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartLogSegmentResponseProto) Reset() {
	*x = StartLogSegmentResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartLogSegmentResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartLogSegmentResponseProto) ProtoMessage() {}

func (x *StartLogSegmentResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartLogSegmentResponseProto.ProtoReflect.Descriptor instead.
func (*StartLogSegmentResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{9}
}

//*
// finalizeLogSegment()
type FinalizeLogSegmentRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqInfo   *RequestInfoProto `protobuf:"bytes,1,req,name=reqInfo" json:"reqInfo,omitempty"`
	StartTxId *uint64           `protobuf:"varint,2,req,name=startTxId" json:"startTxId,omitempty"`
	EndTxId   *uint64           `protobuf:"varint,3,req,name=endTxId" json:"endTxId,omitempty"`
}

func (x *FinalizeLogSegmentRequestProto) Reset() {
	*x = FinalizeLogSegmentRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalizeLogSegmentRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeLogSegmentRequestProto) ProtoMessage() {}

func (x *FinalizeLogSegmentRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeLogSegmentRequestProto.ProtoReflect.Descriptor instead.
func (*FinalizeLogSegmentRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{10}
}

func (x *FinalizeLogSegmentRequestProto) GetReqInfo() *RequestInfoProto {
	if x != nil {
		return x.ReqInfo
	}
	return nil
}

func (x *FinalizeLogSegmentRequestProto) GetStartTxId() uint64 {
	if x != nil && x.StartTxId != nil {
		return *x.StartTxId
	}
	return 0
}

func (x *FinalizeLogSegmentRequestProto) GetEndTxId() uint64 {
	if x != nil && x.EndTxId != nil {
		return *x.EndTxId
	}
	return 0
}

type FinalizeLogSegmentResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FinalizeLogSegmentResponseProto) Reset() {
	*x = FinalizeLogSegmentResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalizeLogSegmentResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeLogSegmentResponseProto) ProtoMessage() {}

func (x *FinalizeLogSegmentResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeLogSegmentResponseProto.ProtoReflect.Descriptor instead.
func (*FinalizeLogSegmentResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{11}
}

//*
// purgeLogs()
type PurgeLogsRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqInfo       *RequestInfoProto `protobuf:"bytes,1,req,name=reqInfo" json:"reqInfo,omitempty"`
	MinTxIdToKeep *uint64           `protobuf:"varint,2,req,name=minTxIdToKeep" json:"minTxIdToKeep,omitempty"`
}

func (x *PurgeLogsRequestProto) Reset() {
	*x = PurgeLogsRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurgeLogsRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeLogsRequestProto) ProtoMessage() {}

func (x *PurgeLogsRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeLogsRequestProto.ProtoReflect.Descriptor instead.
func (*PurgeLogsRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{12}
}

func (x *PurgeLogsRequestProto) GetReqInfo() *RequestInfoProto {
	if x != nil {
		return x.ReqInfo
	}
	return nil
}

func (x *PurgeLogsRequestProto) GetMinTxIdToKeep() uint64 {
	if x != nil && x.MinTxIdToKeep != nil {
		return *x.MinTxIdToKeep
	}
	return 0
}

type PurgeLogsResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PurgeLogsResponseProto) Reset() {
	*x = PurgeLogsResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurgeLogsResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeLogsResponseProto) ProtoMessage() {}

func (x *PurgeLogsResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeLogsResponseProto.ProtoReflect.Descriptor instead.
func (*PurgeLogsResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{13}
}

//*
// isFormatted()
type IsFormattedRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid           *JournalIdProto `protobuf:"bytes,1,req,name=jid" json:"jid,omitempty"`
	NameServiceId *string         `protobuf:"bytes,2,opt,name=nameServiceId" json:"nameServiceId,omitempty"`
}

func (x *IsFormattedRequestProto) Reset() {
	*x = IsFormattedRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFormattedRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFormattedRequestProto) ProtoMessage() {}

func (x *IsFormattedRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFormattedRequestProto.ProtoReflect.Descriptor instead.
func (*IsFormattedRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{14}
}

func (x *IsFormattedRequestProto) GetJid() *JournalIdProto {
	if x != nil {
		return x.Jid
	}
	return nil
}

func (x *IsFormattedRequestProto) GetNameServiceId() string {
	if x != nil && x.NameServiceId != nil {
		return *x.NameServiceId
	}
	return ""
}

type IsFormattedResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFormatted *bool `protobuf:"varint,1,req,name=isFormatted" json:"isFormatted,omitempty"`
}

func (x *IsFormattedResponseProto) Reset() {
	*x = IsFormattedResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFormattedResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFormattedResponseProto) ProtoMessage() {}

func (x *IsFormattedResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFormattedResponseProto.ProtoReflect.Descriptor instead.
func (*IsFormattedResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{15}
}

func (x *IsFormattedResponseProto) GetIsFormatted() bool {
	if x != nil && x.IsFormatted != nil {
		return *x.IsFormatted
	}
	return false
}

//*
// getJournalCTime()
type GetJournalCTimeRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid           *JournalIdProto `protobuf:"bytes,1,req,name=jid" json:"jid,omitempty"`
	NameServiceId *string         `protobuf:"bytes,2,opt,name=nameServiceId" json:"nameServiceId,omitempty"`
}

func (x *GetJournalCTimeRequestProto) Reset() {
	*x = GetJournalCTimeRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJournalCTimeRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJournalCTimeRequestProto) ProtoMessage() {}

func (x *GetJournalCTimeRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJournalCTimeRequestProto.ProtoReflect.Descriptor instead.
func (*GetJournalCTimeRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{16}
}

func (x *GetJournalCTimeRequestProto) GetJid() *JournalIdProto {
	if x != nil {
		return x.Jid
	}
	return nil
}

func (x *GetJournalCTimeRequestProto) GetNameServiceId() string {
	if x != nil && x.NameServiceId != nil {
		return *x.NameServiceId
	}
	return ""
}

type GetJournalCTimeResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResultCTime *int64 `protobuf:"varint,1,req,name=resultCTime" json:"resultCTime,omitempty"`
}

func (x *GetJournalCTimeResponseProto) Reset() {
	*x = GetJournalCTimeResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJournalCTimeResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJournalCTimeResponseProto) ProtoMessage() {}

func (x *GetJournalCTimeResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJournalCTimeResponseProto.ProtoReflect.Descriptor instead.
func (*GetJournalCTimeResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{17}
}

func (x *GetJournalCTimeResponseProto) GetResultCTime() int64 {
	if x != nil && x.ResultCTime != nil {
		return *x.ResultCTime
	}
	return 0
}

//*
// doPreUpgrade()
type DoPreUpgradeRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid *JournalIdProto `protobuf:"bytes,1,req,name=jid" json:"jid,omitempty"`
}

func (x *DoPreUpgradeRequestProto) Reset() {
	*x = DoPreUpgradeRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoPreUpgradeRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoPreUpgradeRequestProto) ProtoMessage() {}

func (x *DoPreUpgradeRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoPreUpgradeRequestProto.ProtoReflect.Descriptor instead.
func (*DoPreUpgradeRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{18}
}

func (x *DoPreUpgradeRequestProto) GetJid() *JournalIdProto {
	if x != nil {
		return x.Jid
	}
	return nil
}

type DoPreUpgradeResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DoPreUpgradeResponseProto) Reset() {
	*x = DoPreUpgradeResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoPreUpgradeResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoPreUpgradeResponseProto) ProtoMessage() {}

func (x *DoPreUpgradeResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoPreUpgradeResponseProto.ProtoReflect.Descriptor instead.
func (*DoPreUpgradeResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{19}
}

//*
// doUpgrade()
type DoUpgradeRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid   *JournalIdProto        `protobuf:"bytes,1,req,name=jid" json:"jid,omitempty"`
	SInfo *hdfs.StorageInfoProto `protobuf:"bytes,2,req,name=sInfo" json:"sInfo,omitempty"`
}

func (x *DoUpgradeRequestProto) Reset() {
	*x = DoUpgradeRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoUpgradeRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoUpgradeRequestProto) ProtoMessage() {}

func (x *DoUpgradeRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoUpgradeRequestProto.ProtoReflect.Descriptor instead.
func (*DoUpgradeRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{20}
}

func (x *DoUpgradeRequestProto) GetJid() *JournalIdProto {
	if x != nil {
		return x.Jid
	}
	return nil
}

func (x *DoUpgradeRequestProto) GetSInfo() *hdfs.StorageInfoProto {
	if x != nil {
		return x.SInfo
	}
	return nil
}

type DoUpgradeResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DoUpgradeResponseProto) Reset() {
	*x = DoUpgradeResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoUpgradeResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoUpgradeResponseProto) ProtoMessage() {}

func (x *DoUpgradeResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoUpgradeResponseProto.ProtoReflect.Descriptor instead.
func (*DoUpgradeResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{21}
}

//*
// doFinalize()
type DoFinalizeRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid           *JournalIdProto `protobuf:"bytes,1,req,name=jid" json:"jid,omitempty"`
	NameServiceId *string         `protobuf:"bytes,2,opt,name=nameServiceId" json:"nameServiceId,omitempty"`
}

func (x *DoFinalizeRequestProto) Reset() {
	*x = DoFinalizeRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoFinalizeRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoFinalizeRequestProto) ProtoMessage() {}

func (x *DoFinalizeRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoFinalizeRequestProto.ProtoReflect.Descriptor instead.
func (*DoFinalizeRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{22}
}

func (x *DoFinalizeRequestProto) GetJid() *JournalIdProto {
	if x != nil {
		return x.Jid
	}
	return nil
}

func (x *DoFinalizeRequestProto) GetNameServiceId() string {
	if x != nil && x.NameServiceId != nil {
		return *x.NameServiceId
	}
	return ""
}

type DoFinalizeResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DoFinalizeResponseProto) Reset() {
	*x = DoFinalizeResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoFinalizeResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoFinalizeResponseProto) ProtoMessage() {}

func (x *DoFinalizeResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoFinalizeResponseProto.ProtoReflect.Descriptor instead.
func (*DoFinalizeResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{23}
}

//*
// canRollBack()
type CanRollBackRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid                 *JournalIdProto        `protobuf:"bytes,1,req,name=jid" json:"jid,omitempty"`
	Storage             *hdfs.StorageInfoProto `protobuf:"bytes,2,req,name=storage" json:"storage,omitempty"`
	PrevStorage         *hdfs.StorageInfoProto `protobuf:"bytes,3,req,name=prevStorage" json:"prevStorage,omitempty"`
	TargetLayoutVersion *int32                 `protobuf:"varint,4,req,name=targetLayoutVersion" json:"targetLayoutVersion,omitempty"`
	NameServiceId       *string                `protobuf:"bytes,5,opt,name=nameServiceId" json:"nameServiceId,omitempty"`
}

func (x *CanRollBackRequestProto) Reset() {
	*x = CanRollBackRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CanRollBackRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanRollBackRequestProto) ProtoMessage() {}

func (x *CanRollBackRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanRollBackRequestProto.ProtoReflect.Descriptor instead.
func (*CanRollBackRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{24}
}

func (x *CanRollBackRequestProto) GetJid() *JournalIdProto {
	if x != nil {
		return x.Jid
	}
	return nil
}

func (x *CanRollBackRequestProto) GetStorage() *hdfs.StorageInfoProto {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *CanRollBackRequestProto) GetPrevStorage() *hdfs.StorageInfoProto {
	if x != nil {
		return x.PrevStorage
	}
	return nil
}

func (x *CanRollBackRequestProto) GetTargetLayoutVersion() int32 {
	if x != nil && x.TargetLayoutVersion != nil {
		return *x.TargetLayoutVersion
	}
	return 0
}

func (x *CanRollBackRequestProto) GetNameServiceId() string {
	if x != nil && x.NameServiceId != nil {
		return *x.NameServiceId
	}
	return ""
}

type CanRollBackResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanRollBack *bool `protobuf:"varint,1,req,name=canRollBack" json:"canRollBack,omitempty"`
}

func (x *CanRollBackResponseProto) Reset() {
	*x = CanRollBackResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CanRollBackResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanRollBackResponseProto) ProtoMessage() {}

func (x *CanRollBackResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanRollBackResponseProto.ProtoReflect.Descriptor instead.
func (*CanRollBackResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{25}
}

func (x *CanRollBackResponseProto) GetCanRollBack() bool {
	if x != nil && x.CanRollBack != nil {
		return *x.CanRollBack
	}
	return false
}

//*
// doRollback()
type DoRollbackRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid           *JournalIdProto `protobuf:"bytes,1,req,name=jid" json:"jid,omitempty"`
	NameserviceId *string         `protobuf:"bytes,2,opt,name=nameserviceId" json:"nameserviceId,omitempty"`
}

func (x *DoRollbackRequestProto) Reset() {
	*x = DoRollbackRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoRollbackRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoRollbackRequestProto) ProtoMessage() {}

func (x *DoRollbackRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoRollbackRequestProto.ProtoReflect.Descriptor instead.
func (*DoRollbackRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{26}
}

func (x *DoRollbackRequestProto) GetJid() *JournalIdProto {
	if x != nil {
		return x.Jid
	}
	return nil
}

func (x *DoRollbackRequestProto) GetNameserviceId() string {
	if x != nil && x.NameserviceId != nil {
		return *x.NameserviceId
	}
	return ""
}

type DoRollbackResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DoRollbackResponseProto) Reset() {
	*x = DoRollbackResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoRollbackResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoRollbackResponseProto) ProtoMessage() {}

func (x *DoRollbackResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoRollbackResponseProto.ProtoReflect.Descriptor instead.
func (*DoRollbackResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{27}
}

//*
// discardSegments()
type DiscardSegmentsRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid           *JournalIdProto `protobuf:"bytes,1,req,name=jid" json:"jid,omitempty"`
	StartTxId     *uint64         `protobuf:"varint,2,req,name=startTxId" json:"startTxId,omitempty"`
	NameServiceId *string         `protobuf:"bytes,3,opt,name=nameServiceId" json:"nameServiceId,omitempty"`
}

func (x *DiscardSegmentsRequestProto) Reset() {
	*x = DiscardSegmentsRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscardSegmentsRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscardSegmentsRequestProto) ProtoMessage() {}

func (x *DiscardSegmentsRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscardSegmentsRequestProto.ProtoReflect.Descriptor instead.
func (*DiscardSegmentsRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{28}
}

func (x *DiscardSegmentsRequestProto) GetJid() *JournalIdProto {
	if x != nil {
		return x.Jid
	}
	return nil
}

func (x *DiscardSegmentsRequestProto) GetStartTxId() uint64 {
	if x != nil && x.StartTxId != nil {
		return *x.StartTxId
	}
	return 0
}

func (x *DiscardSegmentsRequestProto) GetNameServiceId() string {
	if x != nil && x.NameServiceId != nil {
		return *x.NameServiceId
	}
	return ""
}

type DiscardSegmentsResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DiscardSegmentsResponseProto) Reset() {
	*x = DiscardSegmentsResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscardSegmentsResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscardSegmentsResponseProto) ProtoMessage() {}

func (x *DiscardSegmentsResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscardSegmentsResponseProto.ProtoReflect.Descriptor instead.
func (*DiscardSegmentsResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{29}
}

//*
// getJournalState()
type GetJournalStateRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid           *JournalIdProto `protobuf:"bytes,1,req,name=jid" json:"jid,omitempty"`
	NameServiceId *string         `protobuf:"bytes,2,opt,name=nameServiceId" json:"nameServiceId,omitempty"`
}

func (x *GetJournalStateRequestProto) Reset() {
	*x = GetJournalStateRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJournalStateRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJournalStateRequestProto) ProtoMessage() {}

func (x *GetJournalStateRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJournalStateRequestProto.ProtoReflect.Descriptor instead.
func (*GetJournalStateRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{30}
}

func (x *GetJournalStateRequestProto) GetJid() *JournalIdProto {
	if x != nil {
		return x.Jid
	}
	return nil
}

func (x *GetJournalStateRequestProto) GetNameServiceId() string {
	if x != nil && x.NameServiceId != nil {
		return *x.NameServiceId
	}
	return ""
}

type GetJournalStateResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastPromisedEpoch *uint64 `protobuf:"varint,1,req,name=lastPromisedEpoch" json:"lastPromisedEpoch,omitempty"`
	// Deprecated by fromURL
	HttpPort *uint32 `protobuf:"varint,2,req,name=httpPort" json:"httpPort,omitempty"`
	FromURL  *string `protobuf:"bytes,3,opt,name=fromURL" json:"fromURL,omitempty"`
}

func (x *GetJournalStateResponseProto) Reset() {
	*x = GetJournalStateResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJournalStateResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJournalStateResponseProto) ProtoMessage() {}

func (x *GetJournalStateResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJournalStateResponseProto.ProtoReflect.Descriptor instead.
func (*GetJournalStateResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{31}
}

func (x *GetJournalStateResponseProto) GetLastPromisedEpoch() uint64 {
	if x != nil && x.LastPromisedEpoch != nil {
		return *x.LastPromisedEpoch
	}
	return 0
}

func (x *GetJournalStateResponseProto) GetHttpPort() uint32 {
	if x != nil && x.HttpPort != nil {
		return *x.HttpPort
	}
	return 0
}

func (x *GetJournalStateResponseProto) GetFromURL() string {
	if x != nil && x.FromURL != nil {
		return *x.FromURL
	}
	return ""
}

//*
// format()
type FormatRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid           *JournalIdProto          `protobuf:"bytes,1,req,name=jid" json:"jid,omitempty"`
	NsInfo        *hdfs.NamespaceInfoProto `protobuf:"bytes,2,req,name=nsInfo" json:"nsInfo,omitempty"`
	NameServiceId *string                  `protobuf:"bytes,3,opt,name=nameServiceId" json:"nameServiceId,omitempty"`
}

func (x *FormatRequestProto) Reset() {
	*x = FormatRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormatRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatRequestProto) ProtoMessage() {}

func (x *FormatRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatRequestProto.ProtoReflect.Descriptor instead.
func (*FormatRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{32}
}

func (x *FormatRequestProto) GetJid() *JournalIdProto {
	if x != nil {
		return x.Jid
	}
	return nil
}

func (x *FormatRequestProto) GetNsInfo() *hdfs.NamespaceInfoProto {
	if x != nil {
		return x.NsInfo
	}
	return nil
}

func (x *FormatRequestProto) GetNameServiceId() string {
	if x != nil && x.NameServiceId != nil {
		return *x.NameServiceId
	}
	return ""
}

type FormatResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FormatResponseProto) Reset() {
	*x = FormatResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormatResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatResponseProto) ProtoMessage() {}

func (x *FormatResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatResponseProto.ProtoReflect.Descriptor instead.
func (*FormatResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{33}
}

//*
// newEpoch()
type NewEpochRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid           *JournalIdProto          `protobuf:"bytes,1,req,name=jid" json:"jid,omitempty"`
	NsInfo        *hdfs.NamespaceInfoProto `protobuf:"bytes,2,req,name=nsInfo" json:"nsInfo,omitempty"`
	Epoch         *uint64                  `protobuf:"varint,3,req,name=epoch" json:"epoch,omitempty"`
	NameServiceId *string                  `protobuf:"bytes,4,opt,name=nameServiceId" json:"nameServiceId,omitempty"`
}

func (x *NewEpochRequestProto) Reset() {
	*x = NewEpochRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewEpochRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewEpochRequestProto) ProtoMessage() {}

func (x *NewEpochRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewEpochRequestProto.ProtoReflect.Descriptor instead.
func (*NewEpochRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{34}
}

func (x *NewEpochRequestProto) GetJid() *JournalIdProto {
	if x != nil {
		return x.Jid
	}
	return nil
}

func (x *NewEpochRequestProto) GetNsInfo() *hdfs.NamespaceInfoProto {
	if x != nil {
		return x.NsInfo
	}
	return nil
}

func (x *NewEpochRequestProto) GetEpoch() uint64 {
	if x != nil && x.Epoch != nil {
		return *x.Epoch
	}
	return 0
}

func (x *NewEpochRequestProto) GetNameServiceId() string {
	if x != nil && x.NameServiceId != nil {
		return *x.NameServiceId
	}
	return ""
}

type NewEpochResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastSegmentTxId *uint64 `protobuf:"varint,1,opt,name=lastSegmentTxId" json:"lastSegmentTxId,omitempty"`
}

func (x *NewEpochResponseProto) Reset() {
	*x = NewEpochResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewEpochResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewEpochResponseProto) ProtoMessage() {}

func (x *NewEpochResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewEpochResponseProto.ProtoReflect.Descriptor instead.
func (*NewEpochResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{35}
}

func (x *NewEpochResponseProto) GetLastSegmentTxId() uint64 {
	if x != nil && x.LastSegmentTxId != nil {
		return *x.LastSegmentTxId
	}
	return 0
}

//*
// getEditLogManifest()
type GetEditLogManifestRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid       *JournalIdProto `protobuf:"bytes,1,req,name=jid" json:"jid,omitempty"`
	SinceTxId *uint64         `protobuf:"varint,2,req,name=sinceTxId" json:"sinceTxId,omitempty"` // Transaction ID
	// Whether or not the client will be reading from the returned streams.
	// optional bool forReading = 3 [default = true]; <obsolete, do not reuse>
	InProgressOk  *bool   `protobuf:"varint,4,opt,name=inProgressOk,def=0" json:"inProgressOk,omitempty"`
	NameServiceId *string `protobuf:"bytes,5,opt,name=nameServiceId" json:"nameServiceId,omitempty"`
}

// Default values for GetEditLogManifestRequestProto fields.
const (
	Default_GetEditLogManifestRequestProto_InProgressOk = bool(false)
)

func (x *GetEditLogManifestRequestProto) Reset() {
	*x = GetEditLogManifestRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEditLogManifestRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEditLogManifestRequestProto) ProtoMessage() {}

func (x *GetEditLogManifestRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEditLogManifestRequestProto.ProtoReflect.Descriptor instead.
func (*GetEditLogManifestRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{36}
}

func (x *GetEditLogManifestRequestProto) GetJid() *JournalIdProto {
	if x != nil {
		return x.Jid
	}
	return nil
}

func (x *GetEditLogManifestRequestProto) GetSinceTxId() uint64 {
	if x != nil && x.SinceTxId != nil {
		return *x.SinceTxId
	}
	return 0
}

func (x *GetEditLogManifestRequestProto) GetInProgressOk() bool {
	if x != nil && x.InProgressOk != nil {
		return *x.InProgressOk
	}
	return Default_GetEditLogManifestRequestProto_InProgressOk
}

func (x *GetEditLogManifestRequestProto) GetNameServiceId() string {
	if x != nil && x.NameServiceId != nil {
		return *x.NameServiceId
	}
	return ""
}

type GetEditLogManifestResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manifest *hdfs.RemoteEditLogManifestProto `protobuf:"bytes,1,req,name=manifest" json:"manifest,omitempty"`
	// Deprecated by fromURL
	HttpPort *uint32 `protobuf:"varint,2,req,name=httpPort" json:"httpPort,omitempty"`
	FromURL  *string `protobuf:"bytes,3,opt,name=fromURL" json:"fromURL,omitempty"`
}

func (x *GetEditLogManifestResponseProto) Reset() {
	*x = GetEditLogManifestResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEditLogManifestResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEditLogManifestResponseProto) ProtoMessage() {}

func (x *GetEditLogManifestResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEditLogManifestResponseProto.ProtoReflect.Descriptor instead.
func (*GetEditLogManifestResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{37}
}

func (x *GetEditLogManifestResponseProto) GetManifest() *hdfs.RemoteEditLogManifestProto {
	if x != nil {
		return x.Manifest
	}
	return nil
}

func (x *GetEditLogManifestResponseProto) GetHttpPort() uint32 {
	if x != nil && x.HttpPort != nil {
		return *x.HttpPort
	}
	return 0
}

func (x *GetEditLogManifestResponseProto) GetFromURL() string {
	if x != nil && x.FromURL != nil {
		return *x.FromURL
	}
	return ""
}

//*
// getJournaledEdits()
type GetJournaledEditsRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jid           *JournalIdProto `protobuf:"bytes,1,req,name=jid" json:"jid,omitempty"`
	SinceTxId     *uint64         `protobuf:"varint,2,req,name=sinceTxId" json:"sinceTxId,omitempty"`
	MaxTxns       *uint32         `protobuf:"varint,3,req,name=maxTxns" json:"maxTxns,omitempty"`
	NameServiceId *string         `protobuf:"bytes,4,opt,name=nameServiceId" json:"nameServiceId,omitempty"`
}

func (x *GetJournaledEditsRequestProto) Reset() {
	*x = GetJournaledEditsRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJournaledEditsRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJournaledEditsRequestProto) ProtoMessage() {}

func (x *GetJournaledEditsRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJournaledEditsRequestProto.ProtoReflect.Descriptor instead.
func (*GetJournaledEditsRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{38}
}

func (x *GetJournaledEditsRequestProto) GetJid() *JournalIdProto {
	if x != nil {
		return x.Jid
	}
	return nil
}

func (x *GetJournaledEditsRequestProto) GetSinceTxId() uint64 {
	if x != nil && x.SinceTxId != nil {
		return *x.SinceTxId
	}
	return 0
}

func (x *GetJournaledEditsRequestProto) GetMaxTxns() uint32 {
	if x != nil && x.MaxTxns != nil {
		return *x.MaxTxns
	}
	return 0
}

func (x *GetJournaledEditsRequestProto) GetNameServiceId() string {
	if x != nil && x.NameServiceId != nil {
		return *x.NameServiceId
	}
	return ""
}

type GetJournaledEditsResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnCount *uint32 `protobuf:"varint,1,req,name=txnCount" json:"txnCount,omitempty"`
	EditLog  []byte  `protobuf:"bytes,2,opt,name=editLog" json:"editLog,omitempty"`
}

func (x *GetJournaledEditsResponseProto) Reset() {
	*x = GetJournaledEditsResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJournaledEditsResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJournaledEditsResponseProto) ProtoMessage() {}

func (x *GetJournaledEditsResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJournaledEditsResponseProto.ProtoReflect.Descriptor instead.
func (*GetJournaledEditsResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{39}
}

func (x *GetJournaledEditsResponseProto) GetTxnCount() uint32 {
	if x != nil && x.TxnCount != nil {
		return *x.TxnCount
	}
	return 0
}

func (x *GetJournaledEditsResponseProto) GetEditLog() []byte {
	if x != nil {
		return x.EditLog
	}
	return nil
}

//*
// prepareRecovery()
type PrepareRecoveryRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqInfo     *RequestInfoProto `protobuf:"bytes,1,req,name=reqInfo" json:"reqInfo,omitempty"`
	SegmentTxId *uint64           `protobuf:"varint,2,req,name=segmentTxId" json:"segmentTxId,omitempty"`
}

func (x *PrepareRecoveryRequestProto) Reset() {
	*x = PrepareRecoveryRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareRecoveryRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareRecoveryRequestProto) ProtoMessage() {}

func (x *PrepareRecoveryRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareRecoveryRequestProto.ProtoReflect.Descriptor instead.
func (*PrepareRecoveryRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{40}
}

func (x *PrepareRecoveryRequestProto) GetReqInfo() *RequestInfoProto {
	if x != nil {
		return x.ReqInfo
	}
	return nil
}

func (x *PrepareRecoveryRequestProto) GetSegmentTxId() uint64 {
	if x != nil && x.SegmentTxId != nil {
		return *x.SegmentTxId
	}
	return 0
}

type PrepareRecoveryResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SegmentState    *SegmentStateProto `protobuf:"bytes,1,opt,name=segmentState" json:"segmentState,omitempty"`
	AcceptedInEpoch *uint64            `protobuf:"varint,2,opt,name=acceptedInEpoch" json:"acceptedInEpoch,omitempty"`
	LastWriterEpoch *uint64            `protobuf:"varint,3,req,name=lastWriterEpoch" json:"lastWriterEpoch,omitempty"`
	// The highest committed txid that this logger has ever seen.
	// This may be higher than the data it actually has, in the case
	// that it was lagging before the old writer crashed.
	LastCommittedTxId *uint64 `protobuf:"varint,4,opt,name=lastCommittedTxId" json:"lastCommittedTxId,omitempty"`
}

func (x *PrepareRecoveryResponseProto) Reset() {
	*x = PrepareRecoveryResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareRecoveryResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareRecoveryResponseProto) ProtoMessage() {}

func (x *PrepareRecoveryResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareRecoveryResponseProto.ProtoReflect.Descriptor instead.
func (*PrepareRecoveryResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{41}
}

func (x *PrepareRecoveryResponseProto) GetSegmentState() *SegmentStateProto {
	if x != nil {
		return x.SegmentState
	}
	return nil
}

func (x *PrepareRecoveryResponseProto) GetAcceptedInEpoch() uint64 {
	if x != nil && x.AcceptedInEpoch != nil {
		return *x.AcceptedInEpoch
	}
	return 0
}

func (x *PrepareRecoveryResponseProto) GetLastWriterEpoch() uint64 {
	if x != nil && x.LastWriterEpoch != nil {
		return *x.LastWriterEpoch
	}
	return 0
}

func (x *PrepareRecoveryResponseProto) GetLastCommittedTxId() uint64 {
	if x != nil && x.LastCommittedTxId != nil {
		return *x.LastCommittedTxId
	}
	return 0
}

//*
// acceptRecovery()
type AcceptRecoveryRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqInfo *RequestInfoProto `protobuf:"bytes,1,req,name=reqInfo" json:"reqInfo,omitempty"`
	//* Details on the segment to recover
	StateToAccept *SegmentStateProto `protobuf:"bytes,2,req,name=stateToAccept" json:"stateToAccept,omitempty"`
	//* The URL from which the log may be copied
	FromURL *string `protobuf:"bytes,3,req,name=fromURL" json:"fromURL,omitempty"`
}

func (x *AcceptRecoveryRequestProto) Reset() {
	*x = AcceptRecoveryRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptRecoveryRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptRecoveryRequestProto) ProtoMessage() {}

func (x *AcceptRecoveryRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptRecoveryRequestProto.ProtoReflect.Descriptor instead.
func (*AcceptRecoveryRequestProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{42}
}

func (x *AcceptRecoveryRequestProto) GetReqInfo() *RequestInfoProto {
	if x != nil {
		return x.ReqInfo
	}
	return nil
}

func (x *AcceptRecoveryRequestProto) GetStateToAccept() *SegmentStateProto {
	if x != nil {
		return x.StateToAccept
	}
	return nil
}

func (x *AcceptRecoveryRequestProto) GetFromURL() string {
	if x != nil && x.FromURL != nil {
		return *x.FromURL
	}
	return ""
}

type AcceptRecoveryResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptRecoveryResponseProto) Reset() {
	*x = AcceptRecoveryResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_QJournalProtocol_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptRecoveryResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptRecoveryResponseProto) ProtoMessage() {}

func (x *AcceptRecoveryResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_QJournalProtocol_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptRecoveryResponseProto.ProtoReflect.Descriptor instead.
func (*AcceptRecoveryResponseProto) Descriptor() ([]byte, []int) {
	return file_QJournalProtocol_proto_rawDescGZIP(), []int{43}
}

var File_QJournalProtocol_proto protoreflect.FileDescriptor

var file_QJournalProtocol_proto_rawDesc = []byte{
	0x0a, 0x16, 0x51, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70,
	0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x1a, 0x0a,
	0x68, 0x64, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x48, 0x64, 0x66, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x0e,
	0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xe2,
	0x01, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x42, 0x0a, 0x09, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e,
	0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x09, 0x6a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x28, 0x0a,
	0x0f, 0x69, 0x70, 0x63, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0f, 0x69, 0x70, 0x63, 0x53, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x64, 0x54, 0x78, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x54, 0x78, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x11, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x78, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x78, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x1a, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x50, 0x61, 0x78, 0x6f, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x0c, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x0c, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x45, 0x70,
	0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x64, 0x49, 0x6e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x22, 0xf5, 0x01, 0x0a, 0x13, 0x4a,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66,
	0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x71,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x54, 0x78, 0x6e,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x54,
	0x78, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x54, 0x78, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x54, 0x78, 0x6e, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0c, 0x52,
	0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x78, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0c,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x78, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x59, 0x0a, 0x15, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64,
	0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x72, 0x65,
	0x71, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x18, 0x0a, 0x16, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x99, 0x01, 0x0a, 0x1b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x40, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71,
	0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x71, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52,
	0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0d, 0x6c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1e, 0x0a, 0x1c, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x1e,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x40,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x78, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x78, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x1f, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7f, 0x0a, 0x15, 0x50,
	0x75, 0x72, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68,
	0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x72,
	0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x54, 0x78, 0x49,
	0x64, 0x54, 0x6f, 0x4b, 0x65, 0x65, 0x70, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0d, 0x6d,
	0x69, 0x6e, 0x54, 0x78, 0x49, 0x64, 0x54, 0x6f, 0x4b, 0x65, 0x65, 0x70, 0x22, 0x18, 0x0a, 0x16,
	0x50, 0x75, 0x72, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x77, 0x0a, 0x17, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x36, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x03, 0x6a, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22,
	0x3c, 0x0a, 0x18, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x69,
	0x73, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x0b, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x22, 0x7b, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x0a, 0x03,
	0x6a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x03, 0x6a, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x18,
	0x44, 0x6f, 0x50, 0x72, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68,
	0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4a, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x03, 0x6a, 0x69, 0x64,
	0x22, 0x1b, 0x0a, 0x19, 0x44, 0x6f, 0x50, 0x72, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x01,
	0x0a, 0x15, 0x44, 0x6f, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64,
	0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x03, 0x6a, 0x69, 0x64, 0x12,
	0x33, 0x0a, 0x05, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x6f, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x76,
	0x0a, 0x16, 0x44, 0x6f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68,
	0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4a, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x03, 0x6a, 0x69, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x6f, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa3, 0x02, 0x0a, 0x17, 0x43, 0x61, 0x6e, 0x52, 0x6f, 0x6c, 0x6c, 0x42, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x0a,
	0x03, 0x6a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x03, 0x6a, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e,
	0x68, 0x64, 0x66, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x3f,
	0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66,
	0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x30, 0x0a, 0x13, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x13, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x18, 0x43, 0x61, 0x6e, 0x52, 0x6f,
	0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x52, 0x6f, 0x6c, 0x6c, 0x42, 0x61,
	0x63, 0x6b, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x52, 0x6f, 0x6c,
	0x6c, 0x42, 0x61, 0x63, 0x6b, 0x22, 0x76, 0x0a, 0x16, 0x44, 0x6f, 0x52, 0x6f, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x36, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x03, 0x6a, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x19, 0x0a,
	0x17, 0x44, 0x6f, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x01, 0x0a, 0x1b, 0x44, 0x69, 0x73,
	0x63, 0x61, 0x72, 0x64, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68,
	0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4a, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x03, 0x6a, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x78, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x78, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x36, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71,
	0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x03, 0x6a, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6e,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x82, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x2c, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73,
	0x65, 0x64, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x11, 0x6c,
	0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x64, 0x45, 0x70, 0x6f, 0x63, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x74, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x08, 0x68, 0x74, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x72, 0x6f, 0x6d, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x72, 0x6f, 0x6d, 0x55, 0x52, 0x4c, 0x22, 0xab, 0x01, 0x0a, 0x12, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x0a,
	0x03, 0x6a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x03, 0x6a, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68,
	0x64, 0x66, 0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24,
	0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x01, 0x0a, 0x14,
	0x4e, 0x65, 0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e,
	0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x03, 0x6a, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x06,
	0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x6e,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x6e,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x41, 0x0a, 0x15, 0x4e, 0x65, 0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61,
	0x73, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x78, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x78, 0x49, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74,
	0x4c, 0x6f, 0x67, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64,
	0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x03, 0x6a, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x54, 0x78, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x04, 0x52, 0x09, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x54, 0x78, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x0c, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4f, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4f, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x9c,
	0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x4d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x43, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64,
	0x66, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x45, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67,
	0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x74, 0x74, 0x70, 0x50,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x68, 0x74, 0x74, 0x70, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x52, 0x4c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x52, 0x4c, 0x22, 0xb5, 0x01,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x65, 0x64, 0x45, 0x64,
	0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x36, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x03, 0x6a, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x6e, 0x63, 0x65,
	0x54, 0x78, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x09, 0x73, 0x69, 0x6e, 0x63,
	0x65, 0x54, 0x78, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x54, 0x78, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x54, 0x78, 0x6e, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x65, 0x64, 0x45, 0x64, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x78, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x78, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x22, 0x81, 0x01,
	0x0a, 0x1b, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x40, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x78, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x78, 0x49,
	0x64, 0x22, 0xed, 0x01, 0x0a, 0x1c, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x4b, 0x0a, 0x0c, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x0c, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x45, 0x70, 0x6f,
	0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73,
	0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x04, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72, 0x45, 0x70,
	0x6f, 0x63, 0x68, 0x12, 0x2c, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x64, 0x54, 0x78, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11,
	0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x54, 0x78, 0x49,
	0x64, 0x22, 0xc7, 0x01, 0x0a, 0x1a, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x40, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e,
	0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x71, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x52, 0x4c, 0x22, 0x1d, 0x0a, 0x1b, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xfb, 0x11, 0x0a, 0x17, 0x51,
	0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6c, 0x0a, 0x0b, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x74, 0x65, 0x64, 0x12, 0x2d, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68,
	0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x49, 0x73, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64,
	0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x49, 0x73, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x78, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6c, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70,
	0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x6f,
	0x0a, 0x0c, 0x64, 0x6f, 0x50, 0x72, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x2e,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x44, 0x6f, 0x50, 0x72, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x44, 0x6f, 0x50, 0x72, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x66, 0x0a, 0x09, 0x64, 0x6f, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x2b, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x44, 0x6f, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x44, 0x6f, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x69, 0x0a, 0x0a, 0x64, 0x6f, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x2c, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68,
	0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x44, 0x6f, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66,
	0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x44, 0x6f, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x6c, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x52, 0x6f, 0x6c, 0x6c, 0x42, 0x61, 0x63,
	0x6b, 0x12, 0x2d, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e,
	0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x43, 0x61, 0x6e, 0x52, 0x6f, 0x6c, 0x6c,
	0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2e, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71,
	0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x43, 0x61, 0x6e, 0x52, 0x6f, 0x6c, 0x6c, 0x42,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x69, 0x0a, 0x0a, 0x64, 0x6f, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x2c,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x44, 0x6f, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x44, 0x6f, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x78, 0x0a, 0x0f, 0x64,
	0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x31,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x32, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e,
	0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x78, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x4a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x63, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x2a, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x4e, 0x65, 0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70,
	0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4e,
	0x65, 0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x5d, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x28,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x60, 0x0a, 0x07, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x29,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x66, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x12, 0x2b, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73,
	0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2c, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x78, 0x0a,
	0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x31, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71,
	0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x67,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66,
	0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x4c, 0x6f, 0x67, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x81, 0x01, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x34,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x4c, 0x6f,
	0x67, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x35, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64,
	0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x66, 0x0a, 0x09, 0x70,
	0x75, 0x72, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x2b, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x50, 0x75, 0x72, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68,
	0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x50, 0x75, 0x72,
	0x67, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x81, 0x01, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x4c,
	0x6f, 0x67, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x34, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x4d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x35, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71,
	0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x4c,
	0x6f, 0x67, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x7e, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x4a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x65, 0x64, 0x45, 0x64, 0x69, 0x74, 0x73, 0x12, 0x33, 0x2e, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x65, 0x64,
	0x45, 0x64, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x34, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e,
	0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x65, 0x64, 0x45, 0x64, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x78, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x31, 0x2e, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x2e,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x75, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x12, 0x30, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64, 0x66,
	0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68,
	0x64, 0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x7a, 0x0a, 0x28, 0x6f, 0x72, 0x67, 0x2e,
	0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x64,
	0x66, 0x73, 0x2e, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x42, 0x16, 0x51, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x5a, 0x30, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35,
	0x2f, 0x67, 0x6f, 0x2d, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x68, 0x64, 0x66, 0x73, 0x2f, 0x71, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x88, 0x01,
	0x01, 0xa0, 0x01, 0x01,
}

var (
	file_QJournalProtocol_proto_rawDescOnce sync.Once
	file_QJournalProtocol_proto_rawDescData = file_QJournalProtocol_proto_rawDesc
)

func file_QJournalProtocol_proto_rawDescGZIP() []byte {
	file_QJournalProtocol_proto_rawDescOnce.Do(func() {
		file_QJournalProtocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_QJournalProtocol_proto_rawDescData)
	})
	return file_QJournalProtocol_proto_rawDescData
}

var file_QJournalProtocol_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_QJournalProtocol_proto_goTypes = []interface{}{
	(*JournalIdProto)(nil),                  // 0: hadoop.hdfs.qjournal.JournalIdProto
	(*RequestInfoProto)(nil),                // 1: hadoop.hdfs.qjournal.RequestInfoProto
	(*SegmentStateProto)(nil),               // 2: hadoop.hdfs.qjournal.SegmentStateProto
	(*PersistedRecoveryPaxosData)(nil),      // 3: hadoop.hdfs.qjournal.PersistedRecoveryPaxosData
	(*JournalRequestProto)(nil),             // 4: hadoop.hdfs.qjournal.JournalRequestProto
	(*JournalResponseProto)(nil),            // 5: hadoop.hdfs.qjournal.JournalResponseProto
	(*HeartbeatRequestProto)(nil),           // 6: hadoop.hdfs.qjournal.HeartbeatRequestProto
	(*HeartbeatResponseProto)(nil),          // 7: hadoop.hdfs.qjournal.HeartbeatResponseProto
	(*StartLogSegmentRequestProto)(nil),     // 8: hadoop.hdfs.qjournal.StartLogSegmentRequestProto
	(*StartLogSegmentResponseProto)(nil),    // 9: hadoop.hdfs.qjournal.StartLogSegmentResponseProto
	(*FinalizeLogSegmentRequestProto)(nil),  // 10: hadoop.hdfs.qjournal.FinalizeLogSegmentRequestProto
	(*FinalizeLogSegmentResponseProto)(nil), // 11: hadoop.hdfs.qjournal.FinalizeLogSegmentResponseProto
	(*PurgeLogsRequestProto)(nil),           // 12: hadoop.hdfs.qjournal.PurgeLogsRequestProto
	(*PurgeLogsResponseProto)(nil),          // 13: hadoop.hdfs.qjournal.PurgeLogsResponseProto
	(*IsFormattedRequestProto)(nil),         // 14: hadoop.hdfs.qjournal.IsFormattedRequestProto
	(*IsFormattedResponseProto)(nil),        // 15: hadoop.hdfs.qjournal.IsFormattedResponseProto
	(*GetJournalCTimeRequestProto)(nil),     // 16: hadoop.hdfs.qjournal.GetJournalCTimeRequestProto
	(*GetJournalCTimeResponseProto)(nil),    // 17: hadoop.hdfs.qjournal.GetJournalCTimeResponseProto
	(*DoPreUpgradeRequestProto)(nil),        // 18: hadoop.hdfs.qjournal.DoPreUpgradeRequestProto
	(*DoPreUpgradeResponseProto)(nil),       // 19: hadoop.hdfs.qjournal.DoPreUpgradeResponseProto
	(*DoUpgradeRequestProto)(nil),           // 20: hadoop.hdfs.qjournal.DoUpgradeRequestProto
	(*DoUpgradeResponseProto)(nil),          // 21: hadoop.hdfs.qjournal.DoUpgradeResponseProto
	(*DoFinalizeRequestProto)(nil),          // 22: hadoop.hdfs.qjournal.DoFinalizeRequestProto
	(*DoFinalizeResponseProto)(nil),         // 23: hadoop.hdfs.qjournal.DoFinalizeResponseProto
	(*CanRollBackRequestProto)(nil),         // 24: hadoop.hdfs.qjournal.CanRollBackRequestProto
	(*CanRollBackResponseProto)(nil),        // 25: hadoop.hdfs.qjournal.CanRollBackResponseProto
	(*DoRollbackRequestProto)(nil),          // 26: hadoop.hdfs.qjournal.DoRollbackRequestProto
	(*DoRollbackResponseProto)(nil),         // 27: hadoop.hdfs.qjournal.DoRollbackResponseProto
	(*DiscardSegmentsRequestProto)(nil),     // 28: hadoop.hdfs.qjournal.DiscardSegmentsRequestProto
	(*DiscardSegmentsResponseProto)(nil),    // 29: hadoop.hdfs.qjournal.DiscardSegmentsResponseProto
	(*GetJournalStateRequestProto)(nil),     // 30: hadoop.hdfs.qjournal.GetJournalStateRequestProto
	(*GetJournalStateResponseProto)(nil),    // 31: hadoop.hdfs.qjournal.GetJournalStateResponseProto
	(*FormatRequestProto)(nil),              // 32: hadoop.hdfs.qjournal.FormatRequestProto
	(*FormatResponseProto)(nil),             // 33: hadoop.hdfs.qjournal.FormatResponseProto
	(*NewEpochRequestProto)(nil),            // 34: hadoop.hdfs.qjournal.NewEpochRequestProto
	(*NewEpochResponseProto)(nil),           // 35: hadoop.hdfs.qjournal.NewEpochResponseProto
	(*GetEditLogManifestRequestProto)(nil),  // 36: hadoop.hdfs.qjournal.GetEditLogManifestRequestProto
	(*GetEditLogManifestResponseProto)(nil), // 37: hadoop.hdfs.qjournal.GetEditLogManifestResponseProto
	(*GetJournaledEditsRequestProto)(nil),   // 38: hadoop.hdfs.qjournal.GetJournaledEditsRequestProto
	(*GetJournaledEditsResponseProto)(nil),  // 39: hadoop.hdfs.qjournal.GetJournaledEditsResponseProto
	(*PrepareRecoveryRequestProto)(nil),     // 40: hadoop.hdfs.qjournal.PrepareRecoveryRequestProto
	(*PrepareRecoveryResponseProto)(nil),    // 41: hadoop.hdfs.qjournal.PrepareRecoveryResponseProto
	(*AcceptRecoveryRequestProto)(nil),      // 42: hadoop.hdfs.qjournal.AcceptRecoveryRequestProto
	(*AcceptRecoveryResponseProto)(nil),     // 43: hadoop.hdfs.qjournal.AcceptRecoveryResponseProto
	(*hdfs.StorageInfoProto)(nil),           // 44: hadoop.hdfs.StorageInfoProto
	(*hdfs.NamespaceInfoProto)(nil),         // 45: hadoop.hdfs.NamespaceInfoProto
	(*hdfs.RemoteEditLogManifestProto)(nil), // 46: hadoop.hdfs.RemoteEditLogManifestProto
}
var file_QJournalProtocol_proto_depIdxs = []int32{
	0,  // 0: hadoop.hdfs.qjournal.RequestInfoProto.journalId:type_name -> hadoop.hdfs.qjournal.JournalIdProto
	2,  // 1: hadoop.hdfs.qjournal.PersistedRecoveryPaxosData.segmentState:type_name -> hadoop.hdfs.qjournal.SegmentStateProto
	1,  // 2: hadoop.hdfs.qjournal.JournalRequestProto.reqInfo:type_name -> hadoop.hdfs.qjournal.RequestInfoProto
	1,  // 3: hadoop.hdfs.qjournal.HeartbeatRequestProto.reqInfo:type_name -> hadoop.hdfs.qjournal.RequestInfoProto
	1,  // 4: hadoop.hdfs.qjournal.StartLogSegmentRequestProto.reqInfo:type_name -> hadoop.hdfs.qjournal.RequestInfoProto
	1,  // 5: hadoop.hdfs.qjournal.FinalizeLogSegmentRequestProto.reqInfo:type_name -> hadoop.hdfs.qjournal.RequestInfoProto
	1,  // 6: hadoop.hdfs.qjournal.PurgeLogsRequestProto.reqInfo:type_name -> hadoop.hdfs.qjournal.RequestInfoProto
	0,  // 7: hadoop.hdfs.qjournal.IsFormattedRequestProto.jid:type_name -> hadoop.hdfs.qjournal.JournalIdProto
	0,  // 8: hadoop.hdfs.qjournal.GetJournalCTimeRequestProto.jid:type_name -> hadoop.hdfs.qjournal.JournalIdProto
	0,  // 9: hadoop.hdfs.qjournal.DoPreUpgradeRequestProto.jid:type_name -> hadoop.hdfs.qjournal.JournalIdProto
	0,  // 10: hadoop.hdfs.qjournal.DoUpgradeRequestProto.jid:type_name -> hadoop.hdfs.qjournal.JournalIdProto
	44, // 11: hadoop.hdfs.qjournal.DoUpgradeRequestProto.sInfo:type_name -> hadoop.hdfs.StorageInfoProto
	0,  // 12: hadoop.hdfs.qjournal.DoFinalizeRequestProto.jid:type_name -> hadoop.hdfs.qjournal.JournalIdProto
	0,  // 13: hadoop.hdfs.qjournal.CanRollBackRequestProto.jid:type_name -> hadoop.hdfs.qjournal.JournalIdProto
	44, // 14: hadoop.hdfs.qjournal.CanRollBackRequestProto.storage:type_name -> hadoop.hdfs.StorageInfoProto
	44, // 15: hadoop.hdfs.qjournal.CanRollBackRequestProto.prevStorage:type_name -> hadoop.hdfs.StorageInfoProto
	0,  // 16: hadoop.hdfs.qjournal.DoRollbackRequestProto.jid:type_name -> hadoop.hdfs.qjournal.JournalIdProto
	0,  // 17: hadoop.hdfs.qjournal.DiscardSegmentsRequestProto.jid:type_name -> hadoop.hdfs.qjournal.JournalIdProto
	0,  // 18: hadoop.hdfs.qjournal.GetJournalStateRequestProto.jid:type_name -> hadoop.hdfs.qjournal.JournalIdProto
	0,  // 19: hadoop.hdfs.qjournal.FormatRequestProto.jid:type_name -> hadoop.hdfs.qjournal.JournalIdProto
	45, // 20: hadoop.hdfs.qjournal.FormatRequestProto.nsInfo:type_name -> hadoop.hdfs.NamespaceInfoProto
	0,  // 21: hadoop.hdfs.qjournal.NewEpochRequestProto.jid:type_name -> hadoop.hdfs.qjournal.JournalIdProto
	45, // 22: hadoop.hdfs.qjournal.NewEpochRequestProto.nsInfo:type_name -> hadoop.hdfs.NamespaceInfoProto
	0,  // 23: hadoop.hdfs.qjournal.GetEditLogManifestRequestProto.jid:type_name -> hadoop.hdfs.qjournal.JournalIdProto
	46, // 24: hadoop.hdfs.qjournal.GetEditLogManifestResponseProto.manifest:type_name -> hadoop.hdfs.RemoteEditLogManifestProto
	0,  // 25: hadoop.hdfs.qjournal.GetJournaledEditsRequestProto.jid:type_name -> hadoop.hdfs.qjournal.JournalIdProto
	1,  // 26: hadoop.hdfs.qjournal.PrepareRecoveryRequestProto.reqInfo:type_name -> hadoop.hdfs.qjournal.RequestInfoProto
	2,  // 27: hadoop.hdfs.qjournal.PrepareRecoveryResponseProto.segmentState:type_name -> hadoop.hdfs.qjournal.SegmentStateProto
	1,  // 28: hadoop.hdfs.qjournal.AcceptRecoveryRequestProto.reqInfo:type_name -> hadoop.hdfs.qjournal.RequestInfoProto
	2,  // 29: hadoop.hdfs.qjournal.AcceptRecoveryRequestProto.stateToAccept:type_name -> hadoop.hdfs.qjournal.SegmentStateProto
	14, // 30: hadoop.hdfs.qjournal.QJournalProtocolService.isFormatted:input_type -> hadoop.hdfs.qjournal.IsFormattedRequestProto
	16, // 31: hadoop.hdfs.qjournal.QJournalProtocolService.getJournalCTime:input_type -> hadoop.hdfs.qjournal.GetJournalCTimeRequestProto
	18, // 32: hadoop.hdfs.qjournal.QJournalProtocolService.doPreUpgrade:input_type -> hadoop.hdfs.qjournal.DoPreUpgradeRequestProto
	20, // 33: hadoop.hdfs.qjournal.QJournalProtocolService.doUpgrade:input_type -> hadoop.hdfs.qjournal.DoUpgradeRequestProto
	22, // 34: hadoop.hdfs.qjournal.QJournalProtocolService.doFinalize:input_type -> hadoop.hdfs.qjournal.DoFinalizeRequestProto
	24, // 35: hadoop.hdfs.qjournal.QJournalProtocolService.canRollBack:input_type -> hadoop.hdfs.qjournal.CanRollBackRequestProto
	26, // 36: hadoop.hdfs.qjournal.QJournalProtocolService.doRollback:input_type -> hadoop.hdfs.qjournal.DoRollbackRequestProto
	28, // 37: hadoop.hdfs.qjournal.QJournalProtocolService.discardSegments:input_type -> hadoop.hdfs.qjournal.DiscardSegmentsRequestProto
	30, // 38: hadoop.hdfs.qjournal.QJournalProtocolService.getJournalState:input_type -> hadoop.hdfs.qjournal.GetJournalStateRequestProto
	34, // 39: hadoop.hdfs.qjournal.QJournalProtocolService.newEpoch:input_type -> hadoop.hdfs.qjournal.NewEpochRequestProto
	32, // 40: hadoop.hdfs.qjournal.QJournalProtocolService.format:input_type -> hadoop.hdfs.qjournal.FormatRequestProto
	4,  // 41: hadoop.hdfs.qjournal.QJournalProtocolService.journal:input_type -> hadoop.hdfs.qjournal.JournalRequestProto
	6,  // 42: hadoop.hdfs.qjournal.QJournalProtocolService.heartbeat:input_type -> hadoop.hdfs.qjournal.HeartbeatRequestProto
	8,  // 43: hadoop.hdfs.qjournal.QJournalProtocolService.startLogSegment:input_type -> hadoop.hdfs.qjournal.StartLogSegmentRequestProto
	10, // 44: hadoop.hdfs.qjournal.QJournalProtocolService.finalizeLogSegment:input_type -> hadoop.hdfs.qjournal.FinalizeLogSegmentRequestProto
	12, // 45: hadoop.hdfs.qjournal.QJournalProtocolService.purgeLogs:input_type -> hadoop.hdfs.qjournal.PurgeLogsRequestProto
	36, // 46: hadoop.hdfs.qjournal.QJournalProtocolService.getEditLogManifest:input_type -> hadoop.hdfs.qjournal.GetEditLogManifestRequestProto
	38, // 47: hadoop.hdfs.qjournal.QJournalProtocolService.getJournaledEdits:input_type -> hadoop.hdfs.qjournal.GetJournaledEditsRequestProto
	40, // 48: hadoop.hdfs.qjournal.QJournalProtocolService.prepareRecovery:input_type -> hadoop.hdfs.qjournal.PrepareRecoveryRequestProto
	42, // 49: hadoop.hdfs.qjournal.QJournalProtocolService.acceptRecovery:input_type -> hadoop.hdfs.qjournal.AcceptRecoveryRequestProto
	15, // 50: hadoop.hdfs.qjournal.QJournalProtocolService.isFormatted:output_type -> hadoop.hdfs.qjournal.IsFormattedResponseProto
	17, // 51: hadoop.hdfs.qjournal.QJournalProtocolService.getJournalCTime:output_type -> hadoop.hdfs.qjournal.GetJournalCTimeResponseProto
	19, // 52: hadoop.hdfs.qjournal.QJournalProtocolService.doPreUpgrade:output_type -> hadoop.hdfs.qjournal.DoPreUpgradeResponseProto
	21, // 53: hadoop.hdfs.qjournal.QJournalProtocolService.doUpgrade:output_type -> hadoop.hdfs.qjournal.DoUpgradeResponseProto
	23, // 54: hadoop.hdfs.qjournal.QJournalProtocolService.doFinalize:output_type -> hadoop.hdfs.qjournal.DoFinalizeResponseProto
	25, // 55: hadoop.hdfs.qjournal.QJournalProtocolService.canRollBack:output_type -> hadoop.hdfs.qjournal.CanRollBackResponseProto
	27, // 56: hadoop.hdfs.qjournal.QJournalProtocolService.doRollback:output_type -> hadoop.hdfs.qjournal.DoRollbackResponseProto
	29, // 57: hadoop.hdfs.qjournal.QJournalProtocolService.discardSegments:output_type -> hadoop.hdfs.qjournal.DiscardSegmentsResponseProto
	31, // 58: hadoop.hdfs.qjournal.QJournalProtocolService.getJournalState:output_type -> hadoop.hdfs.qjournal.GetJournalStateResponseProto
	35, // 59: hadoop.hdfs.qjournal.QJournalProtocolService.newEpoch:output_type -> hadoop.hdfs.qjournal.NewEpochResponseProto
	33, // 60: hadoop.hdfs.qjournal.QJournalProtocolService.format:output_type -> hadoop.hdfs.qjournal.FormatResponseProto
	5,  // 61: hadoop.hdfs.qjournal.QJournalProtocolService.journal:output_type -> hadoop.hdfs.qjournal.JournalResponseProto
	7,  // 62: hadoop.hdfs.qjournal.QJournalProtocolService.heartbeat:output_type -> hadoop.hdfs.qjournal.HeartbeatResponseProto
	9,  // 63: hadoop.hdfs.qjournal.QJournalProtocolService.startLogSegment:output_type -> hadoop.hdfs.qjournal.StartLogSegmentResponseProto
	11, // 64: hadoop.hdfs.qjournal.QJournalProtocolService.finalizeLogSegment:output_type -> hadoop.hdfs.qjournal.FinalizeLogSegmentResponseProto
	13, // 65: hadoop.hdfs.qjournal.QJournalProtocolService.purgeLogs:output_type -> hadoop.hdfs.qjournal.PurgeLogsResponseProto
	37, // 66: hadoop.hdfs.qjournal.QJournalProtocolService.getEditLogManifest:output_type -> hadoop.hdfs.qjournal.GetEditLogManifestResponseProto
	39, // 67: hadoop.hdfs.qjournal.QJournalProtocolService.getJournaledEdits:output_type -> hadoop.hdfs.qjournal.GetJournaledEditsResponseProto
	41, // 68: hadoop.hdfs.qjournal.QJournalProtocolService.prepareRecovery:output_type -> hadoop.hdfs.qjournal.PrepareRecoveryResponseProto
	43, // 69: hadoop.hdfs.qjournal.QJournalProtocolService.acceptRecovery:output_type -> hadoop.hdfs.qjournal.AcceptRecoveryResponseProto
	50, // [50:70] is the sub-list for method output_type
	30, // [30:50] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_QJournalProtocol_proto_init() }
func file_QJournalProtocol_proto_init() {
	if File_QJournalProtocol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_QJournalProtocol_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JournalIdProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentStateProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersistedRecoveryPaxosData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JournalRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JournalResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartLogSegmentRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartLogSegmentResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalizeLogSegmentRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalizeLogSegmentResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurgeLogsRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurgeLogsResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFormattedRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFormattedResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJournalCTimeRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJournalCTimeResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoPreUpgradeRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoPreUpgradeResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoUpgradeRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoUpgradeResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoFinalizeRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoFinalizeResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CanRollBackRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CanRollBackResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoRollbackRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoRollbackResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscardSegmentsRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscardSegmentsResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJournalStateRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJournalStateResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormatRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormatResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewEpochRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewEpochResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEditLogManifestRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEditLogManifestResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJournaledEditsRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJournaledEditsResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareRecoveryRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareRecoveryResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptRecoveryRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_QJournalProtocol_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptRecoveryResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_QJournalProtocol_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_QJournalProtocol_proto_goTypes,
		DependencyIndexes: file_QJournalProtocol_proto_depIdxs,
		MessageInfos:      file_QJournalProtocol_proto_msgTypes,
	}.Build()
	File_QJournalProtocol_proto = out.File
	file_QJournalProtocol_proto_rawDesc = nil
	file_QJournalProtocol_proto_goTypes = nil
	file_QJournalProtocol_proto_depIdxs = nil
}
