//*
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: github.com/kom0055/go-hadoop/proto/v1alpha1/yarn/api/server/application_history_server.proto

package server

import (
	api "github.com/kom0055/go-hadoop/proto/v1alpha1/yarn/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApplicationHistoryDataProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId          *api.ApplicationIdProto          `protobuf:"bytes,1,opt,name=application_id,json=applicationId" json:"application_id,omitempty"`
	ApplicationName        *string                          `protobuf:"bytes,2,opt,name=application_name,json=applicationName" json:"application_name,omitempty"`
	ApplicationType        *string                          `protobuf:"bytes,3,opt,name=application_type,json=applicationType" json:"application_type,omitempty"`
	User                   *string                          `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
	Queue                  *string                          `protobuf:"bytes,5,opt,name=queue" json:"queue,omitempty"`
	SubmitTime             *int64                           `protobuf:"varint,6,opt,name=submit_time,json=submitTime" json:"submit_time,omitempty"`
	StartTime              *int64                           `protobuf:"varint,7,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	FinishTime             *int64                           `protobuf:"varint,8,opt,name=finish_time,json=finishTime" json:"finish_time,omitempty"`
	DiagnosticsInfo        *string                          `protobuf:"bytes,9,opt,name=diagnostics_info,json=diagnosticsInfo" json:"diagnostics_info,omitempty"`
	FinalApplicationStatus *api.FinalApplicationStatusProto `protobuf:"varint,10,opt,name=final_application_status,json=finalApplicationStatus,enum=github.com.kom0055.go_hadoop.v1alpha1.yarn.api.FinalApplicationStatusProto" json:"final_application_status,omitempty"`
	YarnApplicationState   *api.YarnApplicationStateProto   `protobuf:"varint,11,opt,name=yarn_application_state,json=yarnApplicationState,enum=github.com.kom0055.go_hadoop.v1alpha1.yarn.api.YarnApplicationStateProto" json:"yarn_application_state,omitempty"`
}

func (x *ApplicationHistoryDataProto) Reset() {
	*x = ApplicationHistoryDataProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationHistoryDataProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationHistoryDataProto) ProtoMessage() {}

func (x *ApplicationHistoryDataProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationHistoryDataProto.ProtoReflect.Descriptor instead.
func (*ApplicationHistoryDataProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDescGZIP(), []int{0}
}

func (x *ApplicationHistoryDataProto) GetApplicationId() *api.ApplicationIdProto {
	if x != nil {
		return x.ApplicationId
	}
	return nil
}

func (x *ApplicationHistoryDataProto) GetApplicationName() string {
	if x != nil && x.ApplicationName != nil {
		return *x.ApplicationName
	}
	return ""
}

func (x *ApplicationHistoryDataProto) GetApplicationType() string {
	if x != nil && x.ApplicationType != nil {
		return *x.ApplicationType
	}
	return ""
}

func (x *ApplicationHistoryDataProto) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *ApplicationHistoryDataProto) GetQueue() string {
	if x != nil && x.Queue != nil {
		return *x.Queue
	}
	return ""
}

func (x *ApplicationHistoryDataProto) GetSubmitTime() int64 {
	if x != nil && x.SubmitTime != nil {
		return *x.SubmitTime
	}
	return 0
}

func (x *ApplicationHistoryDataProto) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *ApplicationHistoryDataProto) GetFinishTime() int64 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *ApplicationHistoryDataProto) GetDiagnosticsInfo() string {
	if x != nil && x.DiagnosticsInfo != nil {
		return *x.DiagnosticsInfo
	}
	return ""
}

func (x *ApplicationHistoryDataProto) GetFinalApplicationStatus() api.FinalApplicationStatusProto {
	if x != nil && x.FinalApplicationStatus != nil {
		return *x.FinalApplicationStatus
	}
	return api.FinalApplicationStatusProto(0)
}

func (x *ApplicationHistoryDataProto) GetYarnApplicationState() api.YarnApplicationStateProto {
	if x != nil && x.YarnApplicationState != nil {
		return *x.YarnApplicationState
	}
	return api.YarnApplicationStateProto(1)
}

type ApplicationStartDataProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId   *api.ApplicationIdProto `protobuf:"bytes,1,opt,name=application_id,json=applicationId" json:"application_id,omitempty"`
	ApplicationName *string                 `protobuf:"bytes,2,opt,name=application_name,json=applicationName" json:"application_name,omitempty"`
	ApplicationType *string                 `protobuf:"bytes,3,opt,name=application_type,json=applicationType" json:"application_type,omitempty"`
	User            *string                 `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
	Queue           *string                 `protobuf:"bytes,5,opt,name=queue" json:"queue,omitempty"`
	SubmitTime      *int64                  `protobuf:"varint,6,opt,name=submit_time,json=submitTime" json:"submit_time,omitempty"`
	StartTime       *int64                  `protobuf:"varint,7,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
}

func (x *ApplicationStartDataProto) Reset() {
	*x = ApplicationStartDataProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationStartDataProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationStartDataProto) ProtoMessage() {}

func (x *ApplicationStartDataProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationStartDataProto.ProtoReflect.Descriptor instead.
func (*ApplicationStartDataProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDescGZIP(), []int{1}
}

func (x *ApplicationStartDataProto) GetApplicationId() *api.ApplicationIdProto {
	if x != nil {
		return x.ApplicationId
	}
	return nil
}

func (x *ApplicationStartDataProto) GetApplicationName() string {
	if x != nil && x.ApplicationName != nil {
		return *x.ApplicationName
	}
	return ""
}

func (x *ApplicationStartDataProto) GetApplicationType() string {
	if x != nil && x.ApplicationType != nil {
		return *x.ApplicationType
	}
	return ""
}

func (x *ApplicationStartDataProto) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *ApplicationStartDataProto) GetQueue() string {
	if x != nil && x.Queue != nil {
		return *x.Queue
	}
	return ""
}

func (x *ApplicationStartDataProto) GetSubmitTime() int64 {
	if x != nil && x.SubmitTime != nil {
		return *x.SubmitTime
	}
	return 0
}

func (x *ApplicationStartDataProto) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

type ApplicationFinishDataProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId          *api.ApplicationIdProto          `protobuf:"bytes,1,opt,name=application_id,json=applicationId" json:"application_id,omitempty"`
	FinishTime             *int64                           `protobuf:"varint,2,opt,name=finish_time,json=finishTime" json:"finish_time,omitempty"`
	DiagnosticsInfo        *string                          `protobuf:"bytes,3,opt,name=diagnostics_info,json=diagnosticsInfo" json:"diagnostics_info,omitempty"`
	FinalApplicationStatus *api.FinalApplicationStatusProto `protobuf:"varint,4,opt,name=final_application_status,json=finalApplicationStatus,enum=github.com.kom0055.go_hadoop.v1alpha1.yarn.api.FinalApplicationStatusProto" json:"final_application_status,omitempty"`
	YarnApplicationState   *api.YarnApplicationStateProto   `protobuf:"varint,5,opt,name=yarn_application_state,json=yarnApplicationState,enum=github.com.kom0055.go_hadoop.v1alpha1.yarn.api.YarnApplicationStateProto" json:"yarn_application_state,omitempty"`
}

func (x *ApplicationFinishDataProto) Reset() {
	*x = ApplicationFinishDataProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationFinishDataProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationFinishDataProto) ProtoMessage() {}

func (x *ApplicationFinishDataProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationFinishDataProto.ProtoReflect.Descriptor instead.
func (*ApplicationFinishDataProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDescGZIP(), []int{2}
}

func (x *ApplicationFinishDataProto) GetApplicationId() *api.ApplicationIdProto {
	if x != nil {
		return x.ApplicationId
	}
	return nil
}

func (x *ApplicationFinishDataProto) GetFinishTime() int64 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *ApplicationFinishDataProto) GetDiagnosticsInfo() string {
	if x != nil && x.DiagnosticsInfo != nil {
		return *x.DiagnosticsInfo
	}
	return ""
}

func (x *ApplicationFinishDataProto) GetFinalApplicationStatus() api.FinalApplicationStatusProto {
	if x != nil && x.FinalApplicationStatus != nil {
		return *x.FinalApplicationStatus
	}
	return api.FinalApplicationStatusProto(0)
}

func (x *ApplicationFinishDataProto) GetYarnApplicationState() api.YarnApplicationStateProto {
	if x != nil && x.YarnApplicationState != nil {
		return *x.YarnApplicationState
	}
	return api.YarnApplicationStateProto(1)
}

type ApplicationAttemptHistoryDataProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationAttemptId        *api.ApplicationAttemptIdProto        `protobuf:"bytes,1,opt,name=application_attempt_id,json=applicationAttemptId" json:"application_attempt_id,omitempty"`
	Host                        *string                               `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	RpcPort                     *int32                                `protobuf:"varint,3,opt,name=rpc_port,json=rpcPort" json:"rpc_port,omitempty"`
	TrackingUrl                 *string                               `protobuf:"bytes,4,opt,name=tracking_url,json=trackingUrl" json:"tracking_url,omitempty"`
	DiagnosticsInfo             *string                               `protobuf:"bytes,5,opt,name=diagnostics_info,json=diagnosticsInfo" json:"diagnostics_info,omitempty"`
	FinalApplicationStatus      *api.FinalApplicationStatusProto      `protobuf:"varint,6,opt,name=final_application_status,json=finalApplicationStatus,enum=github.com.kom0055.go_hadoop.v1alpha1.yarn.api.FinalApplicationStatusProto" json:"final_application_status,omitempty"`
	MasterContainerId           *api.ContainerIdProto                 `protobuf:"bytes,7,opt,name=master_container_id,json=masterContainerId" json:"master_container_id,omitempty"`
	YarnApplicationAttemptState *api.YarnApplicationAttemptStateProto `protobuf:"varint,8,opt,name=yarn_application_attempt_state,json=yarnApplicationAttemptState,enum=github.com.kom0055.go_hadoop.v1alpha1.yarn.api.YarnApplicationAttemptStateProto" json:"yarn_application_attempt_state,omitempty"`
}

func (x *ApplicationAttemptHistoryDataProto) Reset() {
	*x = ApplicationAttemptHistoryDataProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationAttemptHistoryDataProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationAttemptHistoryDataProto) ProtoMessage() {}

func (x *ApplicationAttemptHistoryDataProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationAttemptHistoryDataProto.ProtoReflect.Descriptor instead.
func (*ApplicationAttemptHistoryDataProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDescGZIP(), []int{3}
}

func (x *ApplicationAttemptHistoryDataProto) GetApplicationAttemptId() *api.ApplicationAttemptIdProto {
	if x != nil {
		return x.ApplicationAttemptId
	}
	return nil
}

func (x *ApplicationAttemptHistoryDataProto) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *ApplicationAttemptHistoryDataProto) GetRpcPort() int32 {
	if x != nil && x.RpcPort != nil {
		return *x.RpcPort
	}
	return 0
}

func (x *ApplicationAttemptHistoryDataProto) GetTrackingUrl() string {
	if x != nil && x.TrackingUrl != nil {
		return *x.TrackingUrl
	}
	return ""
}

func (x *ApplicationAttemptHistoryDataProto) GetDiagnosticsInfo() string {
	if x != nil && x.DiagnosticsInfo != nil {
		return *x.DiagnosticsInfo
	}
	return ""
}

func (x *ApplicationAttemptHistoryDataProto) GetFinalApplicationStatus() api.FinalApplicationStatusProto {
	if x != nil && x.FinalApplicationStatus != nil {
		return *x.FinalApplicationStatus
	}
	return api.FinalApplicationStatusProto(0)
}

func (x *ApplicationAttemptHistoryDataProto) GetMasterContainerId() *api.ContainerIdProto {
	if x != nil {
		return x.MasterContainerId
	}
	return nil
}

func (x *ApplicationAttemptHistoryDataProto) GetYarnApplicationAttemptState() api.YarnApplicationAttemptStateProto {
	if x != nil && x.YarnApplicationAttemptState != nil {
		return *x.YarnApplicationAttemptState
	}
	return api.YarnApplicationAttemptStateProto(1)
}

type ApplicationAttemptStartDataProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationAttemptId *api.ApplicationAttemptIdProto `protobuf:"bytes,1,opt,name=application_attempt_id,json=applicationAttemptId" json:"application_attempt_id,omitempty"`
	Host                 *string                        `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	RpcPort              *int32                         `protobuf:"varint,3,opt,name=rpc_port,json=rpcPort" json:"rpc_port,omitempty"`
	MasterContainerId    *api.ContainerIdProto          `protobuf:"bytes,4,opt,name=master_container_id,json=masterContainerId" json:"master_container_id,omitempty"`
}

func (x *ApplicationAttemptStartDataProto) Reset() {
	*x = ApplicationAttemptStartDataProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationAttemptStartDataProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationAttemptStartDataProto) ProtoMessage() {}

func (x *ApplicationAttemptStartDataProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationAttemptStartDataProto.ProtoReflect.Descriptor instead.
func (*ApplicationAttemptStartDataProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDescGZIP(), []int{4}
}

func (x *ApplicationAttemptStartDataProto) GetApplicationAttemptId() *api.ApplicationAttemptIdProto {
	if x != nil {
		return x.ApplicationAttemptId
	}
	return nil
}

func (x *ApplicationAttemptStartDataProto) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *ApplicationAttemptStartDataProto) GetRpcPort() int32 {
	if x != nil && x.RpcPort != nil {
		return *x.RpcPort
	}
	return 0
}

func (x *ApplicationAttemptStartDataProto) GetMasterContainerId() *api.ContainerIdProto {
	if x != nil {
		return x.MasterContainerId
	}
	return nil
}

type ApplicationAttemptFinishDataProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationAttemptId        *api.ApplicationAttemptIdProto        `protobuf:"bytes,1,opt,name=application_attempt_id,json=applicationAttemptId" json:"application_attempt_id,omitempty"`
	TrackingUrl                 *string                               `protobuf:"bytes,2,opt,name=tracking_url,json=trackingUrl" json:"tracking_url,omitempty"`
	DiagnosticsInfo             *string                               `protobuf:"bytes,3,opt,name=diagnostics_info,json=diagnosticsInfo" json:"diagnostics_info,omitempty"`
	FinalApplicationStatus      *api.FinalApplicationStatusProto      `protobuf:"varint,4,opt,name=final_application_status,json=finalApplicationStatus,enum=github.com.kom0055.go_hadoop.v1alpha1.yarn.api.FinalApplicationStatusProto" json:"final_application_status,omitempty"`
	YarnApplicationAttemptState *api.YarnApplicationAttemptStateProto `protobuf:"varint,5,opt,name=yarn_application_attempt_state,json=yarnApplicationAttemptState,enum=github.com.kom0055.go_hadoop.v1alpha1.yarn.api.YarnApplicationAttemptStateProto" json:"yarn_application_attempt_state,omitempty"`
}

func (x *ApplicationAttemptFinishDataProto) Reset() {
	*x = ApplicationAttemptFinishDataProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationAttemptFinishDataProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationAttemptFinishDataProto) ProtoMessage() {}

func (x *ApplicationAttemptFinishDataProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationAttemptFinishDataProto.ProtoReflect.Descriptor instead.
func (*ApplicationAttemptFinishDataProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDescGZIP(), []int{5}
}

func (x *ApplicationAttemptFinishDataProto) GetApplicationAttemptId() *api.ApplicationAttemptIdProto {
	if x != nil {
		return x.ApplicationAttemptId
	}
	return nil
}

func (x *ApplicationAttemptFinishDataProto) GetTrackingUrl() string {
	if x != nil && x.TrackingUrl != nil {
		return *x.TrackingUrl
	}
	return ""
}

func (x *ApplicationAttemptFinishDataProto) GetDiagnosticsInfo() string {
	if x != nil && x.DiagnosticsInfo != nil {
		return *x.DiagnosticsInfo
	}
	return ""
}

func (x *ApplicationAttemptFinishDataProto) GetFinalApplicationStatus() api.FinalApplicationStatusProto {
	if x != nil && x.FinalApplicationStatus != nil {
		return *x.FinalApplicationStatus
	}
	return api.FinalApplicationStatusProto(0)
}

func (x *ApplicationAttemptFinishDataProto) GetYarnApplicationAttemptState() api.YarnApplicationAttemptStateProto {
	if x != nil && x.YarnApplicationAttemptState != nil {
		return *x.YarnApplicationAttemptState
	}
	return api.YarnApplicationAttemptStateProto(1)
}

type ContainerHistoryDataProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId         *api.ContainerIdProto    `protobuf:"bytes,1,opt,name=container_id,json=containerId" json:"container_id,omitempty"`
	AllocatedResource   *api.ResourceProto       `protobuf:"bytes,2,opt,name=allocated_resource,json=allocatedResource" json:"allocated_resource,omitempty"`
	AssignedNodeId      *api.NodeIdProto         `protobuf:"bytes,3,opt,name=assigned_node_id,json=assignedNodeId" json:"assigned_node_id,omitempty"`
	Priority            *api.PriorityProto       `protobuf:"bytes,4,opt,name=priority" json:"priority,omitempty"`
	StartTime           *int64                   `protobuf:"varint,5,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	FinishTime          *int64                   `protobuf:"varint,6,opt,name=finish_time,json=finishTime" json:"finish_time,omitempty"`
	DiagnosticsInfo     *string                  `protobuf:"bytes,7,opt,name=diagnostics_info,json=diagnosticsInfo" json:"diagnostics_info,omitempty"`
	ContainerExitStatus *int32                   `protobuf:"varint,8,opt,name=container_exit_status,json=containerExitStatus" json:"container_exit_status,omitempty"`
	ContainerState      *api.ContainerStateProto `protobuf:"varint,9,opt,name=container_state,json=containerState,enum=github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerStateProto" json:"container_state,omitempty"`
}

func (x *ContainerHistoryDataProto) Reset() {
	*x = ContainerHistoryDataProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerHistoryDataProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerHistoryDataProto) ProtoMessage() {}

func (x *ContainerHistoryDataProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerHistoryDataProto.ProtoReflect.Descriptor instead.
func (*ContainerHistoryDataProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDescGZIP(), []int{6}
}

func (x *ContainerHistoryDataProto) GetContainerId() *api.ContainerIdProto {
	if x != nil {
		return x.ContainerId
	}
	return nil
}

func (x *ContainerHistoryDataProto) GetAllocatedResource() *api.ResourceProto {
	if x != nil {
		return x.AllocatedResource
	}
	return nil
}

func (x *ContainerHistoryDataProto) GetAssignedNodeId() *api.NodeIdProto {
	if x != nil {
		return x.AssignedNodeId
	}
	return nil
}

func (x *ContainerHistoryDataProto) GetPriority() *api.PriorityProto {
	if x != nil {
		return x.Priority
	}
	return nil
}

func (x *ContainerHistoryDataProto) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *ContainerHistoryDataProto) GetFinishTime() int64 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *ContainerHistoryDataProto) GetDiagnosticsInfo() string {
	if x != nil && x.DiagnosticsInfo != nil {
		return *x.DiagnosticsInfo
	}
	return ""
}

func (x *ContainerHistoryDataProto) GetContainerExitStatus() int32 {
	if x != nil && x.ContainerExitStatus != nil {
		return *x.ContainerExitStatus
	}
	return 0
}

func (x *ContainerHistoryDataProto) GetContainerState() api.ContainerStateProto {
	if x != nil && x.ContainerState != nil {
		return *x.ContainerState
	}
	return api.ContainerStateProto(1)
}

type ContainerStartDataProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId       *api.ContainerIdProto `protobuf:"bytes,1,opt,name=container_id,json=containerId" json:"container_id,omitempty"`
	AllocatedResource *api.ResourceProto    `protobuf:"bytes,2,opt,name=allocated_resource,json=allocatedResource" json:"allocated_resource,omitempty"`
	AssignedNodeId    *api.NodeIdProto      `protobuf:"bytes,3,opt,name=assigned_node_id,json=assignedNodeId" json:"assigned_node_id,omitempty"`
	Priority          *api.PriorityProto    `protobuf:"bytes,4,opt,name=priority" json:"priority,omitempty"`
	StartTime         *int64                `protobuf:"varint,5,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
}

func (x *ContainerStartDataProto) Reset() {
	*x = ContainerStartDataProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerStartDataProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStartDataProto) ProtoMessage() {}

func (x *ContainerStartDataProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStartDataProto.ProtoReflect.Descriptor instead.
func (*ContainerStartDataProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDescGZIP(), []int{7}
}

func (x *ContainerStartDataProto) GetContainerId() *api.ContainerIdProto {
	if x != nil {
		return x.ContainerId
	}
	return nil
}

func (x *ContainerStartDataProto) GetAllocatedResource() *api.ResourceProto {
	if x != nil {
		return x.AllocatedResource
	}
	return nil
}

func (x *ContainerStartDataProto) GetAssignedNodeId() *api.NodeIdProto {
	if x != nil {
		return x.AssignedNodeId
	}
	return nil
}

func (x *ContainerStartDataProto) GetPriority() *api.PriorityProto {
	if x != nil {
		return x.Priority
	}
	return nil
}

func (x *ContainerStartDataProto) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

type ContainerFinishDataProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId         *api.ContainerIdProto    `protobuf:"bytes,1,opt,name=container_id,json=containerId" json:"container_id,omitempty"`
	FinishTime          *int64                   `protobuf:"varint,2,opt,name=finish_time,json=finishTime" json:"finish_time,omitempty"`
	DiagnosticsInfo     *string                  `protobuf:"bytes,3,opt,name=diagnostics_info,json=diagnosticsInfo" json:"diagnostics_info,omitempty"`
	ContainerExitStatus *int32                   `protobuf:"varint,4,opt,name=container_exit_status,json=containerExitStatus" json:"container_exit_status,omitempty"`
	ContainerState      *api.ContainerStateProto `protobuf:"varint,5,opt,name=container_state,json=containerState,enum=github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerStateProto" json:"container_state,omitempty"`
}

func (x *ContainerFinishDataProto) Reset() {
	*x = ContainerFinishDataProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerFinishDataProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerFinishDataProto) ProtoMessage() {}

func (x *ContainerFinishDataProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerFinishDataProto.ProtoReflect.Descriptor instead.
func (*ContainerFinishDataProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDescGZIP(), []int{8}
}

func (x *ContainerFinishDataProto) GetContainerId() *api.ContainerIdProto {
	if x != nil {
		return x.ContainerId
	}
	return nil
}

func (x *ContainerFinishDataProto) GetFinishTime() int64 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *ContainerFinishDataProto) GetDiagnosticsInfo() string {
	if x != nil && x.DiagnosticsInfo != nil {
		return *x.DiagnosticsInfo
	}
	return ""
}

func (x *ContainerFinishDataProto) GetContainerExitStatus() int32 {
	if x != nil && x.ContainerExitStatus != nil {
		return *x.ContainerExitStatus
	}
	return 0
}

func (x *ContainerFinishDataProto) GetContainerState() api.ContainerStateProto {
	if x != nil && x.ContainerState != nil {
		return *x.ContainerState
	}
	return api.ContainerStateProto(1)
}

var File_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto protoreflect.FileDescriptor

var file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDesc = []byte{
	0x0a, 0x5c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x6d,
	0x30, 0x30, 0x35, 0x35, 0x2f, 0x67, 0x6f, 0x2d, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x79, 0x61,
	0x72, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x35,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30,
	0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2f, 0x67, 0x6f, 0x2d, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x79, 0x61, 0x72, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x79, 0x61, 0x72, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x05,
	0x0a, 0x1b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x69, 0x0a,
	0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x85, 0x01, 0x0a, 0x18, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x16, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x7f, 0x0a, 0x16,
	0x79, 0x61, 0x72, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x59, 0x61,
	0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x79, 0x61, 0x72, 0x6e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xc6, 0x02,
	0x0a, 0x19, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x69, 0x0a, 0x0e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xdc, 0x03, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x69, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30,
	0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x85, 0x01, 0x0a,
	0x18, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d,
	0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x16, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x7f, 0x0a, 0x16, 0x79, 0x61, 0x72, 0x6e, 0x5f, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x59, 0x61, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x14, 0x79, 0x61, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xb4, 0x05, 0x0a, 0x22, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x7f, 0x0a, 0x16,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x12,
	0x29, 0x0a, 0x10, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x85, 0x01, 0x0a, 0x18, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30,
	0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x16, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x70, 0x0a, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d,
	0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x11, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x95, 0x01, 0x0a, 0x1e, 0x79, 0x61, 0x72, 0x6e, 0x5f, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x50, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30,
	0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x59,
	0x61, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x1b, 0x79, 0x61, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xc4, 0x02, 0x0a,
	0x20, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x7f, 0x0a, 0x16, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b,
	0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x70, 0x0a, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30,
	0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x11, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x92, 0x04, 0x0a, 0x21, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x7f, 0x0a, 0x16, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67,
	0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x29, 0x0a,
	0x10, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x85, 0x01, 0x0a, 0x18, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35,
	0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x16, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x95, 0x01, 0x0a, 0x1e, 0x79, 0x61, 0x72, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67,
	0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x59, 0x61, 0x72, 0x6e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x1b, 0x79, 0x61, 0x72,
	0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xbd, 0x05, 0x0a, 0x19, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x63, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x6c, 0x0a, 0x12, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x10, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x59, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x45, 0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6c, 0x0a, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xcd, 0x03, 0x0a, 0x17, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x63, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e,
	0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x6c, 0x0a, 0x12, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x10, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b,
	0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0e,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x59,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f,
	0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xed, 0x02, 0x0a, 0x18, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x63, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35,
	0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x45, 0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6c, 0x0a, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2f, 0x67,
	0x6f, 0x2d, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x79, 0x61, 0x72, 0x6e, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
}

var (
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDescOnce sync.Once
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDescData = file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDesc
)

func file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDescGZIP() []byte {
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDescOnce.Do(func() {
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDescData)
	})
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDescData
}

var file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_goTypes = []interface{}{
	(*ApplicationHistoryDataProto)(nil),        // 0: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationHistoryDataProto
	(*ApplicationStartDataProto)(nil),          // 1: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationStartDataProto
	(*ApplicationFinishDataProto)(nil),         // 2: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationFinishDataProto
	(*ApplicationAttemptHistoryDataProto)(nil), // 3: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationAttemptHistoryDataProto
	(*ApplicationAttemptStartDataProto)(nil),   // 4: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationAttemptStartDataProto
	(*ApplicationAttemptFinishDataProto)(nil),  // 5: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationAttemptFinishDataProto
	(*ContainerHistoryDataProto)(nil),          // 6: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ContainerHistoryDataProto
	(*ContainerStartDataProto)(nil),            // 7: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ContainerStartDataProto
	(*ContainerFinishDataProto)(nil),           // 8: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ContainerFinishDataProto
	(*api.ApplicationIdProto)(nil),             // 9: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ApplicationIdProto
	(api.FinalApplicationStatusProto)(0),       // 10: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.FinalApplicationStatusProto
	(api.YarnApplicationStateProto)(0),         // 11: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.YarnApplicationStateProto
	(*api.ApplicationAttemptIdProto)(nil),      // 12: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ApplicationAttemptIdProto
	(*api.ContainerIdProto)(nil),               // 13: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerIdProto
	(api.YarnApplicationAttemptStateProto)(0),  // 14: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.YarnApplicationAttemptStateProto
	(*api.ResourceProto)(nil),                  // 15: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ResourceProto
	(*api.NodeIdProto)(nil),                    // 16: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.NodeIdProto
	(*api.PriorityProto)(nil),                  // 17: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.PriorityProto
	(api.ContainerStateProto)(0),               // 18: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerStateProto
}
var file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_depIdxs = []int32{
	9,  // 0: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationHistoryDataProto.application_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ApplicationIdProto
	10, // 1: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationHistoryDataProto.final_application_status:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.FinalApplicationStatusProto
	11, // 2: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationHistoryDataProto.yarn_application_state:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.YarnApplicationStateProto
	9,  // 3: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationStartDataProto.application_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ApplicationIdProto
	9,  // 4: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationFinishDataProto.application_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ApplicationIdProto
	10, // 5: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationFinishDataProto.final_application_status:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.FinalApplicationStatusProto
	11, // 6: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationFinishDataProto.yarn_application_state:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.YarnApplicationStateProto
	12, // 7: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationAttemptHistoryDataProto.application_attempt_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ApplicationAttemptIdProto
	10, // 8: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationAttemptHistoryDataProto.final_application_status:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.FinalApplicationStatusProto
	13, // 9: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationAttemptHistoryDataProto.master_container_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerIdProto
	14, // 10: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationAttemptHistoryDataProto.yarn_application_attempt_state:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.YarnApplicationAttemptStateProto
	12, // 11: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationAttemptStartDataProto.application_attempt_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ApplicationAttemptIdProto
	13, // 12: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationAttemptStartDataProto.master_container_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerIdProto
	12, // 13: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationAttemptFinishDataProto.application_attempt_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ApplicationAttemptIdProto
	10, // 14: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationAttemptFinishDataProto.final_application_status:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.FinalApplicationStatusProto
	14, // 15: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ApplicationAttemptFinishDataProto.yarn_application_attempt_state:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.YarnApplicationAttemptStateProto
	13, // 16: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ContainerHistoryDataProto.container_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerIdProto
	15, // 17: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ContainerHistoryDataProto.allocated_resource:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ResourceProto
	16, // 18: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ContainerHistoryDataProto.assigned_node_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.NodeIdProto
	17, // 19: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ContainerHistoryDataProto.priority:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.PriorityProto
	18, // 20: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ContainerHistoryDataProto.container_state:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerStateProto
	13, // 21: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ContainerStartDataProto.container_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerIdProto
	15, // 22: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ContainerStartDataProto.allocated_resource:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ResourceProto
	16, // 23: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ContainerStartDataProto.assigned_node_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.NodeIdProto
	17, // 24: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ContainerStartDataProto.priority:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.PriorityProto
	13, // 25: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ContainerFinishDataProto.container_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerIdProto
	18, // 26: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.server.ContainerFinishDataProto.container_state:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerStateProto
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() {
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_init()
}
func file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_init() {
	if File_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationHistoryDataProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationStartDataProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationFinishDataProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationAttemptHistoryDataProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationAttemptStartDataProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationAttemptFinishDataProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerHistoryDataProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerStartDataProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerFinishDataProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_goTypes,
		DependencyIndexes: file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_depIdxs,
		MessageInfos:      file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_msgTypes,
	}.Build()
	File_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto = out.File
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_rawDesc = nil
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_goTypes = nil
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_api_server_application_history_server_proto_depIdxs = nil
}
