/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * These .proto interfaces are public and stable.
 * Please see http://wiki.apache.org/hadoop/Compatibility
 * for what changes are allowed for a *stable* .proto interface.
 */
syntax = "proto2";

package github.com.kom0055.go_hadoop.v1alpha1.yarn.api;
option go_package = "github.com/kom0055/go-hadoop/proto/v1alpha1/yarn/api";

import "github.com/kom0055/go-hadoop/proto/v1alpha1/common/Security.proto";
import "github.com/kom0055/go-hadoop/proto/v1alpha1/yarn/api/yarn_service_protos.proto";

service ApplicationClientProtocolService {
  rpc getNewApplication (GetNewApplicationRequestProto) returns (GetNewApplicationResponseProto);
  rpc getApplicationReport (GetApplicationReportRequestProto) returns (GetApplicationReportResponseProto);
  rpc submitApplication (SubmitApplicationRequestProto) returns (SubmitApplicationResponseProto);
  rpc failApplicationAttempt (FailApplicationAttemptRequestProto) returns (FailApplicationAttemptResponseProto);
  rpc forceKillApplication (KillApplicationRequestProto) returns (KillApplicationResponseProto);
  rpc getClusterMetrics (GetClusterMetricsRequestProto) returns (GetClusterMetricsResponseProto);
  rpc getApplications (GetApplicationsRequestProto) returns (GetApplicationsResponseProto);
  rpc getClusterNodes (GetClusterNodesRequestProto) returns (GetClusterNodesResponseProto);
  rpc getQueueInfo (GetQueueInfoRequestProto) returns (GetQueueInfoResponseProto);
  rpc getQueueUserAcls (GetQueueUserAclsInfoRequestProto) returns (GetQueueUserAclsInfoResponseProto);
  rpc getDelegationToken(github.com.kom0055.go_hadoop.v1alpha1.common.GetDelegationTokenRequestProto) returns (github.com.kom0055.go_hadoop.v1alpha1.common.GetDelegationTokenResponseProto);
  rpc renewDelegationToken(github.com.kom0055.go_hadoop.v1alpha1.common.RenewDelegationTokenRequestProto) returns (github.com.kom0055.go_hadoop.v1alpha1.common.RenewDelegationTokenResponseProto);
  rpc cancelDelegationToken(github.com.kom0055.go_hadoop.v1alpha1.common.CancelDelegationTokenRequestProto) returns (github.com.kom0055.go_hadoop.v1alpha1.common.CancelDelegationTokenResponseProto);
  rpc moveApplicationAcrossQueues(MoveApplicationAcrossQueuesRequestProto) returns (MoveApplicationAcrossQueuesResponseProto);
  rpc getApplicationAttemptReport (GetApplicationAttemptReportRequestProto) returns (GetApplicationAttemptReportResponseProto);
  rpc getApplicationAttempts (GetApplicationAttemptsRequestProto) returns (GetApplicationAttemptsResponseProto);
  rpc getContainerReport (GetContainerReportRequestProto) returns (GetContainerReportResponseProto);
  rpc getContainers (GetContainersRequestProto) returns (GetContainersResponseProto);
  rpc getNewReservation (GetNewReservationRequestProto) returns (GetNewReservationResponseProto);
  rpc submitReservation (ReservationSubmissionRequestProto) returns (ReservationSubmissionResponseProto);
  rpc updateReservation (ReservationUpdateRequestProto) returns (ReservationUpdateResponseProto);
  rpc deleteReservation (ReservationDeleteRequestProto) returns (ReservationDeleteResponseProto);
  rpc listReservations (ReservationListRequestProto) returns (ReservationListResponseProto);
  rpc getNodeToLabels (GetNodesToLabelsRequestProto) returns (GetNodesToLabelsResponseProto);
  rpc getLabelsToNodes (GetLabelsToNodesRequestProto) returns (GetLabelsToNodesResponseProto);
  rpc getClusterNodeLabels (GetClusterNodeLabelsRequestProto) returns (GetClusterNodeLabelsResponseProto);
  rpc updateApplicationPriority (UpdateApplicationPriorityRequestProto) returns (UpdateApplicationPriorityResponseProto);
  rpc signalToContainer(SignalContainerRequestProto) returns (SignalContainerResponseProto);
  rpc updateApplicationTimeouts (UpdateApplicationTimeoutsRequestProto) returns (UpdateApplicationTimeoutsResponseProto);
  rpc getResourceProfiles(GetAllResourceProfilesRequestProto) returns (GetAllResourceProfilesResponseProto);
  rpc getResourceProfile(GetResourceProfileRequestProto) returns (GetResourceProfileResponseProto);
  rpc getResourceTypeInfo(GetAllResourceTypeInfoRequestProto) returns (GetAllResourceTypeInfoResponseProto);
}
