//*
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: github.com/kom0055/go-hadoop/proto/v1alpha1/yarn/server/common/yarn_server_common_service_protos.proto

package common

import (
	common "github.com/kom0055/go-hadoop/proto/v1alpha1/common"
	api "github.com/kom0055/go-hadoop/proto/v1alpha1/yarn/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RemoteNodeProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId      *api.NodeIdProto `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	HttpAddress *string          `protobuf:"bytes,2,opt,name=http_address,json=httpAddress" json:"http_address,omitempty"`
	RackName    *string          `protobuf:"bytes,3,opt,name=rack_name,json=rackName" json:"rack_name,omitempty"`
}

func (x *RemoteNodeProto) Reset() {
	*x = RemoteNodeProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteNodeProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteNodeProto) ProtoMessage() {}

func (x *RemoteNodeProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteNodeProto.ProtoReflect.Descriptor instead.
func (*RemoteNodeProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{0}
}

func (x *RemoteNodeProto) GetNodeId() *api.NodeIdProto {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *RemoteNodeProto) GetHttpAddress() string {
	if x != nil && x.HttpAddress != nil {
		return *x.HttpAddress
	}
	return ""
}

func (x *RemoteNodeProto) GetRackName() string {
	if x != nil && x.RackName != nil {
		return *x.RackName
	}
	return ""
}

type RegisterDistributedSchedulingAMResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisterResponse             *api.RegisterApplicationMasterResponseProto `protobuf:"bytes,1,opt,name=register_response,json=registerResponse" json:"register_response,omitempty"`
	MaxContainerResource         *api.ResourceProto                          `protobuf:"bytes,2,opt,name=max_container_resource,json=maxContainerResource" json:"max_container_resource,omitempty"`
	MinContainerResource         *api.ResourceProto                          `protobuf:"bytes,3,opt,name=min_container_resource,json=minContainerResource" json:"min_container_resource,omitempty"`
	IncrContainerResource        *api.ResourceProto                          `protobuf:"bytes,4,opt,name=incr_container_resource,json=incrContainerResource" json:"incr_container_resource,omitempty"`
	ContainerTokenExpiryInterval *int32                                      `protobuf:"varint,5,opt,name=container_token_expiry_interval,json=containerTokenExpiryInterval" json:"container_token_expiry_interval,omitempty"`
	ContainerIdStart             *int64                                      `protobuf:"varint,6,opt,name=container_id_start,json=containerIdStart" json:"container_id_start,omitempty"`
	NodesForScheduling           []*RemoteNodeProto                          `protobuf:"bytes,7,rep,name=nodes_for_scheduling,json=nodesForScheduling" json:"nodes_for_scheduling,omitempty"`
}

func (x *RegisterDistributedSchedulingAMResponseProto) Reset() {
	*x = RegisterDistributedSchedulingAMResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterDistributedSchedulingAMResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDistributedSchedulingAMResponseProto) ProtoMessage() {}

func (x *RegisterDistributedSchedulingAMResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDistributedSchedulingAMResponseProto.ProtoReflect.Descriptor instead.
func (*RegisterDistributedSchedulingAMResponseProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterDistributedSchedulingAMResponseProto) GetRegisterResponse() *api.RegisterApplicationMasterResponseProto {
	if x != nil {
		return x.RegisterResponse
	}
	return nil
}

func (x *RegisterDistributedSchedulingAMResponseProto) GetMaxContainerResource() *api.ResourceProto {
	if x != nil {
		return x.MaxContainerResource
	}
	return nil
}

func (x *RegisterDistributedSchedulingAMResponseProto) GetMinContainerResource() *api.ResourceProto {
	if x != nil {
		return x.MinContainerResource
	}
	return nil
}

func (x *RegisterDistributedSchedulingAMResponseProto) GetIncrContainerResource() *api.ResourceProto {
	if x != nil {
		return x.IncrContainerResource
	}
	return nil
}

func (x *RegisterDistributedSchedulingAMResponseProto) GetContainerTokenExpiryInterval() int32 {
	if x != nil && x.ContainerTokenExpiryInterval != nil {
		return *x.ContainerTokenExpiryInterval
	}
	return 0
}

func (x *RegisterDistributedSchedulingAMResponseProto) GetContainerIdStart() int64 {
	if x != nil && x.ContainerIdStart != nil {
		return *x.ContainerIdStart
	}
	return 0
}

func (x *RegisterDistributedSchedulingAMResponseProto) GetNodesForScheduling() []*RemoteNodeProto {
	if x != nil {
		return x.NodesForScheduling
	}
	return nil
}

type DistributedSchedulingAllocateResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllocateResponse   *api.AllocateResponseProto `protobuf:"bytes,1,opt,name=allocate_response,json=allocateResponse" json:"allocate_response,omitempty"`
	NodesForScheduling []*RemoteNodeProto         `protobuf:"bytes,2,rep,name=nodes_for_scheduling,json=nodesForScheduling" json:"nodes_for_scheduling,omitempty"`
}

func (x *DistributedSchedulingAllocateResponseProto) Reset() {
	*x = DistributedSchedulingAllocateResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributedSchedulingAllocateResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributedSchedulingAllocateResponseProto) ProtoMessage() {}

func (x *DistributedSchedulingAllocateResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributedSchedulingAllocateResponseProto.ProtoReflect.Descriptor instead.
func (*DistributedSchedulingAllocateResponseProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{2}
}

func (x *DistributedSchedulingAllocateResponseProto) GetAllocateResponse() *api.AllocateResponseProto {
	if x != nil {
		return x.AllocateResponse
	}
	return nil
}

func (x *DistributedSchedulingAllocateResponseProto) GetNodesForScheduling() []*RemoteNodeProto {
	if x != nil {
		return x.NodesForScheduling
	}
	return nil
}

type DistributedSchedulingAllocateRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllocateRequest     *api.AllocateRequestProto `protobuf:"bytes,1,opt,name=allocate_request,json=allocateRequest" json:"allocate_request,omitempty"`
	AllocatedContainers []*api.ContainerProto     `protobuf:"bytes,2,rep,name=allocated_containers,json=allocatedContainers" json:"allocated_containers,omitempty"`
}

func (x *DistributedSchedulingAllocateRequestProto) Reset() {
	*x = DistributedSchedulingAllocateRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributedSchedulingAllocateRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributedSchedulingAllocateRequestProto) ProtoMessage() {}

func (x *DistributedSchedulingAllocateRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributedSchedulingAllocateRequestProto.ProtoReflect.Descriptor instead.
func (*DistributedSchedulingAllocateRequestProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{3}
}

func (x *DistributedSchedulingAllocateRequestProto) GetAllocateRequest() *api.AllocateRequestProto {
	if x != nil {
		return x.AllocateRequest
	}
	return nil
}

func (x *DistributedSchedulingAllocateRequestProto) GetAllocatedContainers() []*api.ContainerProto {
	if x != nil {
		return x.AllocatedContainers
	}
	return nil
}

type NodeLabelsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeLabels []*api.NodeLabelProto `protobuf:"bytes,1,rep,name=nodeLabels" json:"nodeLabels,omitempty"`
}

func (x *NodeLabelsProto) Reset() {
	*x = NodeLabelsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeLabelsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeLabelsProto) ProtoMessage() {}

func (x *NodeLabelsProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeLabelsProto.ProtoReflect.Descriptor instead.
func (*NodeLabelsProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{4}
}

func (x *NodeLabelsProto) GetNodeLabels() []*api.NodeLabelProto {
	if x != nil {
		return x.NodeLabels
	}
	return nil
}

type RegisterNodeManagerRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId                       *api.NodeIdProto             `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	HttpPort                     *int32                       `protobuf:"varint,3,opt,name=http_port,json=httpPort" json:"http_port,omitempty"`
	Resource                     *api.ResourceProto           `protobuf:"bytes,4,opt,name=resource" json:"resource,omitempty"`
	NmVersion                    *string                      `protobuf:"bytes,5,opt,name=nm_version,json=nmVersion" json:"nm_version,omitempty"`
	ContainerStatuses            []*NMContainerStatusProto    `protobuf:"bytes,6,rep,name=container_statuses,json=containerStatuses" json:"container_statuses,omitempty"`
	RunningApplications          []*api.ApplicationIdProto    `protobuf:"bytes,7,rep,name=runningApplications" json:"runningApplications,omitempty"`
	NodeLabels                   *NodeLabelsProto             `protobuf:"bytes,8,opt,name=nodeLabels" json:"nodeLabels,omitempty"`
	PhysicalResource             *api.ResourceProto           `protobuf:"bytes,9,opt,name=physicalResource" json:"physicalResource,omitempty"`
	LogAggregationReportsForApps []*LogAggregationReportProto `protobuf:"bytes,10,rep,name=log_aggregation_reports_for_apps,json=logAggregationReportsForApps" json:"log_aggregation_reports_for_apps,omitempty"`
}

func (x *RegisterNodeManagerRequestProto) Reset() {
	*x = RegisterNodeManagerRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterNodeManagerRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeManagerRequestProto) ProtoMessage() {}

func (x *RegisterNodeManagerRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeManagerRequestProto.ProtoReflect.Descriptor instead.
func (*RegisterNodeManagerRequestProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterNodeManagerRequestProto) GetNodeId() *api.NodeIdProto {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *RegisterNodeManagerRequestProto) GetHttpPort() int32 {
	if x != nil && x.HttpPort != nil {
		return *x.HttpPort
	}
	return 0
}

func (x *RegisterNodeManagerRequestProto) GetResource() *api.ResourceProto {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *RegisterNodeManagerRequestProto) GetNmVersion() string {
	if x != nil && x.NmVersion != nil {
		return *x.NmVersion
	}
	return ""
}

func (x *RegisterNodeManagerRequestProto) GetContainerStatuses() []*NMContainerStatusProto {
	if x != nil {
		return x.ContainerStatuses
	}
	return nil
}

func (x *RegisterNodeManagerRequestProto) GetRunningApplications() []*api.ApplicationIdProto {
	if x != nil {
		return x.RunningApplications
	}
	return nil
}

func (x *RegisterNodeManagerRequestProto) GetNodeLabels() *NodeLabelsProto {
	if x != nil {
		return x.NodeLabels
	}
	return nil
}

func (x *RegisterNodeManagerRequestProto) GetPhysicalResource() *api.ResourceProto {
	if x != nil {
		return x.PhysicalResource
	}
	return nil
}

func (x *RegisterNodeManagerRequestProto) GetLogAggregationReportsForApps() []*LogAggregationReportProto {
	if x != nil {
		return x.LogAggregationReportsForApps
	}
	return nil
}

type RegisterNodeManagerResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerTokenMasterKey   *MasterKeyProto    `protobuf:"bytes,1,opt,name=container_token_master_key,json=containerTokenMasterKey" json:"container_token_master_key,omitempty"`
	NmTokenMasterKey          *MasterKeyProto    `protobuf:"bytes,2,opt,name=nm_token_master_key,json=nmTokenMasterKey" json:"nm_token_master_key,omitempty"`
	NodeAction                *NodeActionProto   `protobuf:"varint,3,opt,name=nodeAction,enum=github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeActionProto" json:"nodeAction,omitempty"`
	RmIdentifier              *int64             `protobuf:"varint,4,opt,name=rm_identifier,json=rmIdentifier" json:"rm_identifier,omitempty"`
	DiagnosticsMessage        *string            `protobuf:"bytes,5,opt,name=diagnostics_message,json=diagnosticsMessage" json:"diagnostics_message,omitempty"`
	RmVersion                 *string            `protobuf:"bytes,6,opt,name=rm_version,json=rmVersion" json:"rm_version,omitempty"`
	AreNodeLabelsAcceptedByRM *bool              `protobuf:"varint,7,opt,name=areNodeLabelsAcceptedByRM,def=0" json:"areNodeLabelsAcceptedByRM,omitempty"`
	Resource                  *api.ResourceProto `protobuf:"bytes,8,opt,name=resource" json:"resource,omitempty"`
}

// Default values for RegisterNodeManagerResponseProto fields.
const (
	Default_RegisterNodeManagerResponseProto_AreNodeLabelsAcceptedByRM = bool(false)
)

func (x *RegisterNodeManagerResponseProto) Reset() {
	*x = RegisterNodeManagerResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterNodeManagerResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeManagerResponseProto) ProtoMessage() {}

func (x *RegisterNodeManagerResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeManagerResponseProto.ProtoReflect.Descriptor instead.
func (*RegisterNodeManagerResponseProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{6}
}

func (x *RegisterNodeManagerResponseProto) GetContainerTokenMasterKey() *MasterKeyProto {
	if x != nil {
		return x.ContainerTokenMasterKey
	}
	return nil
}

func (x *RegisterNodeManagerResponseProto) GetNmTokenMasterKey() *MasterKeyProto {
	if x != nil {
		return x.NmTokenMasterKey
	}
	return nil
}

func (x *RegisterNodeManagerResponseProto) GetNodeAction() NodeActionProto {
	if x != nil && x.NodeAction != nil {
		return *x.NodeAction
	}
	return NodeActionProto_NORMAL
}

func (x *RegisterNodeManagerResponseProto) GetRmIdentifier() int64 {
	if x != nil && x.RmIdentifier != nil {
		return *x.RmIdentifier
	}
	return 0
}

func (x *RegisterNodeManagerResponseProto) GetDiagnosticsMessage() string {
	if x != nil && x.DiagnosticsMessage != nil {
		return *x.DiagnosticsMessage
	}
	return ""
}

func (x *RegisterNodeManagerResponseProto) GetRmVersion() string {
	if x != nil && x.RmVersion != nil {
		return *x.RmVersion
	}
	return ""
}

func (x *RegisterNodeManagerResponseProto) GetAreNodeLabelsAcceptedByRM() bool {
	if x != nil && x.AreNodeLabelsAcceptedByRM != nil {
		return *x.AreNodeLabelsAcceptedByRM
	}
	return Default_RegisterNodeManagerResponseProto_AreNodeLabelsAcceptedByRM
}

func (x *RegisterNodeManagerResponseProto) GetResource() *api.ResourceProto {
	if x != nil {
		return x.Resource
	}
	return nil
}

type UnRegisterNodeManagerRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId *api.NodeIdProto `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
}

func (x *UnRegisterNodeManagerRequestProto) Reset() {
	*x = UnRegisterNodeManagerRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnRegisterNodeManagerRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnRegisterNodeManagerRequestProto) ProtoMessage() {}

func (x *UnRegisterNodeManagerRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnRegisterNodeManagerRequestProto.ProtoReflect.Descriptor instead.
func (*UnRegisterNodeManagerRequestProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{7}
}

func (x *UnRegisterNodeManagerRequestProto) GetNodeId() *api.NodeIdProto {
	if x != nil {
		return x.NodeId
	}
	return nil
}

type UnRegisterNodeManagerResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnRegisterNodeManagerResponseProto) Reset() {
	*x = UnRegisterNodeManagerResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnRegisterNodeManagerResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnRegisterNodeManagerResponseProto) ProtoMessage() {}

func (x *UnRegisterNodeManagerResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnRegisterNodeManagerResponseProto.ProtoReflect.Descriptor instead.
func (*UnRegisterNodeManagerResponseProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{8}
}

type NodeHeartbeatRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeStatus                       *NodeStatusProto             `protobuf:"bytes,1,opt,name=node_status,json=nodeStatus" json:"node_status,omitempty"`
	LastKnownContainerTokenMasterKey *MasterKeyProto              `protobuf:"bytes,2,opt,name=last_known_container_token_master_key,json=lastKnownContainerTokenMasterKey" json:"last_known_container_token_master_key,omitempty"`
	LastKnownNmTokenMasterKey        *MasterKeyProto              `protobuf:"bytes,3,opt,name=last_known_nm_token_master_key,json=lastKnownNmTokenMasterKey" json:"last_known_nm_token_master_key,omitempty"`
	NodeLabels                       *NodeLabelsProto             `protobuf:"bytes,4,opt,name=nodeLabels" json:"nodeLabels,omitempty"`
	LogAggregationReportsForApps     []*LogAggregationReportProto `protobuf:"bytes,5,rep,name=log_aggregation_reports_for_apps,json=logAggregationReportsForApps" json:"log_aggregation_reports_for_apps,omitempty"`
	RegisteringCollectors            []*AppCollectorDataProto     `protobuf:"bytes,6,rep,name=registering_collectors,json=registeringCollectors" json:"registering_collectors,omitempty"`
}

func (x *NodeHeartbeatRequestProto) Reset() {
	*x = NodeHeartbeatRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeHeartbeatRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeHeartbeatRequestProto) ProtoMessage() {}

func (x *NodeHeartbeatRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeHeartbeatRequestProto.ProtoReflect.Descriptor instead.
func (*NodeHeartbeatRequestProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{9}
}

func (x *NodeHeartbeatRequestProto) GetNodeStatus() *NodeStatusProto {
	if x != nil {
		return x.NodeStatus
	}
	return nil
}

func (x *NodeHeartbeatRequestProto) GetLastKnownContainerTokenMasterKey() *MasterKeyProto {
	if x != nil {
		return x.LastKnownContainerTokenMasterKey
	}
	return nil
}

func (x *NodeHeartbeatRequestProto) GetLastKnownNmTokenMasterKey() *MasterKeyProto {
	if x != nil {
		return x.LastKnownNmTokenMasterKey
	}
	return nil
}

func (x *NodeHeartbeatRequestProto) GetNodeLabels() *NodeLabelsProto {
	if x != nil {
		return x.NodeLabels
	}
	return nil
}

func (x *NodeHeartbeatRequestProto) GetLogAggregationReportsForApps() []*LogAggregationReportProto {
	if x != nil {
		return x.LogAggregationReportsForApps
	}
	return nil
}

func (x *NodeHeartbeatRequestProto) GetRegisteringCollectors() []*AppCollectorDataProto {
	if x != nil {
		return x.RegisteringCollectors
	}
	return nil
}

type LogAggregationReportProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId        *api.ApplicationIdProto        `protobuf:"bytes,1,opt,name=application_id,json=applicationId" json:"application_id,omitempty"`
	LogAggregationStatus *api.LogAggregationStatusProto `protobuf:"varint,2,opt,name=log_aggregation_status,json=logAggregationStatus,enum=github.com.kom0055.go_hadoop.v1alpha1.yarn.api.LogAggregationStatusProto" json:"log_aggregation_status,omitempty"`
	Diagnostics          *string                        `protobuf:"bytes,3,opt,name=diagnostics,def=N/A" json:"diagnostics,omitempty"`
}

// Default values for LogAggregationReportProto fields.
const (
	Default_LogAggregationReportProto_Diagnostics = string("N/A")
)

func (x *LogAggregationReportProto) Reset() {
	*x = LogAggregationReportProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogAggregationReportProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogAggregationReportProto) ProtoMessage() {}

func (x *LogAggregationReportProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogAggregationReportProto.ProtoReflect.Descriptor instead.
func (*LogAggregationReportProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{10}
}

func (x *LogAggregationReportProto) GetApplicationId() *api.ApplicationIdProto {
	if x != nil {
		return x.ApplicationId
	}
	return nil
}

func (x *LogAggregationReportProto) GetLogAggregationStatus() api.LogAggregationStatusProto {
	if x != nil && x.LogAggregationStatus != nil {
		return *x.LogAggregationStatus
	}
	return api.LogAggregationStatusProto(1)
}

func (x *LogAggregationReportProto) GetDiagnostics() string {
	if x != nil && x.Diagnostics != nil {
		return *x.Diagnostics
	}
	return Default_LogAggregationReportProto_Diagnostics
}

type NodeHeartbeatResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseId                  *int32                           `protobuf:"varint,1,opt,name=response_id,json=responseId" json:"response_id,omitempty"`
	ContainerTokenMasterKey     *MasterKeyProto                  `protobuf:"bytes,2,opt,name=container_token_master_key,json=containerTokenMasterKey" json:"container_token_master_key,omitempty"`
	NmTokenMasterKey            *MasterKeyProto                  `protobuf:"bytes,3,opt,name=nm_token_master_key,json=nmTokenMasterKey" json:"nm_token_master_key,omitempty"`
	NodeAction                  *NodeActionProto                 `protobuf:"varint,4,opt,name=nodeAction,enum=github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeActionProto" json:"nodeAction,omitempty"`
	ContainersToCleanup         []*api.ContainerIdProto          `protobuf:"bytes,5,rep,name=containers_to_cleanup,json=containersToCleanup" json:"containers_to_cleanup,omitempty"`
	ApplicationsToCleanup       []*api.ApplicationIdProto        `protobuf:"bytes,6,rep,name=applications_to_cleanup,json=applicationsToCleanup" json:"applications_to_cleanup,omitempty"`
	NextHeartBeatInterval       *int64                           `protobuf:"varint,7,opt,name=nextHeartBeatInterval" json:"nextHeartBeatInterval,omitempty"`
	DiagnosticsMessage          *string                          `protobuf:"bytes,8,opt,name=diagnostics_message,json=diagnosticsMessage" json:"diagnostics_message,omitempty"`
	ContainersToBeRemovedFromNm []*api.ContainerIdProto          `protobuf:"bytes,9,rep,name=containers_to_be_removed_from_nm,json=containersToBeRemovedFromNm" json:"containers_to_be_removed_from_nm,omitempty"`
	SystemCredentialsForApps    []*SystemCredentialsForAppsProto `protobuf:"bytes,10,rep,name=system_credentials_for_apps,json=systemCredentialsForApps" json:"system_credentials_for_apps,omitempty"`
	AreNodeLabelsAcceptedByRM   *bool                            `protobuf:"varint,11,opt,name=areNodeLabelsAcceptedByRM,def=0" json:"areNodeLabelsAcceptedByRM,omitempty"`
	// to be deprecated in favour of containers_to_update
	ContainersToDecrease  []*api.ContainerProto              `protobuf:"bytes,12,rep,name=containers_to_decrease,json=containersToDecrease" json:"containers_to_decrease,omitempty"`
	ContainersToSignal    []*api.SignalContainerRequestProto `protobuf:"bytes,13,rep,name=containers_to_signal,json=containersToSignal" json:"containers_to_signal,omitempty"`
	Resource              *api.ResourceProto                 `protobuf:"bytes,14,opt,name=resource" json:"resource,omitempty"`
	ContainerQueuingLimit *ContainerQueuingLimitProto        `protobuf:"bytes,15,opt,name=container_queuing_limit,json=containerQueuingLimit" json:"container_queuing_limit,omitempty"`
	AppCollectors         []*AppCollectorDataProto           `protobuf:"bytes,16,rep,name=app_collectors,json=appCollectors" json:"app_collectors,omitempty"`
	// to be used in place of containers_to_decrease
	ContainersToUpdate []*api.ContainerProto `protobuf:"bytes,17,rep,name=containers_to_update,json=containersToUpdate" json:"containers_to_update,omitempty"`
}

// Default values for NodeHeartbeatResponseProto fields.
const (
	Default_NodeHeartbeatResponseProto_AreNodeLabelsAcceptedByRM = bool(false)
)

func (x *NodeHeartbeatResponseProto) Reset() {
	*x = NodeHeartbeatResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeHeartbeatResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeHeartbeatResponseProto) ProtoMessage() {}

func (x *NodeHeartbeatResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeHeartbeatResponseProto.ProtoReflect.Descriptor instead.
func (*NodeHeartbeatResponseProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{11}
}

func (x *NodeHeartbeatResponseProto) GetResponseId() int32 {
	if x != nil && x.ResponseId != nil {
		return *x.ResponseId
	}
	return 0
}

func (x *NodeHeartbeatResponseProto) GetContainerTokenMasterKey() *MasterKeyProto {
	if x != nil {
		return x.ContainerTokenMasterKey
	}
	return nil
}

func (x *NodeHeartbeatResponseProto) GetNmTokenMasterKey() *MasterKeyProto {
	if x != nil {
		return x.NmTokenMasterKey
	}
	return nil
}

func (x *NodeHeartbeatResponseProto) GetNodeAction() NodeActionProto {
	if x != nil && x.NodeAction != nil {
		return *x.NodeAction
	}
	return NodeActionProto_NORMAL
}

func (x *NodeHeartbeatResponseProto) GetContainersToCleanup() []*api.ContainerIdProto {
	if x != nil {
		return x.ContainersToCleanup
	}
	return nil
}

func (x *NodeHeartbeatResponseProto) GetApplicationsToCleanup() []*api.ApplicationIdProto {
	if x != nil {
		return x.ApplicationsToCleanup
	}
	return nil
}

func (x *NodeHeartbeatResponseProto) GetNextHeartBeatInterval() int64 {
	if x != nil && x.NextHeartBeatInterval != nil {
		return *x.NextHeartBeatInterval
	}
	return 0
}

func (x *NodeHeartbeatResponseProto) GetDiagnosticsMessage() string {
	if x != nil && x.DiagnosticsMessage != nil {
		return *x.DiagnosticsMessage
	}
	return ""
}

func (x *NodeHeartbeatResponseProto) GetContainersToBeRemovedFromNm() []*api.ContainerIdProto {
	if x != nil {
		return x.ContainersToBeRemovedFromNm
	}
	return nil
}

func (x *NodeHeartbeatResponseProto) GetSystemCredentialsForApps() []*SystemCredentialsForAppsProto {
	if x != nil {
		return x.SystemCredentialsForApps
	}
	return nil
}

func (x *NodeHeartbeatResponseProto) GetAreNodeLabelsAcceptedByRM() bool {
	if x != nil && x.AreNodeLabelsAcceptedByRM != nil {
		return *x.AreNodeLabelsAcceptedByRM
	}
	return Default_NodeHeartbeatResponseProto_AreNodeLabelsAcceptedByRM
}

func (x *NodeHeartbeatResponseProto) GetContainersToDecrease() []*api.ContainerProto {
	if x != nil {
		return x.ContainersToDecrease
	}
	return nil
}

func (x *NodeHeartbeatResponseProto) GetContainersToSignal() []*api.SignalContainerRequestProto {
	if x != nil {
		return x.ContainersToSignal
	}
	return nil
}

func (x *NodeHeartbeatResponseProto) GetResource() *api.ResourceProto {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *NodeHeartbeatResponseProto) GetContainerQueuingLimit() *ContainerQueuingLimitProto {
	if x != nil {
		return x.ContainerQueuingLimit
	}
	return nil
}

func (x *NodeHeartbeatResponseProto) GetAppCollectors() []*AppCollectorDataProto {
	if x != nil {
		return x.AppCollectors
	}
	return nil
}

func (x *NodeHeartbeatResponseProto) GetContainersToUpdate() []*api.ContainerProto {
	if x != nil {
		return x.ContainersToUpdate
	}
	return nil
}

type ContainerQueuingLimitProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxQueueLength       *int32 `protobuf:"varint,1,opt,name=max_queue_length,json=maxQueueLength" json:"max_queue_length,omitempty"`
	MaxQueueWaitTimeInMs *int32 `protobuf:"varint,2,opt,name=max_queue_wait_time_in_ms,json=maxQueueWaitTimeInMs" json:"max_queue_wait_time_in_ms,omitempty"`
}

func (x *ContainerQueuingLimitProto) Reset() {
	*x = ContainerQueuingLimitProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerQueuingLimitProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerQueuingLimitProto) ProtoMessage() {}

func (x *ContainerQueuingLimitProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerQueuingLimitProto.ProtoReflect.Descriptor instead.
func (*ContainerQueuingLimitProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{12}
}

func (x *ContainerQueuingLimitProto) GetMaxQueueLength() int32 {
	if x != nil && x.MaxQueueLength != nil {
		return *x.MaxQueueLength
	}
	return 0
}

func (x *ContainerQueuingLimitProto) GetMaxQueueWaitTimeInMs() int32 {
	if x != nil && x.MaxQueueWaitTimeInMs != nil {
		return *x.MaxQueueWaitTimeInMs
	}
	return 0
}

type SystemCredentialsForAppsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId             *api.ApplicationIdProto `protobuf:"bytes,1,opt,name=appId" json:"appId,omitempty"`
	CredentialsForApp []byte                  `protobuf:"bytes,2,opt,name=credentialsForApp" json:"credentialsForApp,omitempty"`
}

func (x *SystemCredentialsForAppsProto) Reset() {
	*x = SystemCredentialsForAppsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCredentialsForAppsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCredentialsForAppsProto) ProtoMessage() {}

func (x *SystemCredentialsForAppsProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCredentialsForAppsProto.ProtoReflect.Descriptor instead.
func (*SystemCredentialsForAppsProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{13}
}

func (x *SystemCredentialsForAppsProto) GetAppId() *api.ApplicationIdProto {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *SystemCredentialsForAppsProto) GetCredentialsForApp() []byte {
	if x != nil {
		return x.CredentialsForApp
	}
	return nil
}

// //////////////////////////////////////////////////////////////////////
// //// From collector_nodemanager_protocol ////////////////////////////
// //////////////////////////////////////////////////////////////////////
type AppCollectorDataProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId             *api.ApplicationIdProto `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	AppCollectorAddr  *string                 `protobuf:"bytes,2,opt,name=app_collector_addr,json=appCollectorAddr" json:"app_collector_addr,omitempty"`
	RmIdentifier      *int64                  `protobuf:"varint,3,opt,name=rm_identifier,json=rmIdentifier,def=-1" json:"rm_identifier,omitempty"`
	Version           *int64                  `protobuf:"varint,4,opt,name=version,def=-1" json:"version,omitempty"`
	AppCollectorToken *common.TokenProto      `protobuf:"bytes,5,opt,name=app_collector_token,json=appCollectorToken" json:"app_collector_token,omitempty"`
}

// Default values for AppCollectorDataProto fields.
const (
	Default_AppCollectorDataProto_RmIdentifier = int64(-1)
	Default_AppCollectorDataProto_Version      = int64(-1)
)

func (x *AppCollectorDataProto) Reset() {
	*x = AppCollectorDataProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppCollectorDataProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppCollectorDataProto) ProtoMessage() {}

func (x *AppCollectorDataProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppCollectorDataProto.ProtoReflect.Descriptor instead.
func (*AppCollectorDataProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{14}
}

func (x *AppCollectorDataProto) GetAppId() *api.ApplicationIdProto {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *AppCollectorDataProto) GetAppCollectorAddr() string {
	if x != nil && x.AppCollectorAddr != nil {
		return *x.AppCollectorAddr
	}
	return ""
}

func (x *AppCollectorDataProto) GetRmIdentifier() int64 {
	if x != nil && x.RmIdentifier != nil {
		return *x.RmIdentifier
	}
	return Default_AppCollectorDataProto_RmIdentifier
}

func (x *AppCollectorDataProto) GetVersion() int64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return Default_AppCollectorDataProto_Version
}

func (x *AppCollectorDataProto) GetAppCollectorToken() *common.TokenProto {
	if x != nil {
		return x.AppCollectorToken
	}
	return nil
}

// ////////////////////////////////////////////////////
// ///// collector_nodemanager_protocol //////////////
// ////////////////////////////////////////////////////
type ReportNewCollectorInfoRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppCollectors []*AppCollectorDataProto `protobuf:"bytes,1,rep,name=app_collectors,json=appCollectors" json:"app_collectors,omitempty"`
}

func (x *ReportNewCollectorInfoRequestProto) Reset() {
	*x = ReportNewCollectorInfoRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportNewCollectorInfoRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportNewCollectorInfoRequestProto) ProtoMessage() {}

func (x *ReportNewCollectorInfoRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportNewCollectorInfoRequestProto.ProtoReflect.Descriptor instead.
func (*ReportNewCollectorInfoRequestProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{15}
}

func (x *ReportNewCollectorInfoRequestProto) GetAppCollectors() []*AppCollectorDataProto {
	if x != nil {
		return x.AppCollectors
	}
	return nil
}

type ReportNewCollectorInfoResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportNewCollectorInfoResponseProto) Reset() {
	*x = ReportNewCollectorInfoResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportNewCollectorInfoResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportNewCollectorInfoResponseProto) ProtoMessage() {}

func (x *ReportNewCollectorInfoResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportNewCollectorInfoResponseProto.ProtoReflect.Descriptor instead.
func (*ReportNewCollectorInfoResponseProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{16}
}

type GetTimelineCollectorContextRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId *api.ApplicationIdProto `protobuf:"bytes,1,opt,name=appId" json:"appId,omitempty"`
}

func (x *GetTimelineCollectorContextRequestProto) Reset() {
	*x = GetTimelineCollectorContextRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimelineCollectorContextRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineCollectorContextRequestProto) ProtoMessage() {}

func (x *GetTimelineCollectorContextRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineCollectorContextRequestProto.ProtoReflect.Descriptor instead.
func (*GetTimelineCollectorContextRequestProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{17}
}

func (x *GetTimelineCollectorContextRequestProto) GetAppId() *api.ApplicationIdProto {
	if x != nil {
		return x.AppId
	}
	return nil
}

type GetTimelineCollectorContextResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      *string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	FlowName    *string `protobuf:"bytes,2,opt,name=flow_name,json=flowName" json:"flow_name,omitempty"`
	FlowVersion *string `protobuf:"bytes,3,opt,name=flow_version,json=flowVersion" json:"flow_version,omitempty"`
	FlowRunId   *int64  `protobuf:"varint,4,opt,name=flow_run_id,json=flowRunId" json:"flow_run_id,omitempty"`
}

func (x *GetTimelineCollectorContextResponseProto) Reset() {
	*x = GetTimelineCollectorContextResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimelineCollectorContextResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineCollectorContextResponseProto) ProtoMessage() {}

func (x *GetTimelineCollectorContextResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineCollectorContextResponseProto.ProtoReflect.Descriptor instead.
func (*GetTimelineCollectorContextResponseProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{18}
}

func (x *GetTimelineCollectorContextResponseProto) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *GetTimelineCollectorContextResponseProto) GetFlowName() string {
	if x != nil && x.FlowName != nil {
		return *x.FlowName
	}
	return ""
}

func (x *GetTimelineCollectorContextResponseProto) GetFlowVersion() string {
	if x != nil && x.FlowVersion != nil {
		return *x.FlowVersion
	}
	return ""
}

func (x *GetTimelineCollectorContextResponseProto) GetFlowRunId() int64 {
	if x != nil && x.FlowRunId != nil {
		return *x.FlowRunId
	}
	return 0
}

type NMContainerStatusProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId         *api.ContainerIdProto    `protobuf:"bytes,1,opt,name=container_id,json=containerId" json:"container_id,omitempty"`
	ContainerState      *api.ContainerStateProto `protobuf:"varint,2,opt,name=container_state,json=containerState,enum=github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerStateProto" json:"container_state,omitempty"`
	Resource            *api.ResourceProto       `protobuf:"bytes,3,opt,name=resource" json:"resource,omitempty"`
	Priority            *api.PriorityProto       `protobuf:"bytes,4,opt,name=priority" json:"priority,omitempty"`
	Diagnostics         *string                  `protobuf:"bytes,5,opt,name=diagnostics,def=N/A" json:"diagnostics,omitempty"`
	ContainerExitStatus *int32                   `protobuf:"varint,6,opt,name=container_exit_status,json=containerExitStatus" json:"container_exit_status,omitempty"`
	CreationTime        *int64                   `protobuf:"varint,7,opt,name=creation_time,json=creationTime" json:"creation_time,omitempty"`
	NodeLabelExpression *string                  `protobuf:"bytes,8,opt,name=nodeLabelExpression" json:"nodeLabelExpression,omitempty"`
	Version             *int32                   `protobuf:"varint,9,opt,name=version" json:"version,omitempty"`
	ExecutionType       *api.ExecutionTypeProto  `protobuf:"varint,10,opt,name=executionType,enum=github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ExecutionTypeProto,def=1" json:"executionType,omitempty"`
	AllocationRequestId *int64                   `protobuf:"varint,11,opt,name=allocation_request_id,json=allocationRequestId,def=-1" json:"allocation_request_id,omitempty"`
	AllocationTags      []string                 `protobuf:"bytes,12,rep,name=allocation_tags,json=allocationTags" json:"allocation_tags,omitempty"`
}

// Default values for NMContainerStatusProto fields.
const (
	Default_NMContainerStatusProto_Diagnostics         = string("N/A")
	Default_NMContainerStatusProto_ExecutionType       = api.ExecutionTypeProto(1) // api.ExecutionTypeProto_GUARANTEED
	Default_NMContainerStatusProto_AllocationRequestId = int64(-1)
)

func (x *NMContainerStatusProto) Reset() {
	*x = NMContainerStatusProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NMContainerStatusProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NMContainerStatusProto) ProtoMessage() {}

func (x *NMContainerStatusProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NMContainerStatusProto.ProtoReflect.Descriptor instead.
func (*NMContainerStatusProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{19}
}

func (x *NMContainerStatusProto) GetContainerId() *api.ContainerIdProto {
	if x != nil {
		return x.ContainerId
	}
	return nil
}

func (x *NMContainerStatusProto) GetContainerState() api.ContainerStateProto {
	if x != nil && x.ContainerState != nil {
		return *x.ContainerState
	}
	return api.ContainerStateProto(1)
}

func (x *NMContainerStatusProto) GetResource() *api.ResourceProto {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *NMContainerStatusProto) GetPriority() *api.PriorityProto {
	if x != nil {
		return x.Priority
	}
	return nil
}

func (x *NMContainerStatusProto) GetDiagnostics() string {
	if x != nil && x.Diagnostics != nil {
		return *x.Diagnostics
	}
	return Default_NMContainerStatusProto_Diagnostics
}

func (x *NMContainerStatusProto) GetContainerExitStatus() int32 {
	if x != nil && x.ContainerExitStatus != nil {
		return *x.ContainerExitStatus
	}
	return 0
}

func (x *NMContainerStatusProto) GetCreationTime() int64 {
	if x != nil && x.CreationTime != nil {
		return *x.CreationTime
	}
	return 0
}

func (x *NMContainerStatusProto) GetNodeLabelExpression() string {
	if x != nil && x.NodeLabelExpression != nil {
		return *x.NodeLabelExpression
	}
	return ""
}

func (x *NMContainerStatusProto) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *NMContainerStatusProto) GetExecutionType() api.ExecutionTypeProto {
	if x != nil && x.ExecutionType != nil {
		return *x.ExecutionType
	}
	return Default_NMContainerStatusProto_ExecutionType
}

func (x *NMContainerStatusProto) GetAllocationRequestId() int64 {
	if x != nil && x.AllocationRequestId != nil {
		return *x.AllocationRequestId
	}
	return Default_NMContainerStatusProto_AllocationRequestId
}

func (x *NMContainerStatusProto) GetAllocationTags() []string {
	if x != nil {
		return x.AllocationTags
	}
	return nil
}

type SCMUploaderNotifyRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceKey *string `protobuf:"bytes,1,opt,name=resource_key,json=resourceKey" json:"resource_key,omitempty"`
	Filename    *string `protobuf:"bytes,2,opt,name=filename" json:"filename,omitempty"`
}

func (x *SCMUploaderNotifyRequestProto) Reset() {
	*x = SCMUploaderNotifyRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMUploaderNotifyRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMUploaderNotifyRequestProto) ProtoMessage() {}

func (x *SCMUploaderNotifyRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMUploaderNotifyRequestProto.ProtoReflect.Descriptor instead.
func (*SCMUploaderNotifyRequestProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{20}
}

func (x *SCMUploaderNotifyRequestProto) GetResourceKey() string {
	if x != nil && x.ResourceKey != nil {
		return *x.ResourceKey
	}
	return ""
}

func (x *SCMUploaderNotifyRequestProto) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

type SCMUploaderNotifyResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accepted *bool `protobuf:"varint,1,opt,name=accepted" json:"accepted,omitempty"`
}

func (x *SCMUploaderNotifyResponseProto) Reset() {
	*x = SCMUploaderNotifyResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMUploaderNotifyResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMUploaderNotifyResponseProto) ProtoMessage() {}

func (x *SCMUploaderNotifyResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMUploaderNotifyResponseProto.ProtoReflect.Descriptor instead.
func (*SCMUploaderNotifyResponseProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{21}
}

func (x *SCMUploaderNotifyResponseProto) GetAccepted() bool {
	if x != nil && x.Accepted != nil {
		return *x.Accepted
	}
	return false
}

type SCMUploaderCanUploadRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceKey *string `protobuf:"bytes,1,opt,name=resource_key,json=resourceKey" json:"resource_key,omitempty"`
}

func (x *SCMUploaderCanUploadRequestProto) Reset() {
	*x = SCMUploaderCanUploadRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMUploaderCanUploadRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMUploaderCanUploadRequestProto) ProtoMessage() {}

func (x *SCMUploaderCanUploadRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMUploaderCanUploadRequestProto.ProtoReflect.Descriptor instead.
func (*SCMUploaderCanUploadRequestProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{22}
}

func (x *SCMUploaderCanUploadRequestProto) GetResourceKey() string {
	if x != nil && x.ResourceKey != nil {
		return *x.ResourceKey
	}
	return ""
}

type SCMUploaderCanUploadResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uploadable *bool `protobuf:"varint,1,opt,name=uploadable" json:"uploadable,omitempty"`
}

func (x *SCMUploaderCanUploadResponseProto) Reset() {
	*x = SCMUploaderCanUploadResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCMUploaderCanUploadResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCMUploaderCanUploadResponseProto) ProtoMessage() {}

func (x *SCMUploaderCanUploadResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCMUploaderCanUploadResponseProto.ProtoReflect.Descriptor instead.
func (*SCMUploaderCanUploadResponseProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP(), []int{23}
}

func (x *SCMUploaderCanUploadResponseProto) GetUploadable() bool {
	if x != nil && x.Uploadable != nil {
		return *x.Uploadable
	}
	return false
}

var File_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto protoreflect.FileDescriptor

var file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDesc = []byte{
	0x0a, 0x66, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x6d,
	0x30, 0x30, 0x35, 0x35, 0x2f, 0x67, 0x6f, 0x2d, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x79, 0x61,
	0x72, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x79, 0x61, 0x72, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x79, 0x61, 0x72, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x1a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b,
	0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2f, 0x67, 0x6f, 0x2d, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2f, 0x67, 0x6f, 0x2d, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x79, 0x61, 0x72, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x79, 0x61, 0x72, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x5e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2f, 0x67, 0x6f, 0x2d, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x79, 0x61, 0x72, 0x6e, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x79, 0x61,
	0x72, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2f, 0x67, 0x6f, 0x2d, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x79, 0x61, 0x72, 0x6e, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x79, 0x61, 0x72, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa7, 0x01,
	0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x54, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68,
	0x74, 0x74, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61,
	0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x61, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x87, 0x06, 0x0a, 0x2c, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x83, 0x01, 0x0a, 0x11, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73,
	0x0a, 0x16, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30,
	0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x6d,
	0x61, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x16, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x14, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x17, 0x69, 0x6e, 0x63, 0x72,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67,
	0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x15, 0x69, 0x6e, 0x63, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x45, 0x0a, 0x1f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x7b, 0x0a, 0x14, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x66, 0x6f,
	0x72, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x12, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e,
	0x67, 0x22, 0x9d, 0x02, 0x0a, 0x2a, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x72, 0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35,
	0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x14, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x66, 0x6f,
	0x72, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x12, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e,
	0x67, 0x22, 0x8f, 0x02, 0x0a, 0x29, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x6f, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67,
	0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x71, 0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30,
	0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x13,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x22, 0x71, 0x0a, 0x0f, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x5e, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e,
	0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0xf9, 0x06, 0x0a, 0x1f, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x54, 0x0a, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35,
	0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x74, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x59, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d,
	0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6d, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6d,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x7f, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e,
	0x4d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x74, 0x0a, 0x13, 0x72, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x13, 0x72, 0x75, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x69,
	0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x6e,
	0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x69, 0x0a, 0x10, 0x70, 0x68, 0x79,
	0x73, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x10, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x9b, 0x01, 0x0a, 0x20, 0x6c, 0x6f, 0x67, 0x5f, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d,
	0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x1c, 0x6c, 0x6f, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x70,
	0x70, 0x73, 0x22, 0xa3, 0x05, 0x0a, 0x20, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x6f, 0x64, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x85, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12,
	0x77, 0x0a, 0x13, 0x6e, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x6e, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x69, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x6d, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6d, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x19, 0x61, 0x72, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x52, 0x4d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c,
	0x73, 0x65, 0x52, 0x19, 0x61, 0x72, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x42, 0x79, 0x52, 0x4d, 0x12, 0x59, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d,
	0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x79, 0x0a, 0x21, 0x55, 0x6e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x54, 0x0a,
	0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30,
	0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x22, 0x55, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x06, 0x0a, 0x19, 0x4e, 0x6f,
	0x64, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x6a, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x99, 0x01, 0x0a, 0x25, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x20, 0x6c,
	0x61, 0x73, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12,
	0x8b, 0x01, 0x0a, 0x1e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x6e,
	0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f,
	0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x19, 0x6c, 0x61, 0x73, 0x74, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x4e, 0x6d, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x69, 0x0a,
	0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b,
	0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x6e, 0x6f,
	0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x9b, 0x01, 0x0a, 0x20, 0x6c, 0x6f, 0x67,
	0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c,
	0x6f, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x1c, 0x6c, 0x6f, 0x67, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x46,
	0x6f, 0x72, 0x41, 0x70, 0x70, 0x73, 0x12, 0x86, 0x01, 0x0a, 0x16, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x79, 0x61, 0x72, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x15, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x22,
	0xae, 0x02, 0x0a, 0x19, 0x4c, 0x6f, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x69, 0x0a,
	0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x7f, 0x0a, 0x16, 0x6c, 0x6f, 0x67, 0x5f,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f,
	0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x14, 0x6c, 0x6f, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x03,
	0x4e, 0x2f, 0x41, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x22, 0xb3, 0x0e, 0x0a, 0x1a, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x85, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x17, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x77, 0x0a, 0x13, 0x6e, 0x6d, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x10, 0x6e, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x12, 0x69, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x74, 0x0a, 0x15,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x6c,
	0x65, 0x61, 0x6e, 0x75, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35,
	0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x13, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x43, 0x6c, 0x65, 0x61, 0x6e,
	0x75, 0x70, 0x12, 0x7a, 0x0a, 0x17, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x15, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x6f, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x12, 0x34,
	0x0a, 0x15, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x6e,
	0x65, 0x78, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x6d, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f,
	0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x1b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x54, 0x6f,
	0x42, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x4e, 0x6d, 0x12,
	0x96, 0x01, 0x0a, 0x1b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61,
	0x72, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x18,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x73, 0x12, 0x43, 0x0a, 0x19, 0x61, 0x72, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x52, 0x4d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c,
	0x73, 0x65, 0x52, 0x19, 0x61, 0x72, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x42, 0x79, 0x52, 0x4d, 0x12, 0x74, 0x0a,
	0x16, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x64,
	0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30,
	0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x44, 0x65, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b,
	0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x12,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x12, 0x59, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x8c, 0x01,
	0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x65, 0x75,
	0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x54, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d,
	0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x51, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x76, 0x0a, 0x0e,
	0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x10,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x70, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x54, 0x6f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x7f, 0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x6d, 0x61, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x37,
	0x0a, 0x19, 0x6d, 0x61, 0x78, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x77, 0x61, 0x69, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x57, 0x61, 0x69, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x4d, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x1d, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x46, 0x6f, 0x72,
	0x41, 0x70, 0x70, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x58, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f,
	0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x70,
	0x70, 0x22, 0xd1, 0x02, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x59, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35,
	0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x27, 0x0a, 0x0d, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x3a, 0x02, 0x2d, 0x31, 0x52,
	0x0c, 0x72, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x3a, 0x02,
	0x2d, 0x31, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x68, 0x0a, 0x13, 0x61,
	0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f,
	0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x11, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9c, 0x01, 0x0a, 0x22, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x76, 0x0a, 0x0e,
	0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72,
	0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x22, 0x25, 0x0a, 0x23, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x65,
	0x77, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x83, 0x01, 0x0a, 0x27,
	0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x58, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79,
	0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x22, 0xa3, 0x01, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x6c, 0x6f, 0x77,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x77, 0x5f,
	0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x6c,
	0x6f, 0x77, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x22, 0xc4, 0x06, 0x0a, 0x16, 0x4e, 0x4d, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x63, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f,
	0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x6c, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x43, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f,
	0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x59, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x59, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0b, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x3a, 0x03, 0x4e, 0x2f, 0x41, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x65, 0x78, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x78, 0x69, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x6e,
	0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6e, 0x6f, 0x64, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x74, 0x0a, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30,
	0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x79, 0x61, 0x72, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x3a, 0x0a, 0x47, 0x55, 0x41, 0x52, 0x41, 0x4e, 0x54, 0x45, 0x45, 0x44, 0x52, 0x0d,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a,
	0x15, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x3a, 0x02, 0x2d, 0x31,
	0x52, 0x13, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x73, 0x22, 0x5e,
	0x0a, 0x1d, 0x53, 0x43, 0x4d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3c,
	0x0a, 0x1e, 0x53, 0x43, 0x4d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x22, 0x45, 0x0a, 0x20,
	0x53, 0x43, 0x4d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4b, 0x65, 0x79, 0x22, 0x43, 0x0a, 0x21, 0x53, 0x43, 0x4d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x72, 0x43, 0x61, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2f, 0x67,
	0x6f, 0x2d, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x79, 0x61, 0x72, 0x6e, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
}

var (
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescOnce sync.Once
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescData = file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDesc
)

func file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescGZIP() []byte {
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescOnce.Do(func() {
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescData)
	})
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDescData
}

var file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_goTypes = []interface{}{
	(*RemoteNodeProto)(nil),                              // 0: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RemoteNodeProto
	(*RegisterDistributedSchedulingAMResponseProto)(nil), // 1: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterDistributedSchedulingAMResponseProto
	(*DistributedSchedulingAllocateResponseProto)(nil),   // 2: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.DistributedSchedulingAllocateResponseProto
	(*DistributedSchedulingAllocateRequestProto)(nil),    // 3: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.DistributedSchedulingAllocateRequestProto
	(*NodeLabelsProto)(nil),                              // 4: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeLabelsProto
	(*RegisterNodeManagerRequestProto)(nil),              // 5: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterNodeManagerRequestProto
	(*RegisterNodeManagerResponseProto)(nil),             // 6: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterNodeManagerResponseProto
	(*UnRegisterNodeManagerRequestProto)(nil),            // 7: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.UnRegisterNodeManagerRequestProto
	(*UnRegisterNodeManagerResponseProto)(nil),           // 8: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.UnRegisterNodeManagerResponseProto
	(*NodeHeartbeatRequestProto)(nil),                    // 9: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatRequestProto
	(*LogAggregationReportProto)(nil),                    // 10: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.LogAggregationReportProto
	(*NodeHeartbeatResponseProto)(nil),                   // 11: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatResponseProto
	(*ContainerQueuingLimitProto)(nil),                   // 12: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.ContainerQueuingLimitProto
	(*SystemCredentialsForAppsProto)(nil),                // 13: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.SystemCredentialsForAppsProto
	(*AppCollectorDataProto)(nil),                        // 14: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.AppCollectorDataProto
	(*ReportNewCollectorInfoRequestProto)(nil),           // 15: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.ReportNewCollectorInfoRequestProto
	(*ReportNewCollectorInfoResponseProto)(nil),          // 16: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.ReportNewCollectorInfoResponseProto
	(*GetTimelineCollectorContextRequestProto)(nil),      // 17: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.GetTimelineCollectorContextRequestProto
	(*GetTimelineCollectorContextResponseProto)(nil),     // 18: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.GetTimelineCollectorContextResponseProto
	(*NMContainerStatusProto)(nil),                       // 19: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NMContainerStatusProto
	(*SCMUploaderNotifyRequestProto)(nil),                // 20: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.SCMUploaderNotifyRequestProto
	(*SCMUploaderNotifyResponseProto)(nil),               // 21: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.SCMUploaderNotifyResponseProto
	(*SCMUploaderCanUploadRequestProto)(nil),             // 22: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.SCMUploaderCanUploadRequestProto
	(*SCMUploaderCanUploadResponseProto)(nil),            // 23: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.SCMUploaderCanUploadResponseProto
	(*api.NodeIdProto)(nil),                              // 24: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.NodeIdProto
	(*api.RegisterApplicationMasterResponseProto)(nil),   // 25: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.RegisterApplicationMasterResponseProto
	(*api.ResourceProto)(nil),                            // 26: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ResourceProto
	(*api.AllocateResponseProto)(nil),                    // 27: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.AllocateResponseProto
	(*api.AllocateRequestProto)(nil),                     // 28: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.AllocateRequestProto
	(*api.ContainerProto)(nil),                           // 29: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerProto
	(*api.NodeLabelProto)(nil),                           // 30: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.NodeLabelProto
	(*api.ApplicationIdProto)(nil),                       // 31: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ApplicationIdProto
	(*MasterKeyProto)(nil),                               // 32: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.MasterKeyProto
	(NodeActionProto)(0),                                 // 33: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeActionProto
	(*NodeStatusProto)(nil),                              // 34: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeStatusProto
	(api.LogAggregationStatusProto)(0),                   // 35: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.LogAggregationStatusProto
	(*api.ContainerIdProto)(nil),                         // 36: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerIdProto
	(*api.SignalContainerRequestProto)(nil),              // 37: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.SignalContainerRequestProto
	(*common.TokenProto)(nil),                            // 38: github.com.kom0055.go_hadoop.v1alpha1.common.TokenProto
	(api.ContainerStateProto)(0),                         // 39: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerStateProto
	(*api.PriorityProto)(nil),                            // 40: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.PriorityProto
	(api.ExecutionTypeProto)(0),                          // 41: github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ExecutionTypeProto
}
var file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_depIdxs = []int32{
	24, // 0: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RemoteNodeProto.node_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.NodeIdProto
	25, // 1: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterDistributedSchedulingAMResponseProto.register_response:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.RegisterApplicationMasterResponseProto
	26, // 2: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterDistributedSchedulingAMResponseProto.max_container_resource:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ResourceProto
	26, // 3: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterDistributedSchedulingAMResponseProto.min_container_resource:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ResourceProto
	26, // 4: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterDistributedSchedulingAMResponseProto.incr_container_resource:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ResourceProto
	0,  // 5: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterDistributedSchedulingAMResponseProto.nodes_for_scheduling:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RemoteNodeProto
	27, // 6: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.DistributedSchedulingAllocateResponseProto.allocate_response:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.AllocateResponseProto
	0,  // 7: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.DistributedSchedulingAllocateResponseProto.nodes_for_scheduling:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RemoteNodeProto
	28, // 8: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.DistributedSchedulingAllocateRequestProto.allocate_request:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.AllocateRequestProto
	29, // 9: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.DistributedSchedulingAllocateRequestProto.allocated_containers:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerProto
	30, // 10: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeLabelsProto.nodeLabels:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.NodeLabelProto
	24, // 11: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterNodeManagerRequestProto.node_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.NodeIdProto
	26, // 12: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterNodeManagerRequestProto.resource:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ResourceProto
	19, // 13: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterNodeManagerRequestProto.container_statuses:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NMContainerStatusProto
	31, // 14: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterNodeManagerRequestProto.runningApplications:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ApplicationIdProto
	4,  // 15: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterNodeManagerRequestProto.nodeLabels:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeLabelsProto
	26, // 16: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterNodeManagerRequestProto.physicalResource:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ResourceProto
	10, // 17: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterNodeManagerRequestProto.log_aggregation_reports_for_apps:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.LogAggregationReportProto
	32, // 18: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterNodeManagerResponseProto.container_token_master_key:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.MasterKeyProto
	32, // 19: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterNodeManagerResponseProto.nm_token_master_key:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.MasterKeyProto
	33, // 20: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterNodeManagerResponseProto.nodeAction:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeActionProto
	26, // 21: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.RegisterNodeManagerResponseProto.resource:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ResourceProto
	24, // 22: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.UnRegisterNodeManagerRequestProto.node_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.NodeIdProto
	34, // 23: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatRequestProto.node_status:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeStatusProto
	32, // 24: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatRequestProto.last_known_container_token_master_key:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.MasterKeyProto
	32, // 25: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatRequestProto.last_known_nm_token_master_key:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.MasterKeyProto
	4,  // 26: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatRequestProto.nodeLabels:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeLabelsProto
	10, // 27: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatRequestProto.log_aggregation_reports_for_apps:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.LogAggregationReportProto
	14, // 28: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatRequestProto.registering_collectors:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.AppCollectorDataProto
	31, // 29: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.LogAggregationReportProto.application_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ApplicationIdProto
	35, // 30: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.LogAggregationReportProto.log_aggregation_status:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.LogAggregationStatusProto
	32, // 31: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatResponseProto.container_token_master_key:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.MasterKeyProto
	32, // 32: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatResponseProto.nm_token_master_key:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.MasterKeyProto
	33, // 33: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatResponseProto.nodeAction:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeActionProto
	36, // 34: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatResponseProto.containers_to_cleanup:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerIdProto
	31, // 35: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatResponseProto.applications_to_cleanup:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ApplicationIdProto
	36, // 36: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatResponseProto.containers_to_be_removed_from_nm:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerIdProto
	13, // 37: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatResponseProto.system_credentials_for_apps:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.SystemCredentialsForAppsProto
	29, // 38: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatResponseProto.containers_to_decrease:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerProto
	37, // 39: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatResponseProto.containers_to_signal:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.SignalContainerRequestProto
	26, // 40: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatResponseProto.resource:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ResourceProto
	12, // 41: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatResponseProto.container_queuing_limit:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.ContainerQueuingLimitProto
	14, // 42: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatResponseProto.app_collectors:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.AppCollectorDataProto
	29, // 43: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NodeHeartbeatResponseProto.containers_to_update:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerProto
	31, // 44: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.SystemCredentialsForAppsProto.appId:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ApplicationIdProto
	31, // 45: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.AppCollectorDataProto.app_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ApplicationIdProto
	38, // 46: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.AppCollectorDataProto.app_collector_token:type_name -> github.com.kom0055.go_hadoop.v1alpha1.common.TokenProto
	14, // 47: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.ReportNewCollectorInfoRequestProto.app_collectors:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.AppCollectorDataProto
	31, // 48: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.GetTimelineCollectorContextRequestProto.appId:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ApplicationIdProto
	36, // 49: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NMContainerStatusProto.container_id:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerIdProto
	39, // 50: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NMContainerStatusProto.container_state:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ContainerStateProto
	26, // 51: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NMContainerStatusProto.resource:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ResourceProto
	40, // 52: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NMContainerStatusProto.priority:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.PriorityProto
	41, // 53: github.com.kom0055.go_hadoop.v1alpha1.yarn.server.common.NMContainerStatusProto.executionType:type_name -> github.com.kom0055.go_hadoop.v1alpha1.yarn.api.ExecutionTypeProto
	54, // [54:54] is the sub-list for method output_type
	54, // [54:54] is the sub-list for method input_type
	54, // [54:54] is the sub-list for extension type_name
	54, // [54:54] is the sub-list for extension extendee
	0,  // [0:54] is the sub-list for field type_name
}

func init() {
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_init()
}
func file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_init() {
	if File_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto != nil {
		return
	}
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_protos_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteNodeProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterDistributedSchedulingAMResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributedSchedulingAllocateResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributedSchedulingAllocateRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeLabelsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterNodeManagerRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterNodeManagerResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnRegisterNodeManagerRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnRegisterNodeManagerResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeHeartbeatRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogAggregationReportProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeHeartbeatResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerQueuingLimitProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCredentialsForAppsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppCollectorDataProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportNewCollectorInfoRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportNewCollectorInfoResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimelineCollectorContextRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimelineCollectorContextResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NMContainerStatusProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMUploaderNotifyRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMUploaderNotifyResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMUploaderCanUploadRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCMUploaderCanUploadResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_goTypes,
		DependencyIndexes: file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_depIdxs,
		MessageInfos:      file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_msgTypes,
	}.Build()
	File_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto = out.File
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_rawDesc = nil
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_goTypes = nil
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_yarn_server_common_yarn_server_common_service_protos_proto_depIdxs = nil
}
