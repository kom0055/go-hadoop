//*
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//*
// These .proto interfaces are private and stable.
// Please see http://wiki.apache.org/hadoop/Compatibility
// for what changes are allowed for a *stable* .proto interface.

// This file contains protocol buffers that are used throughout HDFS -- i.e.
// by the client, server, and data transfer protocols.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: github.com/kom0055/go-hadoop/proto/v1alpha1/hdfs/datanode/DatanodeProtocol.proto

package datanode

import (
	hdfs "github.com/kom0055/go-hadoop/proto/v1alpha1/hdfs"
	client "github.com/kom0055/go-hadoop/proto/v1alpha1/hdfs/client"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DatanodeCommandProto_Type int32

const (
	DatanodeCommandProto_BalancerBandwidthCommand     DatanodeCommandProto_Type = 0
	DatanodeCommandProto_BlockCommand                 DatanodeCommandProto_Type = 1
	DatanodeCommandProto_BlockRecoveryCommand         DatanodeCommandProto_Type = 2
	DatanodeCommandProto_FinalizeCommand              DatanodeCommandProto_Type = 3
	DatanodeCommandProto_KeyUpdateCommand             DatanodeCommandProto_Type = 4
	DatanodeCommandProto_RegisterCommand              DatanodeCommandProto_Type = 5
	DatanodeCommandProto_UnusedUpgradeCommand         DatanodeCommandProto_Type = 6
	DatanodeCommandProto_NullDatanodeCommand          DatanodeCommandProto_Type = 7
	DatanodeCommandProto_BlockIdCommand               DatanodeCommandProto_Type = 8
	DatanodeCommandProto_BlockECReconstructionCommand DatanodeCommandProto_Type = 9
)

// Enum value maps for DatanodeCommandProto_Type.
var (
	DatanodeCommandProto_Type_name = map[int32]string{
		0: "BalancerBandwidthCommand",
		1: "BlockCommand",
		2: "BlockRecoveryCommand",
		3: "FinalizeCommand",
		4: "KeyUpdateCommand",
		5: "RegisterCommand",
		6: "UnusedUpgradeCommand",
		7: "NullDatanodeCommand",
		8: "BlockIdCommand",
		9: "BlockECReconstructionCommand",
	}
	DatanodeCommandProto_Type_value = map[string]int32{
		"BalancerBandwidthCommand":     0,
		"BlockCommand":                 1,
		"BlockRecoveryCommand":         2,
		"FinalizeCommand":              3,
		"KeyUpdateCommand":             4,
		"RegisterCommand":              5,
		"UnusedUpgradeCommand":         6,
		"NullDatanodeCommand":          7,
		"BlockIdCommand":               8,
		"BlockECReconstructionCommand": 9,
	}
)

func (x DatanodeCommandProto_Type) Enum() *DatanodeCommandProto_Type {
	p := new(DatanodeCommandProto_Type)
	*p = x
	return p
}

func (x DatanodeCommandProto_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DatanodeCommandProto_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_enumTypes[0].Descriptor()
}

func (DatanodeCommandProto_Type) Type() protoreflect.EnumType {
	return &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_enumTypes[0]
}

func (x DatanodeCommandProto_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DatanodeCommandProto_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DatanodeCommandProto_Type(num)
	return nil
}

// Deprecated: Use DatanodeCommandProto_Type.Descriptor instead.
func (DatanodeCommandProto_Type) EnumDescriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{1, 0}
}

type BlockCommandProto_Action int32

const (
	BlockCommandProto_TRANSFER   BlockCommandProto_Action = 1 // Transfer blocks to another datanode
	BlockCommandProto_INVALIDATE BlockCommandProto_Action = 2 // Invalidate blocks
	BlockCommandProto_SHUTDOWN   BlockCommandProto_Action = 3 // Shutdown the datanode
)

// Enum value maps for BlockCommandProto_Action.
var (
	BlockCommandProto_Action_name = map[int32]string{
		1: "TRANSFER",
		2: "INVALIDATE",
		3: "SHUTDOWN",
	}
	BlockCommandProto_Action_value = map[string]int32{
		"TRANSFER":   1,
		"INVALIDATE": 2,
		"SHUTDOWN":   3,
	}
)

func (x BlockCommandProto_Action) Enum() *BlockCommandProto_Action {
	p := new(BlockCommandProto_Action)
	*p = x
	return p
}

func (x BlockCommandProto_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockCommandProto_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_enumTypes[1].Descriptor()
}

func (BlockCommandProto_Action) Type() protoreflect.EnumType {
	return &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_enumTypes[1]
}

func (x BlockCommandProto_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BlockCommandProto_Action) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BlockCommandProto_Action(num)
	return nil
}

// Deprecated: Use BlockCommandProto_Action.Descriptor instead.
func (BlockCommandProto_Action) EnumDescriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{3, 0}
}

type BlockIdCommandProto_Action int32

const (
	BlockIdCommandProto_CACHE   BlockIdCommandProto_Action = 1
	BlockIdCommandProto_UNCACHE BlockIdCommandProto_Action = 2
)

// Enum value maps for BlockIdCommandProto_Action.
var (
	BlockIdCommandProto_Action_name = map[int32]string{
		1: "CACHE",
		2: "UNCACHE",
	}
	BlockIdCommandProto_Action_value = map[string]int32{
		"CACHE":   1,
		"UNCACHE": 2,
	}
)

func (x BlockIdCommandProto_Action) Enum() *BlockIdCommandProto_Action {
	p := new(BlockIdCommandProto_Action)
	*p = x
	return p
}

func (x BlockIdCommandProto_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockIdCommandProto_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_enumTypes[2].Descriptor()
}

func (BlockIdCommandProto_Action) Type() protoreflect.EnumType {
	return &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_enumTypes[2]
}

func (x BlockIdCommandProto_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BlockIdCommandProto_Action) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BlockIdCommandProto_Action(num)
	return nil
}

// Deprecated: Use BlockIdCommandProto_Action.Descriptor instead.
func (BlockIdCommandProto_Action) EnumDescriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{4, 0}
}

type ReceivedDeletedBlockInfoProto_BlockStatus int32

const (
	ReceivedDeletedBlockInfoProto_RECEIVING ReceivedDeletedBlockInfoProto_BlockStatus = 1 // block being created
	ReceivedDeletedBlockInfoProto_RECEIVED  ReceivedDeletedBlockInfoProto_BlockStatus = 2 // block creation complete
	ReceivedDeletedBlockInfoProto_DELETED   ReceivedDeletedBlockInfoProto_BlockStatus = 3
)

// Enum value maps for ReceivedDeletedBlockInfoProto_BlockStatus.
var (
	ReceivedDeletedBlockInfoProto_BlockStatus_name = map[int32]string{
		1: "RECEIVING",
		2: "RECEIVED",
		3: "DELETED",
	}
	ReceivedDeletedBlockInfoProto_BlockStatus_value = map[string]int32{
		"RECEIVING": 1,
		"RECEIVED":  2,
		"DELETED":   3,
	}
)

func (x ReceivedDeletedBlockInfoProto_BlockStatus) Enum() *ReceivedDeletedBlockInfoProto_BlockStatus {
	p := new(ReceivedDeletedBlockInfoProto_BlockStatus)
	*p = x
	return p
}

func (x ReceivedDeletedBlockInfoProto_BlockStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReceivedDeletedBlockInfoProto_BlockStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_enumTypes[3].Descriptor()
}

func (ReceivedDeletedBlockInfoProto_BlockStatus) Type() protoreflect.EnumType {
	return &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_enumTypes[3]
}

func (x ReceivedDeletedBlockInfoProto_BlockStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ReceivedDeletedBlockInfoProto_BlockStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ReceivedDeletedBlockInfoProto_BlockStatus(num)
	return nil
}

// Deprecated: Use ReceivedDeletedBlockInfoProto_BlockStatus.Descriptor instead.
func (ReceivedDeletedBlockInfoProto_BlockStatus) EnumDescriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{21, 0}
}

type ErrorReportRequestProto_ErrorCode int32

const (
	ErrorReportRequestProto_NOTIFY           ErrorReportRequestProto_ErrorCode = 0 // Error report to be logged at the namenode
	ErrorReportRequestProto_DISK_ERROR       ErrorReportRequestProto_ErrorCode = 1 // DN has disk errors but still has valid volumes
	ErrorReportRequestProto_INVALID_BLOCK    ErrorReportRequestProto_ErrorCode = 2 // Command from namenode has invalid block ID
	ErrorReportRequestProto_FATAL_DISK_ERROR ErrorReportRequestProto_ErrorCode = 3 // No valid volumes left on datanode
)

// Enum value maps for ErrorReportRequestProto_ErrorCode.
var (
	ErrorReportRequestProto_ErrorCode_name = map[int32]string{
		0: "NOTIFY",
		1: "DISK_ERROR",
		2: "INVALID_BLOCK",
		3: "FATAL_DISK_ERROR",
	}
	ErrorReportRequestProto_ErrorCode_value = map[string]int32{
		"NOTIFY":           0,
		"DISK_ERROR":       1,
		"INVALID_BLOCK":    2,
		"FATAL_DISK_ERROR": 3,
	}
)

func (x ErrorReportRequestProto_ErrorCode) Enum() *ErrorReportRequestProto_ErrorCode {
	p := new(ErrorReportRequestProto_ErrorCode)
	*p = x
	return p
}

func (x ErrorReportRequestProto_ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorReportRequestProto_ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_enumTypes[4].Descriptor()
}

func (ErrorReportRequestProto_ErrorCode) Type() protoreflect.EnumType {
	return &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_enumTypes[4]
}

func (x ErrorReportRequestProto_ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ErrorReportRequestProto_ErrorCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ErrorReportRequestProto_ErrorCode(num)
	return nil
}

// Deprecated: Use ErrorReportRequestProto_ErrorCode.Descriptor instead.
func (ErrorReportRequestProto_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{25, 0}
}

// *
// Information to identify a datanode to a namenode
type DatanodeRegistrationProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatanodeID      *client.DatanodeIDProto      `protobuf:"bytes,1,req,name=datanodeID" json:"datanodeID,omitempty"`           // Datanode information
	StorageInfo     *hdfs.StorageInfoProto       `protobuf:"bytes,2,req,name=storageInfo" json:"storageInfo,omitempty"`         // Node information
	Keys            *hdfs.ExportedBlockKeysProto `protobuf:"bytes,3,req,name=keys" json:"keys,omitempty"`                       // Block keys
	SoftwareVersion *string                      `protobuf:"bytes,4,req,name=softwareVersion" json:"softwareVersion,omitempty"` // Software version of the DN, e.g. "2.0.0"
}

func (x *DatanodeRegistrationProto) Reset() {
	*x = DatanodeRegistrationProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatanodeRegistrationProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatanodeRegistrationProto) ProtoMessage() {}

func (x *DatanodeRegistrationProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatanodeRegistrationProto.ProtoReflect.Descriptor instead.
func (*DatanodeRegistrationProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{0}
}

func (x *DatanodeRegistrationProto) GetDatanodeID() *client.DatanodeIDProto {
	if x != nil {
		return x.DatanodeID
	}
	return nil
}

func (x *DatanodeRegistrationProto) GetStorageInfo() *hdfs.StorageInfoProto {
	if x != nil {
		return x.StorageInfo
	}
	return nil
}

func (x *DatanodeRegistrationProto) GetKeys() *hdfs.ExportedBlockKeysProto {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *DatanodeRegistrationProto) GetSoftwareVersion() string {
	if x != nil && x.SoftwareVersion != nil {
		return *x.SoftwareVersion
	}
	return ""
}

// *
// Commands sent from namenode to the datanodes
type DatanodeCommandProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CmdType *DatanodeCommandProto_Type `protobuf:"varint,1,req,name=cmdType,enum=github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeCommandProto_Type" json:"cmdType,omitempty"` // Type of the command
	// One of the following command is available when the corresponding
	// cmdType is set
	BalancerCmd            *BalancerBandwidthCommandProto     `protobuf:"bytes,2,opt,name=balancerCmd" json:"balancerCmd,omitempty"`
	BlkCmd                 *BlockCommandProto                 `protobuf:"bytes,3,opt,name=blkCmd" json:"blkCmd,omitempty"`
	RecoveryCmd            *BlockRecoveryCommandProto         `protobuf:"bytes,4,opt,name=recoveryCmd" json:"recoveryCmd,omitempty"`
	FinalizeCmd            *FinalizeCommandProto              `protobuf:"bytes,5,opt,name=finalizeCmd" json:"finalizeCmd,omitempty"`
	KeyUpdateCmd           *KeyUpdateCommandProto             `protobuf:"bytes,6,opt,name=keyUpdateCmd" json:"keyUpdateCmd,omitempty"`
	RegisterCmd            *RegisterCommandProto              `protobuf:"bytes,7,opt,name=registerCmd" json:"registerCmd,omitempty"`
	BlkIdCmd               *BlockIdCommandProto               `protobuf:"bytes,8,opt,name=blkIdCmd" json:"blkIdCmd,omitempty"`
	BlkECReconstructionCmd *BlockECReconstructionCommandProto `protobuf:"bytes,9,opt,name=blkECReconstructionCmd" json:"blkECReconstructionCmd,omitempty"`
}

func (x *DatanodeCommandProto) Reset() {
	*x = DatanodeCommandProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatanodeCommandProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatanodeCommandProto) ProtoMessage() {}

func (x *DatanodeCommandProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatanodeCommandProto.ProtoReflect.Descriptor instead.
func (*DatanodeCommandProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{1}
}

func (x *DatanodeCommandProto) GetCmdType() DatanodeCommandProto_Type {
	if x != nil && x.CmdType != nil {
		return *x.CmdType
	}
	return DatanodeCommandProto_BalancerBandwidthCommand
}

func (x *DatanodeCommandProto) GetBalancerCmd() *BalancerBandwidthCommandProto {
	if x != nil {
		return x.BalancerCmd
	}
	return nil
}

func (x *DatanodeCommandProto) GetBlkCmd() *BlockCommandProto {
	if x != nil {
		return x.BlkCmd
	}
	return nil
}

func (x *DatanodeCommandProto) GetRecoveryCmd() *BlockRecoveryCommandProto {
	if x != nil {
		return x.RecoveryCmd
	}
	return nil
}

func (x *DatanodeCommandProto) GetFinalizeCmd() *FinalizeCommandProto {
	if x != nil {
		return x.FinalizeCmd
	}
	return nil
}

func (x *DatanodeCommandProto) GetKeyUpdateCmd() *KeyUpdateCommandProto {
	if x != nil {
		return x.KeyUpdateCmd
	}
	return nil
}

func (x *DatanodeCommandProto) GetRegisterCmd() *RegisterCommandProto {
	if x != nil {
		return x.RegisterCmd
	}
	return nil
}

func (x *DatanodeCommandProto) GetBlkIdCmd() *BlockIdCommandProto {
	if x != nil {
		return x.BlkIdCmd
	}
	return nil
}

func (x *DatanodeCommandProto) GetBlkECReconstructionCmd() *BlockECReconstructionCommandProto {
	if x != nil {
		return x.BlkECReconstructionCmd
	}
	return nil
}

// *
// Command sent from namenode to datanode to set the
// maximum bandwidth to be used for balancing.
type BalancerBandwidthCommandProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Maximum bandwidth to be used by datanode for balancing
	Bandwidth *uint64 `protobuf:"varint,1,req,name=bandwidth" json:"bandwidth,omitempty"`
}

func (x *BalancerBandwidthCommandProto) Reset() {
	*x = BalancerBandwidthCommandProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalancerBandwidthCommandProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalancerBandwidthCommandProto) ProtoMessage() {}

func (x *BalancerBandwidthCommandProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalancerBandwidthCommandProto.ProtoReflect.Descriptor instead.
func (*BalancerBandwidthCommandProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{2}
}

func (x *BalancerBandwidthCommandProto) GetBandwidth() uint64 {
	if x != nil && x.Bandwidth != nil {
		return *x.Bandwidth
	}
	return 0
}

// *
// Command to instruct datanodes to perform certain action
// on the given set of blocks.
type BlockCommandProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action             *BlockCommandProto_Action    `protobuf:"varint,1,req,name=action,enum=github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockCommandProto_Action" json:"action,omitempty"`
	BlockPoolId        *string                      `protobuf:"bytes,2,req,name=blockPoolId" json:"blockPoolId,omitempty"`
	Blocks             []*client.BlockProto         `protobuf:"bytes,3,rep,name=blocks" json:"blocks,omitempty"`
	Targets            []*client.DatanodeInfosProto `protobuf:"bytes,4,rep,name=targets" json:"targets,omitempty"`
	TargetStorageUuids []*client.StorageUuidsProto  `protobuf:"bytes,5,rep,name=targetStorageUuids" json:"targetStorageUuids,omitempty"`
	TargetStorageTypes []*client.StorageTypesProto  `protobuf:"bytes,6,rep,name=targetStorageTypes" json:"targetStorageTypes,omitempty"`
}

func (x *BlockCommandProto) Reset() {
	*x = BlockCommandProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockCommandProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockCommandProto) ProtoMessage() {}

func (x *BlockCommandProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockCommandProto.ProtoReflect.Descriptor instead.
func (*BlockCommandProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{3}
}

func (x *BlockCommandProto) GetAction() BlockCommandProto_Action {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return BlockCommandProto_TRANSFER
}

func (x *BlockCommandProto) GetBlockPoolId() string {
	if x != nil && x.BlockPoolId != nil {
		return *x.BlockPoolId
	}
	return ""
}

func (x *BlockCommandProto) GetBlocks() []*client.BlockProto {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *BlockCommandProto) GetTargets() []*client.DatanodeInfosProto {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *BlockCommandProto) GetTargetStorageUuids() []*client.StorageUuidsProto {
	if x != nil {
		return x.TargetStorageUuids
	}
	return nil
}

func (x *BlockCommandProto) GetTargetStorageTypes() []*client.StorageTypesProto {
	if x != nil {
		return x.TargetStorageTypes
	}
	return nil
}

// *
// Command to instruct datanodes to perform certain action
// on the given set of block IDs.
type BlockIdCommandProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action      *BlockIdCommandProto_Action `protobuf:"varint,1,req,name=action,enum=github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockIdCommandProto_Action" json:"action,omitempty"`
	BlockPoolId *string                     `protobuf:"bytes,2,req,name=blockPoolId" json:"blockPoolId,omitempty"`
	BlockIds    []uint64                    `protobuf:"varint,3,rep,packed,name=blockIds" json:"blockIds,omitempty"`
}

func (x *BlockIdCommandProto) Reset() {
	*x = BlockIdCommandProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockIdCommandProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockIdCommandProto) ProtoMessage() {}

func (x *BlockIdCommandProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockIdCommandProto.ProtoReflect.Descriptor instead.
func (*BlockIdCommandProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{4}
}

func (x *BlockIdCommandProto) GetAction() BlockIdCommandProto_Action {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return BlockIdCommandProto_CACHE
}

func (x *BlockIdCommandProto) GetBlockPoolId() string {
	if x != nil && x.BlockPoolId != nil {
		return *x.BlockPoolId
	}
	return ""
}

func (x *BlockIdCommandProto) GetBlockIds() []uint64 {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

// *
// List of blocks to be recovered by the datanode
type BlockRecoveryCommandProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*hdfs.RecoveringBlockProto `protobuf:"bytes,1,rep,name=blocks" json:"blocks,omitempty"`
}

func (x *BlockRecoveryCommandProto) Reset() {
	*x = BlockRecoveryCommandProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockRecoveryCommandProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockRecoveryCommandProto) ProtoMessage() {}

func (x *BlockRecoveryCommandProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockRecoveryCommandProto.ProtoReflect.Descriptor instead.
func (*BlockRecoveryCommandProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{5}
}

func (x *BlockRecoveryCommandProto) GetBlocks() []*hdfs.RecoveringBlockProto {
	if x != nil {
		return x.Blocks
	}
	return nil
}

// *
// Finalize the upgrade at the datanode
type FinalizeCommandProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockPoolId *string `protobuf:"bytes,1,req,name=blockPoolId" json:"blockPoolId,omitempty"` // Block pool to be finalized
}

func (x *FinalizeCommandProto) Reset() {
	*x = FinalizeCommandProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalizeCommandProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeCommandProto) ProtoMessage() {}

func (x *FinalizeCommandProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeCommandProto.ProtoReflect.Descriptor instead.
func (*FinalizeCommandProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{6}
}

func (x *FinalizeCommandProto) GetBlockPoolId() string {
	if x != nil && x.BlockPoolId != nil {
		return *x.BlockPoolId
	}
	return ""
}

// *
// Update the block keys at the datanode
type KeyUpdateCommandProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys *hdfs.ExportedBlockKeysProto `protobuf:"bytes,1,req,name=keys" json:"keys,omitempty"`
}

func (x *KeyUpdateCommandProto) Reset() {
	*x = KeyUpdateCommandProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyUpdateCommandProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyUpdateCommandProto) ProtoMessage() {}

func (x *KeyUpdateCommandProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyUpdateCommandProto.ProtoReflect.Descriptor instead.
func (*KeyUpdateCommandProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{7}
}

func (x *KeyUpdateCommandProto) GetKeys() *hdfs.ExportedBlockKeysProto {
	if x != nil {
		return x.Keys
	}
	return nil
}

// *
// Instruct datanode to register with the namenode
type RegisterCommandProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterCommandProto) Reset() {
	*x = RegisterCommandProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterCommandProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterCommandProto) ProtoMessage() {}

func (x *RegisterCommandProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterCommandProto.ProtoReflect.Descriptor instead.
func (*RegisterCommandProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{8}
}

// *
// Block Erasure coding reconstruction command
type BlockECReconstructionCommandProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockECReconstructioninfo []*client.BlockECReconstructionInfoProto `protobuf:"bytes,1,rep,name=blockECReconstructioninfo" json:"blockECReconstructioninfo,omitempty"`
}

func (x *BlockECReconstructionCommandProto) Reset() {
	*x = BlockECReconstructionCommandProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockECReconstructionCommandProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockECReconstructionCommandProto) ProtoMessage() {}

func (x *BlockECReconstructionCommandProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockECReconstructionCommandProto.ProtoReflect.Descriptor instead.
func (*BlockECReconstructionCommandProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{9}
}

func (x *BlockECReconstructionCommandProto) GetBlockECReconstructioninfo() []*client.BlockECReconstructionInfoProto {
	if x != nil {
		return x.BlockECReconstructioninfo
	}
	return nil
}

// *
// registration - Information of the datanode registering with the namenode
type RegisterDatanodeRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registration *DatanodeRegistrationProto `protobuf:"bytes,1,req,name=registration" json:"registration,omitempty"` // Datanode info
}

func (x *RegisterDatanodeRequestProto) Reset() {
	*x = RegisterDatanodeRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterDatanodeRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDatanodeRequestProto) ProtoMessage() {}

func (x *RegisterDatanodeRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDatanodeRequestProto.ProtoReflect.Descriptor instead.
func (*RegisterDatanodeRequestProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterDatanodeRequestProto) GetRegistration() *DatanodeRegistrationProto {
	if x != nil {
		return x.Registration
	}
	return nil
}

// *
// registration - Update registration of the datanode that successfully
//
//	registered. StorageInfo will be updated to include new
//	storage ID if the datanode did not have one in the request.
type RegisterDatanodeResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registration *DatanodeRegistrationProto `protobuf:"bytes,1,req,name=registration" json:"registration,omitempty"` // Datanode info
}

func (x *RegisterDatanodeResponseProto) Reset() {
	*x = RegisterDatanodeResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterDatanodeResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDatanodeResponseProto) ProtoMessage() {}

func (x *RegisterDatanodeResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDatanodeResponseProto.ProtoReflect.Descriptor instead.
func (*RegisterDatanodeResponseProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{11}
}

func (x *RegisterDatanodeResponseProto) GetRegistration() *DatanodeRegistrationProto {
	if x != nil {
		return x.Registration
	}
	return nil
}

// *
// failedStorageLocations - storage locations that have failed
// lastVolumeFailureDate - date/time of last volume failure
// estimatedCapacityLost - estimate of total capacity lost due to volume failures
type VolumeFailureSummaryProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailedStorageLocations     []string `protobuf:"bytes,1,rep,name=failedStorageLocations" json:"failedStorageLocations,omitempty"`
	LastVolumeFailureDate      *uint64  `protobuf:"varint,2,req,name=lastVolumeFailureDate" json:"lastVolumeFailureDate,omitempty"`
	EstimatedCapacityLostTotal *uint64  `protobuf:"varint,3,req,name=estimatedCapacityLostTotal" json:"estimatedCapacityLostTotal,omitempty"`
}

func (x *VolumeFailureSummaryProto) Reset() {
	*x = VolumeFailureSummaryProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeFailureSummaryProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeFailureSummaryProto) ProtoMessage() {}

func (x *VolumeFailureSummaryProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeFailureSummaryProto.ProtoReflect.Descriptor instead.
func (*VolumeFailureSummaryProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{12}
}

func (x *VolumeFailureSummaryProto) GetFailedStorageLocations() []string {
	if x != nil {
		return x.FailedStorageLocations
	}
	return nil
}

func (x *VolumeFailureSummaryProto) GetLastVolumeFailureDate() uint64 {
	if x != nil && x.LastVolumeFailureDate != nil {
		return *x.LastVolumeFailureDate
	}
	return 0
}

func (x *VolumeFailureSummaryProto) GetEstimatedCapacityLostTotal() uint64 {
	if x != nil && x.EstimatedCapacityLostTotal != nil {
		return *x.EstimatedCapacityLostTotal
	}
	return 0
}

// *
// registration - datanode registration information
// capacity - total storage capacity available at the datanode
// dfsUsed - storage used by HDFS
// remaining - remaining storage available for HDFS
// blockPoolUsed - storage used by the block pool
// xmitsInProgress - number of transfers from this datanode to others
// xceiverCount - number of active transceiver threads
// failedVolumes - number of failed volumes.  This is redundant with the
//
//	information included in volumeFailureSummary, but the field is retained
//	for backwards compatibility.
//
// cacheCapacity - total cache capacity available at the datanode
// cacheUsed - amount of cache used
// volumeFailureSummary - info about volume failures
// slowPeers - info about peer DataNodes that are suspected to be slow.
// slowDisks - info about DataNode disks that are suspected to be slow.
type HeartbeatRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registration                *DatanodeRegistrationProto   `protobuf:"bytes,1,req,name=registration" json:"registration,omitempty"` // Datanode info
	Reports                     []*client.StorageReportProto `protobuf:"bytes,2,rep,name=reports" json:"reports,omitempty"`
	XmitsInProgress             *uint32                      `protobuf:"varint,3,opt,name=xmitsInProgress,def=0" json:"xmitsInProgress,omitempty"`
	XceiverCount                *uint32                      `protobuf:"varint,4,opt,name=xceiverCount,def=0" json:"xceiverCount,omitempty"`
	FailedVolumes               *uint32                      `protobuf:"varint,5,opt,name=failedVolumes,def=0" json:"failedVolumes,omitempty"`
	CacheCapacity               *uint64                      `protobuf:"varint,6,opt,name=cacheCapacity,def=0" json:"cacheCapacity,omitempty"`
	CacheUsed                   *uint64                      `protobuf:"varint,7,opt,name=cacheUsed,def=0" json:"cacheUsed,omitempty"`
	VolumeFailureSummary        *VolumeFailureSummaryProto   `protobuf:"bytes,8,opt,name=volumeFailureSummary" json:"volumeFailureSummary,omitempty"`
	RequestFullBlockReportLease *bool                        `protobuf:"varint,9,opt,name=requestFullBlockReportLease,def=0" json:"requestFullBlockReportLease,omitempty"`
	SlowPeers                   []*SlowPeerReportProto       `protobuf:"bytes,10,rep,name=slowPeers" json:"slowPeers,omitempty"`
	SlowDisks                   []*SlowDiskReportProto       `protobuf:"bytes,11,rep,name=slowDisks" json:"slowDisks,omitempty"`
}

// Default values for HeartbeatRequestProto fields.
const (
	Default_HeartbeatRequestProto_XmitsInProgress             = uint32(0)
	Default_HeartbeatRequestProto_XceiverCount                = uint32(0)
	Default_HeartbeatRequestProto_FailedVolumes               = uint32(0)
	Default_HeartbeatRequestProto_CacheCapacity               = uint64(0)
	Default_HeartbeatRequestProto_CacheUsed                   = uint64(0)
	Default_HeartbeatRequestProto_RequestFullBlockReportLease = bool(false)
)

func (x *HeartbeatRequestProto) Reset() {
	*x = HeartbeatRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequestProto) ProtoMessage() {}

func (x *HeartbeatRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequestProto.ProtoReflect.Descriptor instead.
func (*HeartbeatRequestProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{13}
}

func (x *HeartbeatRequestProto) GetRegistration() *DatanodeRegistrationProto {
	if x != nil {
		return x.Registration
	}
	return nil
}

func (x *HeartbeatRequestProto) GetReports() []*client.StorageReportProto {
	if x != nil {
		return x.Reports
	}
	return nil
}

func (x *HeartbeatRequestProto) GetXmitsInProgress() uint32 {
	if x != nil && x.XmitsInProgress != nil {
		return *x.XmitsInProgress
	}
	return Default_HeartbeatRequestProto_XmitsInProgress
}

func (x *HeartbeatRequestProto) GetXceiverCount() uint32 {
	if x != nil && x.XceiverCount != nil {
		return *x.XceiverCount
	}
	return Default_HeartbeatRequestProto_XceiverCount
}

func (x *HeartbeatRequestProto) GetFailedVolumes() uint32 {
	if x != nil && x.FailedVolumes != nil {
		return *x.FailedVolumes
	}
	return Default_HeartbeatRequestProto_FailedVolumes
}

func (x *HeartbeatRequestProto) GetCacheCapacity() uint64 {
	if x != nil && x.CacheCapacity != nil {
		return *x.CacheCapacity
	}
	return Default_HeartbeatRequestProto_CacheCapacity
}

func (x *HeartbeatRequestProto) GetCacheUsed() uint64 {
	if x != nil && x.CacheUsed != nil {
		return *x.CacheUsed
	}
	return Default_HeartbeatRequestProto_CacheUsed
}

func (x *HeartbeatRequestProto) GetVolumeFailureSummary() *VolumeFailureSummaryProto {
	if x != nil {
		return x.VolumeFailureSummary
	}
	return nil
}

func (x *HeartbeatRequestProto) GetRequestFullBlockReportLease() bool {
	if x != nil && x.RequestFullBlockReportLease != nil {
		return *x.RequestFullBlockReportLease
	}
	return Default_HeartbeatRequestProto_RequestFullBlockReportLease
}

func (x *HeartbeatRequestProto) GetSlowPeers() []*SlowPeerReportProto {
	if x != nil {
		return x.SlowPeers
	}
	return nil
}

func (x *HeartbeatRequestProto) GetSlowDisks() []*SlowDiskReportProto {
	if x != nil {
		return x.SlowDisks
	}
	return nil
}

// *
// cmds - Commands from namenode to datanode.
// haStatus - Status (from an HA perspective) of the NN sending this response
type HeartbeatResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmds                   []*DatanodeCommandProto           `protobuf:"bytes,1,rep,name=cmds" json:"cmds,omitempty"` // Returned commands can be null
	HaStatus               *hdfs.NNHAStatusHeartbeatProto    `protobuf:"bytes,2,req,name=haStatus" json:"haStatus,omitempty"`
	RollingUpgradeStatus   *client.RollingUpgradeStatusProto `protobuf:"bytes,3,opt,name=rollingUpgradeStatus" json:"rollingUpgradeStatus,omitempty"`
	RollingUpgradeStatusV2 *client.RollingUpgradeStatusProto `protobuf:"bytes,4,opt,name=rollingUpgradeStatusV2" json:"rollingUpgradeStatusV2,omitempty"`
	FullBlockReportLeaseId *uint64                           `protobuf:"varint,5,opt,name=fullBlockReportLeaseId,def=0" json:"fullBlockReportLeaseId,omitempty"`
}

// Default values for HeartbeatResponseProto fields.
const (
	Default_HeartbeatResponseProto_FullBlockReportLeaseId = uint64(0)
)

func (x *HeartbeatResponseProto) Reset() {
	*x = HeartbeatResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponseProto) ProtoMessage() {}

func (x *HeartbeatResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponseProto.ProtoReflect.Descriptor instead.
func (*HeartbeatResponseProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{14}
}

func (x *HeartbeatResponseProto) GetCmds() []*DatanodeCommandProto {
	if x != nil {
		return x.Cmds
	}
	return nil
}

func (x *HeartbeatResponseProto) GetHaStatus() *hdfs.NNHAStatusHeartbeatProto {
	if x != nil {
		return x.HaStatus
	}
	return nil
}

func (x *HeartbeatResponseProto) GetRollingUpgradeStatus() *client.RollingUpgradeStatusProto {
	if x != nil {
		return x.RollingUpgradeStatus
	}
	return nil
}

func (x *HeartbeatResponseProto) GetRollingUpgradeStatusV2() *client.RollingUpgradeStatusProto {
	if x != nil {
		return x.RollingUpgradeStatusV2
	}
	return nil
}

func (x *HeartbeatResponseProto) GetFullBlockReportLeaseId() uint64 {
	if x != nil && x.FullBlockReportLeaseId != nil {
		return *x.FullBlockReportLeaseId
	}
	return Default_HeartbeatResponseProto_FullBlockReportLeaseId
}

// *
// registration - datanode registration information
// blockPoolID  - block pool ID of the reported blocks
// blocks       - each block is represented as multiple longs in the array.
//
//	first long represents block ID
//	second long represents length
//	third long represents gen stamp
//	fourth long (if under construction) represents replica state
//
// context      - An optional field containing information about the context
//
//	of this block report.
type BlockReportRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registration *DatanodeRegistrationProto `protobuf:"bytes,1,req,name=registration" json:"registration,omitempty"`
	BlockPoolId  *string                    `protobuf:"bytes,2,req,name=blockPoolId" json:"blockPoolId,omitempty"`
	Reports      []*StorageBlockReportProto `protobuf:"bytes,3,rep,name=reports" json:"reports,omitempty"`
	Context      *BlockReportContextProto   `protobuf:"bytes,4,opt,name=context" json:"context,omitempty"`
}

func (x *BlockReportRequestProto) Reset() {
	*x = BlockReportRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockReportRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockReportRequestProto) ProtoMessage() {}

func (x *BlockReportRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockReportRequestProto.ProtoReflect.Descriptor instead.
func (*BlockReportRequestProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{15}
}

func (x *BlockReportRequestProto) GetRegistration() *DatanodeRegistrationProto {
	if x != nil {
		return x.Registration
	}
	return nil
}

func (x *BlockReportRequestProto) GetBlockPoolId() string {
	if x != nil && x.BlockPoolId != nil {
		return *x.BlockPoolId
	}
	return ""
}

func (x *BlockReportRequestProto) GetReports() []*StorageBlockReportProto {
	if x != nil {
		return x.Reports
	}
	return nil
}

func (x *BlockReportRequestProto) GetContext() *BlockReportContextProto {
	if x != nil {
		return x.Context
	}
	return nil
}

type BlockReportContextProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The total number of RPCs this block report is broken into.
	TotalRpcs *int32 `protobuf:"varint,1,req,name=totalRpcs" json:"totalRpcs,omitempty"`
	// The index of the current RPC (zero-based)
	CurRpc *int32 `protobuf:"varint,2,req,name=curRpc" json:"curRpc,omitempty"`
	// The unique 64-bit ID of this block report
	Id *int64 `protobuf:"varint,3,req,name=id" json:"id,omitempty"`
	// The block report lease ID, or 0 if we are sending without a lease to
	// bypass rate-limiting.
	LeaseId *uint64 `protobuf:"varint,4,opt,name=leaseId,def=0" json:"leaseId,omitempty"`
	// True if the reported blocks are sorted by increasing block IDs
	Sorted *bool `protobuf:"varint,5,opt,name=sorted,def=0" json:"sorted,omitempty"`
}

// Default values for BlockReportContextProto fields.
const (
	Default_BlockReportContextProto_LeaseId = uint64(0)
	Default_BlockReportContextProto_Sorted  = bool(false)
)

func (x *BlockReportContextProto) Reset() {
	*x = BlockReportContextProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockReportContextProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockReportContextProto) ProtoMessage() {}

func (x *BlockReportContextProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockReportContextProto.ProtoReflect.Descriptor instead.
func (*BlockReportContextProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{16}
}

func (x *BlockReportContextProto) GetTotalRpcs() int32 {
	if x != nil && x.TotalRpcs != nil {
		return *x.TotalRpcs
	}
	return 0
}

func (x *BlockReportContextProto) GetCurRpc() int32 {
	if x != nil && x.CurRpc != nil {
		return *x.CurRpc
	}
	return 0
}

func (x *BlockReportContextProto) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *BlockReportContextProto) GetLeaseId() uint64 {
	if x != nil && x.LeaseId != nil {
		return *x.LeaseId
	}
	return Default_BlockReportContextProto_LeaseId
}

func (x *BlockReportContextProto) GetSorted() bool {
	if x != nil && x.Sorted != nil {
		return *x.Sorted
	}
	return Default_BlockReportContextProto_Sorted
}

// *
// Report of blocks in a storage
type StorageBlockReportProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Storage        *client.DatanodeStorageProto `protobuf:"bytes,1,req,name=storage" json:"storage,omitempty"` // Storage
	Blocks         []uint64                     `protobuf:"varint,2,rep,packed,name=blocks" json:"blocks,omitempty"`
	NumberOfBlocks *uint64                      `protobuf:"varint,3,opt,name=numberOfBlocks" json:"numberOfBlocks,omitempty"`
	BlocksBuffers  [][]byte                     `protobuf:"bytes,4,rep,name=blocksBuffers" json:"blocksBuffers,omitempty"`
}

func (x *StorageBlockReportProto) Reset() {
	*x = StorageBlockReportProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageBlockReportProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageBlockReportProto) ProtoMessage() {}

func (x *StorageBlockReportProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageBlockReportProto.ProtoReflect.Descriptor instead.
func (*StorageBlockReportProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{17}
}

func (x *StorageBlockReportProto) GetStorage() *client.DatanodeStorageProto {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *StorageBlockReportProto) GetBlocks() []uint64 {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *StorageBlockReportProto) GetNumberOfBlocks() uint64 {
	if x != nil && x.NumberOfBlocks != nil {
		return *x.NumberOfBlocks
	}
	return 0
}

func (x *StorageBlockReportProto) GetBlocksBuffers() [][]byte {
	if x != nil {
		return x.BlocksBuffers
	}
	return nil
}

// *
// cmd - Command from namenode to the datanode
type BlockReportResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd *DatanodeCommandProto `protobuf:"bytes,1,opt,name=cmd" json:"cmd,omitempty"`
}

func (x *BlockReportResponseProto) Reset() {
	*x = BlockReportResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockReportResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockReportResponseProto) ProtoMessage() {}

func (x *BlockReportResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockReportResponseProto.ProtoReflect.Descriptor instead.
func (*BlockReportResponseProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{18}
}

func (x *BlockReportResponseProto) GetCmd() *DatanodeCommandProto {
	if x != nil {
		return x.Cmd
	}
	return nil
}

// *
// registration - datanode registration information
// blockPoolId  - block pool ID of the reported blocks
// blocks       - representation of blocks as longs for efficiency reasons
type CacheReportRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registration *DatanodeRegistrationProto `protobuf:"bytes,1,req,name=registration" json:"registration,omitempty"`
	BlockPoolId  *string                    `protobuf:"bytes,2,req,name=blockPoolId" json:"blockPoolId,omitempty"`
	Blocks       []uint64                   `protobuf:"varint,3,rep,packed,name=blocks" json:"blocks,omitempty"`
}

func (x *CacheReportRequestProto) Reset() {
	*x = CacheReportRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheReportRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheReportRequestProto) ProtoMessage() {}

func (x *CacheReportRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheReportRequestProto.ProtoReflect.Descriptor instead.
func (*CacheReportRequestProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{19}
}

func (x *CacheReportRequestProto) GetRegistration() *DatanodeRegistrationProto {
	if x != nil {
		return x.Registration
	}
	return nil
}

func (x *CacheReportRequestProto) GetBlockPoolId() string {
	if x != nil && x.BlockPoolId != nil {
		return *x.BlockPoolId
	}
	return ""
}

func (x *CacheReportRequestProto) GetBlocks() []uint64 {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type CacheReportResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd *DatanodeCommandProto `protobuf:"bytes,1,opt,name=cmd" json:"cmd,omitempty"`
}

func (x *CacheReportResponseProto) Reset() {
	*x = CacheReportResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheReportResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheReportResponseProto) ProtoMessage() {}

func (x *CacheReportResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheReportResponseProto.ProtoReflect.Descriptor instead.
func (*CacheReportResponseProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{20}
}

func (x *CacheReportResponseProto) GetCmd() *DatanodeCommandProto {
	if x != nil {
		return x.Cmd
	}
	return nil
}

// *
// Data structure to send received or deleted block information
// from datanode to namenode.
type ReceivedDeletedBlockInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block      *client.BlockProto                         `protobuf:"bytes,1,req,name=block" json:"block,omitempty"`
	Status     *ReceivedDeletedBlockInfoProto_BlockStatus `protobuf:"varint,3,req,name=status,enum=github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ReceivedDeletedBlockInfoProto_BlockStatus" json:"status,omitempty"`
	DeleteHint *string                                    `protobuf:"bytes,2,opt,name=deleteHint" json:"deleteHint,omitempty"`
}

func (x *ReceivedDeletedBlockInfoProto) Reset() {
	*x = ReceivedDeletedBlockInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceivedDeletedBlockInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivedDeletedBlockInfoProto) ProtoMessage() {}

func (x *ReceivedDeletedBlockInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivedDeletedBlockInfoProto.ProtoReflect.Descriptor instead.
func (*ReceivedDeletedBlockInfoProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{21}
}

func (x *ReceivedDeletedBlockInfoProto) GetBlock() *client.BlockProto {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *ReceivedDeletedBlockInfoProto) GetStatus() ReceivedDeletedBlockInfoProto_BlockStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ReceivedDeletedBlockInfoProto_RECEIVING
}

func (x *ReceivedDeletedBlockInfoProto) GetDeleteHint() string {
	if x != nil && x.DeleteHint != nil {
		return *x.DeleteHint
	}
	return ""
}

// *
// List of blocks received and deleted for a storage.
type StorageReceivedDeletedBlocksProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	StorageUuid *string                          `protobuf:"bytes,1,req,name=storageUuid" json:"storageUuid,omitempty"`
	Blocks      []*ReceivedDeletedBlockInfoProto `protobuf:"bytes,2,rep,name=blocks" json:"blocks,omitempty"`
	Storage     *client.DatanodeStorageProto     `protobuf:"bytes,3,opt,name=storage" json:"storage,omitempty"` // supersedes storageUuid.
}

func (x *StorageReceivedDeletedBlocksProto) Reset() {
	*x = StorageReceivedDeletedBlocksProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageReceivedDeletedBlocksProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageReceivedDeletedBlocksProto) ProtoMessage() {}

func (x *StorageReceivedDeletedBlocksProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageReceivedDeletedBlocksProto.ProtoReflect.Descriptor instead.
func (*StorageReceivedDeletedBlocksProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{22}
}

// Deprecated: Do not use.
func (x *StorageReceivedDeletedBlocksProto) GetStorageUuid() string {
	if x != nil && x.StorageUuid != nil {
		return *x.StorageUuid
	}
	return ""
}

func (x *StorageReceivedDeletedBlocksProto) GetBlocks() []*ReceivedDeletedBlockInfoProto {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *StorageReceivedDeletedBlocksProto) GetStorage() *client.DatanodeStorageProto {
	if x != nil {
		return x.Storage
	}
	return nil
}

// *
// registration - datanode registration information
// blockPoolID  - block pool ID of the reported blocks
// blocks       - Received/deleted block list
type BlockReceivedAndDeletedRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registration *DatanodeRegistrationProto           `protobuf:"bytes,1,req,name=registration" json:"registration,omitempty"`
	BlockPoolId  *string                              `protobuf:"bytes,2,req,name=blockPoolId" json:"blockPoolId,omitempty"`
	Blocks       []*StorageReceivedDeletedBlocksProto `protobuf:"bytes,3,rep,name=blocks" json:"blocks,omitempty"`
}

func (x *BlockReceivedAndDeletedRequestProto) Reset() {
	*x = BlockReceivedAndDeletedRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockReceivedAndDeletedRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockReceivedAndDeletedRequestProto) ProtoMessage() {}

func (x *BlockReceivedAndDeletedRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockReceivedAndDeletedRequestProto.ProtoReflect.Descriptor instead.
func (*BlockReceivedAndDeletedRequestProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{23}
}

func (x *BlockReceivedAndDeletedRequestProto) GetRegistration() *DatanodeRegistrationProto {
	if x != nil {
		return x.Registration
	}
	return nil
}

func (x *BlockReceivedAndDeletedRequestProto) GetBlockPoolId() string {
	if x != nil && x.BlockPoolId != nil {
		return *x.BlockPoolId
	}
	return ""
}

func (x *BlockReceivedAndDeletedRequestProto) GetBlocks() []*StorageReceivedDeletedBlocksProto {
	if x != nil {
		return x.Blocks
	}
	return nil
}

// *
// void response
type BlockReceivedAndDeletedResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BlockReceivedAndDeletedResponseProto) Reset() {
	*x = BlockReceivedAndDeletedResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockReceivedAndDeletedResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockReceivedAndDeletedResponseProto) ProtoMessage() {}

func (x *BlockReceivedAndDeletedResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockReceivedAndDeletedResponseProto.ProtoReflect.Descriptor instead.
func (*BlockReceivedAndDeletedResponseProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{24}
}

// *
// registartion - Datanode reporting the error
// errorCode - error code indicating the error
// msg - Free text description of the error
type ErrorReportRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registartion *DatanodeRegistrationProto `protobuf:"bytes,1,req,name=registartion" json:"registartion,omitempty"` // Registartion info
	ErrorCode    *uint32                    `protobuf:"varint,2,req,name=errorCode" json:"errorCode,omitempty"`      // Error code
	Msg          *string                    `protobuf:"bytes,3,req,name=msg" json:"msg,omitempty"`                   // Error message
}

func (x *ErrorReportRequestProto) Reset() {
	*x = ErrorReportRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorReportRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorReportRequestProto) ProtoMessage() {}

func (x *ErrorReportRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorReportRequestProto.ProtoReflect.Descriptor instead.
func (*ErrorReportRequestProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{25}
}

func (x *ErrorReportRequestProto) GetRegistartion() *DatanodeRegistrationProto {
	if x != nil {
		return x.Registartion
	}
	return nil
}

func (x *ErrorReportRequestProto) GetErrorCode() uint32 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *ErrorReportRequestProto) GetMsg() string {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return ""
}

// *
// void response
type ErrorReportResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ErrorReportResponseProto) Reset() {
	*x = ErrorReportResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorReportResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorReportResponseProto) ProtoMessage() {}

func (x *ErrorReportResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorReportResponseProto.ProtoReflect.Descriptor instead.
func (*ErrorReportResponseProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{26}
}

// *
// blocks - list of blocks that are reported as corrupt
type ReportBadBlocksRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*client.LocatedBlockProto `protobuf:"bytes,1,rep,name=blocks" json:"blocks,omitempty"`
}

func (x *ReportBadBlocksRequestProto) Reset() {
	*x = ReportBadBlocksRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportBadBlocksRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportBadBlocksRequestProto) ProtoMessage() {}

func (x *ReportBadBlocksRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportBadBlocksRequestProto.ProtoReflect.Descriptor instead.
func (*ReportBadBlocksRequestProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{27}
}

func (x *ReportBadBlocksRequestProto) GetBlocks() []*client.LocatedBlockProto {
	if x != nil {
		return x.Blocks
	}
	return nil
}

// *
// void response
type ReportBadBlocksResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportBadBlocksResponseProto) Reset() {
	*x = ReportBadBlocksResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportBadBlocksResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportBadBlocksResponseProto) ProtoMessage() {}

func (x *ReportBadBlocksResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportBadBlocksResponseProto.ProtoReflect.Descriptor instead.
func (*ReportBadBlocksResponseProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{28}
}

// *
// Commit block synchronization request during lease recovery
type CommitBlockSynchronizationRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block             *client.ExtendedBlockProto `protobuf:"bytes,1,req,name=block" json:"block,omitempty"`
	NewGenStamp       *uint64                    `protobuf:"varint,2,req,name=newGenStamp" json:"newGenStamp,omitempty"`
	NewLength         *uint64                    `protobuf:"varint,3,req,name=newLength" json:"newLength,omitempty"`
	CloseFile         *bool                      `protobuf:"varint,4,req,name=closeFile" json:"closeFile,omitempty"`
	DeleteBlock       *bool                      `protobuf:"varint,5,req,name=deleteBlock" json:"deleteBlock,omitempty"`
	NewTaragets       []*client.DatanodeIDProto  `protobuf:"bytes,6,rep,name=newTaragets" json:"newTaragets,omitempty"`
	NewTargetStorages []string                   `protobuf:"bytes,7,rep,name=newTargetStorages" json:"newTargetStorages,omitempty"`
}

func (x *CommitBlockSynchronizationRequestProto) Reset() {
	*x = CommitBlockSynchronizationRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitBlockSynchronizationRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitBlockSynchronizationRequestProto) ProtoMessage() {}

func (x *CommitBlockSynchronizationRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitBlockSynchronizationRequestProto.ProtoReflect.Descriptor instead.
func (*CommitBlockSynchronizationRequestProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{29}
}

func (x *CommitBlockSynchronizationRequestProto) GetBlock() *client.ExtendedBlockProto {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *CommitBlockSynchronizationRequestProto) GetNewGenStamp() uint64 {
	if x != nil && x.NewGenStamp != nil {
		return *x.NewGenStamp
	}
	return 0
}

func (x *CommitBlockSynchronizationRequestProto) GetNewLength() uint64 {
	if x != nil && x.NewLength != nil {
		return *x.NewLength
	}
	return 0
}

func (x *CommitBlockSynchronizationRequestProto) GetCloseFile() bool {
	if x != nil && x.CloseFile != nil {
		return *x.CloseFile
	}
	return false
}

func (x *CommitBlockSynchronizationRequestProto) GetDeleteBlock() bool {
	if x != nil && x.DeleteBlock != nil {
		return *x.DeleteBlock
	}
	return false
}

func (x *CommitBlockSynchronizationRequestProto) GetNewTaragets() []*client.DatanodeIDProto {
	if x != nil {
		return x.NewTaragets
	}
	return nil
}

func (x *CommitBlockSynchronizationRequestProto) GetNewTargetStorages() []string {
	if x != nil {
		return x.NewTargetStorages
	}
	return nil
}

// *
// void response
type CommitBlockSynchronizationResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommitBlockSynchronizationResponseProto) Reset() {
	*x = CommitBlockSynchronizationResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitBlockSynchronizationResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitBlockSynchronizationResponseProto) ProtoMessage() {}

func (x *CommitBlockSynchronizationResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitBlockSynchronizationResponseProto.ProtoReflect.Descriptor instead.
func (*CommitBlockSynchronizationResponseProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{30}
}

// *
// Information about a single slow peer that may be reported by
// the DataNode to the NameNode as part of the heartbeat request.
// The message includes the peer's DataNodeId and its
// aggregate packet latency as observed by the reporting DataNode.
// (DataNodeId must be transmitted as a string for protocol compability
//
//	with earlier versions of Hadoop).
//
// The exact choice of the aggregate is opaque to the NameNode but it
// _should_ be chosen consistenly by all DataNodes in the cluster.
// Examples of aggregates are 90th percentile (good) and mean (not so
// good).
type SlowPeerReportProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataNodeId       *string  `protobuf:"bytes,1,opt,name=dataNodeId" json:"dataNodeId,omitempty"`
	AggregateLatency *float64 `protobuf:"fixed64,2,opt,name=aggregateLatency" json:"aggregateLatency,omitempty"`
}

func (x *SlowPeerReportProto) Reset() {
	*x = SlowPeerReportProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlowPeerReportProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlowPeerReportProto) ProtoMessage() {}

func (x *SlowPeerReportProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlowPeerReportProto.ProtoReflect.Descriptor instead.
func (*SlowPeerReportProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{31}
}

func (x *SlowPeerReportProto) GetDataNodeId() string {
	if x != nil && x.DataNodeId != nil {
		return *x.DataNodeId
	}
	return ""
}

func (x *SlowPeerReportProto) GetAggregateLatency() float64 {
	if x != nil && x.AggregateLatency != nil {
		return *x.AggregateLatency
	}
	return 0
}

// *
// Information about a single slow disk that may be reported by
// the DataNode to the NameNode as part of the heartbeat request.
// The message includes the disk's basePath, mean metadata op latency,
// mean read io latency and mean write io latency as observed by the DataNode.
type SlowDiskReportProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasePath              *string  `protobuf:"bytes,1,opt,name=basePath" json:"basePath,omitempty"`
	MeanMetadataOpLatency *float64 `protobuf:"fixed64,2,opt,name=meanMetadataOpLatency" json:"meanMetadataOpLatency,omitempty"`
	MeanReadIoLatency     *float64 `protobuf:"fixed64,3,opt,name=meanReadIoLatency" json:"meanReadIoLatency,omitempty"`
	MeanWriteIoLatency    *float64 `protobuf:"fixed64,4,opt,name=meanWriteIoLatency" json:"meanWriteIoLatency,omitempty"`
}

func (x *SlowDiskReportProto) Reset() {
	*x = SlowDiskReportProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlowDiskReportProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlowDiskReportProto) ProtoMessage() {}

func (x *SlowDiskReportProto) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlowDiskReportProto.ProtoReflect.Descriptor instead.
func (*SlowDiskReportProto) Descriptor() ([]byte, []int) {
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP(), []int{32}
}

func (x *SlowDiskReportProto) GetBasePath() string {
	if x != nil && x.BasePath != nil {
		return *x.BasePath
	}
	return ""
}

func (x *SlowDiskReportProto) GetMeanMetadataOpLatency() float64 {
	if x != nil && x.MeanMetadataOpLatency != nil {
		return *x.MeanMetadataOpLatency
	}
	return 0
}

func (x *SlowDiskReportProto) GetMeanReadIoLatency() float64 {
	if x != nil && x.MeanReadIoLatency != nil {
		return *x.MeanReadIoLatency
	}
	return 0
}

func (x *SlowDiskReportProto) GetMeanWriteIoLatency() float64 {
	if x != nil && x.MeanWriteIoLatency != nil {
		return *x.MeanWriteIoLatency
	}
	return 0
}

var File_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto protoreflect.FileDescriptor

var file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDesc = []byte{
	0x0a, 0x50, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x6d,
	0x30, 0x30, 0x35, 0x35, 0x2f, 0x67, 0x6f, 0x2d, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x68, 0x64,
	0x66, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x44, 0x61, 0x74, 0x61,
	0x6e, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b,
	0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x1a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2f, 0x67, 0x6f, 0x2d, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x68, 0x64, 0x66, 0x73, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2f, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4b, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2f,
	0x67, 0x6f, 0x2d, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x68, 0x64, 0x66, 0x73, 0x2f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x72, 0x61, 0x73, 0x75, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2f, 0x67, 0x6f, 0x2d,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x68, 0x64, 0x66, 0x73, 0x2f, 0x48, 0x64, 0x66, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x02, 0x0a, 0x19,
	0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x62, 0x0a, 0x0a, 0x64, 0x61, 0x74,
	0x61, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30,
	0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x5e, 0x0a,
	0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x56, 0x0a,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35,
	0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4b, 0x65, 0x79, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x85, 0x0a, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x68, 0x0a, 0x07, 0x63, 0x6d, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67,
	0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x63, 0x6d, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x74, 0x0a, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x43, 0x6d,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x5e, 0x0a, 0x06, 0x62, 0x6c, 0x6b, 0x43,
	0x6d, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f,
	0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x06, 0x62, 0x6c, 0x6b, 0x43, 0x6d, 0x64, 0x12, 0x70, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x43, 0x6d, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30,
	0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b, 0x72,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6d, 0x64, 0x12, 0x6b, 0x0a, 0x0b, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x6d, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d,
	0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x43, 0x6d, 0x64, 0x12, 0x6e, 0x0a, 0x0c, 0x6b, 0x65, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6d, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30,
	0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6d, 0x64, 0x12, 0x6b, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6d, 0x64, 0x12, 0x64, 0x0a, 0x08, 0x62, 0x6c, 0x6b, 0x49, 0x64, 0x43, 0x6d, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68,
	0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x08, 0x62, 0x6c, 0x6b, 0x49, 0x64, 0x43, 0x6d, 0x64, 0x12, 0x8e, 0x01, 0x0a, 0x16, 0x62,
	0x6c, 0x6b, 0x45, 0x43, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6d, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35,
	0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x43, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x16, 0x62, 0x6c, 0x6b, 0x45, 0x43, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6d, 0x64, 0x22, 0xf9, 0x01, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72,
	0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x02, 0x12, 0x13,
	0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x4b, 0x65, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x05, 0x12, 0x18,
	0x0a, 0x14, 0x55, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x75, 0x6c, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10,
	0x07, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x10, 0x08, 0x12, 0x20, 0x0a, 0x1c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x43,
	0x52, 0x65, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x09, 0x22, 0x3d, 0x0a, 0x1d, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x64,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x09, 0x62, 0x61, 0x6e,
	0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x22, 0xf6, 0x04, 0x0a, 0x11, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x65, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x4d, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6f, 0x6f, 0x6c,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50,
	0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64,
	0x66, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x5f, 0x0a, 0x07,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30,
	0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x74, 0x0a,
	0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x75,
	0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67,
	0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x75, 0x69, 0x64, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x75,
	0x69, 0x64, 0x73, 0x12, 0x74, 0x0a, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d,
	0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x06, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x45, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x03, 0x22,
	0xe2, 0x01, 0x0a, 0x13, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x67, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6f, 0x6f, 0x6c,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x04, 0x42, 0x02, 0x10, 0x01, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x64, 0x73, 0x22, 0x20, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x09, 0x0a, 0x05,
	0x43, 0x41, 0x43, 0x48, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x43, 0x41, 0x43,
	0x48, 0x45, 0x10, 0x02, 0x22, 0x75, 0x0a, 0x19, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x58, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b,
	0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x38, 0x0a, 0x14, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6f, 0x6f, 0x6c,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50,
	0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x15, 0x4b, 0x65, 0x79, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x56,
	0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4b, 0x65, 0x79, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5,
	0x01, 0x0a, 0x21, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x43, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x8f, 0x01, 0x0a, 0x19, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x43,
	0x52, 0x65, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f,
	0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x45, 0x43, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x19, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x45, 0x43, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x92, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x72, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x4e, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30,
	0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x93, 0x01, 0x0a, 0x1d,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x72, 0x0a,
	0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xc9, 0x01, 0x0a, 0x19, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x46, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x36, 0x0a, 0x16, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x16, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a,
	0x1a, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x4c, 0x6f, 0x73, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x04, 0x52, 0x1a, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x73, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xd1, 0x06,
	0x0a, 0x15, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x72, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x4e, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30,
	0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x07, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x0f,
	0x78, 0x6d, 0x69, 0x74, 0x73, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0f, 0x78, 0x6d, 0x69, 0x74, 0x73, 0x49,
	0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0c, 0x78, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a,
	0x01, 0x30, 0x52, 0x0c, 0x78, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x27, 0x0a, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0d, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x3a, 0x01, 0x30, 0x52, 0x0d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x1f, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x55, 0x73, 0x65, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x55,
	0x73, 0x65, 0x64, 0x12, 0x82, 0x01, 0x0a, 0x14, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x46, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x14, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x47, 0x0a, 0x1b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x52, 0x1b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x75, 0x6c,
	0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x65, 0x61, 0x73,
	0x65, 0x12, 0x66, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x77, 0x50, 0x65, 0x65, 0x72, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66,
	0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x53, 0x6c, 0x6f, 0x77, 0x50,
	0x65, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x09,
	0x73, 0x6c, 0x6f, 0x77, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x66, 0x0a, 0x09, 0x73, 0x6c, 0x6f,
	0x77, 0x44, 0x69, 0x73, 0x6b, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x53, 0x6c, 0x6f, 0x77, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x77, 0x44, 0x69, 0x73, 0x6b,
	0x73, 0x22, 0x9e, 0x04, 0x0a, 0x16, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x5d, 0x0a, 0x04,
	0x63, 0x6d, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e,
	0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x63, 0x6d, 0x64, 0x73, 0x12, 0x60, 0x0a, 0x08, 0x68,
	0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x44, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30,
	0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x4e, 0x4e, 0x48, 0x41, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x08, 0x68, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x80, 0x01,
	0x0a, 0x14, 0x72, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x72, 0x6f, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x84, 0x01, 0x0a, 0x16, 0x72, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b,
	0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x16, 0x72, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x32, 0x12, 0x39, 0x0a, 0x16, 0x66, 0x75, 0x6c, 0x6c, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x16, 0x66, 0x75, 0x6c, 0x6c,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65,
	0x49, 0x64, 0x22, 0xff, 0x02, 0x0a, 0x17, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x72,
	0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66,
	0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x6e,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6f,
	0x6f, 0x6c, 0x49, 0x64, 0x12, 0x66, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64,
	0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x66, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30,
	0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x17, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x70, 0x63, 0x73, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x70, 0x63, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x75, 0x72, 0x52, 0x70, 0x63, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x63, 0x75, 0x72, 0x52, 0x70, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x17, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x61,
	0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x47, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d,
	0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x04, 0x42, 0x02, 0x10, 0x01, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x26, 0x0a,
	0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x42,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0d, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x22, 0x77, 0x0a, 0x18, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x5b, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66,
	0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x17, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x72, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68,
	0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6f, 0x6f,
	0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x42, 0x02, 0x10, 0x01, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x22, 0x77, 0x0a, 0x18, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x5b,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35,
	0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x22, 0xc5, 0x02, 0x0a, 0x1d,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x53, 0x0a,
	0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x76, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x0e, 0x32, 0x5e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x22, 0x37, 0x0a, 0x0b, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x43,
	0x45, 0x49, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x43, 0x45,
	0x49, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x44, 0x10, 0x03, 0x22, 0x98, 0x02, 0x0a, 0x21, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x6a, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d,
	0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x61, 0x0a, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0xab,
	0x02, 0x0a, 0x23, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x41, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x72, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x6e, 0x0a, 0x06,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x26, 0x0a, 0x24,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x6e, 0x64,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x02, 0x0a, 0x17, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x72, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68,
	0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x50, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x44, 0x49, 0x53, 0x4b, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x02,
	0x12, 0x14, 0x0a, 0x10, 0x46, 0x41, 0x54, 0x41, 0x4c, 0x5f, 0x44, 0x49, 0x53, 0x4b, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x22, 0x1a, 0x0a, 0x18, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x7b, 0x0a, 0x1b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x61, 0x64, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x5c, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b,
	0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22,
	0x1e, 0x0a, 0x1c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x99, 0x03, 0x0a, 0x26, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x5b, 0x0a, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67,
	0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x47, 0x65,
	0x6e, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0b, 0x6e, 0x65,
	0x77, 0x47, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x77,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x65,
	0x77, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x64, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x54, 0x61,
	0x72, 0x61, 0x67, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35,
	0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x0b, 0x6e, 0x65, 0x77, 0x54, 0x61, 0x72, 0x61, 0x67, 0x65, 0x74, 0x73, 0x12, 0x2c, 0x0a,
	0x11, 0x6e, 0x65, 0x77, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x65, 0x77, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x27, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72,
	0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x61, 0x0a, 0x13, 0x53, 0x6c, 0x6f, 0x77, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xc5, 0x01, 0x0a, 0x13, 0x53, 0x6c,
	0x6f, 0x77, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x34, 0x0a,
	0x15, 0x6d, 0x65, 0x61, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x70, 0x4c,
	0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x6d, 0x65,
	0x61, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x70, 0x4c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x49,
	0x6f, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11,
	0x6d, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6f, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x65, 0x61, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6f,
	0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x6d,
	0x65, 0x61, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6f, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x32, 0x81, 0x0d, 0x0a, 0x17, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb9, 0x01,
	0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f,
	0x64, 0x65, 0x12, 0x51, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64,
	0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0xa8, 0x01, 0x0a, 0x0d, 0x73, 0x65,
	0x6e, 0x64, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x4a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35,
	0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0xaa, 0x01, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66,
	0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f,
	0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0xaa, 0x01, 0x0a, 0x0b, 0x63, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b,
	0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x4d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d,
	0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0xce,
	0x01, 0x0a, 0x17, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x41, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x58, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e,
	0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x6e,
	0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x59, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64,
	0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66,
	0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0xaa, 0x01, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x4c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d,
	0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4d, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30,
	0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x93, 0x01, 0x0a,
	0x0e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d,
	0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f,
	0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0xb6, 0x01, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x61, 0x64,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x68,
	0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x42, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x51, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f,
	0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0xd7, 0x01, 0x0a, 0x1a,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x68,
	0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5b, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e,
	0x67, 0x6f, 0x5f, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x79, 0x6e, 0x63,
	0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x5c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2e, 0x67, 0x6f, 0x5f,
	0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x68, 0x64, 0x66, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6f, 0x6d, 0x30, 0x30, 0x35, 0x35, 0x2f, 0x67, 0x6f, 0x2d, 0x68,
	0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x68, 0x64, 0x66, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f,
	0x64, 0x65,
}

var (
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescOnce sync.Once
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescData = file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDesc
)

func file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescGZIP() []byte {
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescOnce.Do(func() {
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescData)
	})
	return file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDescData
}

var file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_goTypes = []interface{}{
	(DatanodeCommandProto_Type)(0),                  // 0: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeCommandProto.Type
	(BlockCommandProto_Action)(0),                   // 1: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockCommandProto.Action
	(BlockIdCommandProto_Action)(0),                 // 2: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockIdCommandProto.Action
	(ReceivedDeletedBlockInfoProto_BlockStatus)(0),  // 3: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ReceivedDeletedBlockInfoProto.BlockStatus
	(ErrorReportRequestProto_ErrorCode)(0),          // 4: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ErrorReportRequestProto.ErrorCode
	(*DatanodeRegistrationProto)(nil),               // 5: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeRegistrationProto
	(*DatanodeCommandProto)(nil),                    // 6: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeCommandProto
	(*BalancerBandwidthCommandProto)(nil),           // 7: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BalancerBandwidthCommandProto
	(*BlockCommandProto)(nil),                       // 8: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockCommandProto
	(*BlockIdCommandProto)(nil),                     // 9: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockIdCommandProto
	(*BlockRecoveryCommandProto)(nil),               // 10: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockRecoveryCommandProto
	(*FinalizeCommandProto)(nil),                    // 11: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.FinalizeCommandProto
	(*KeyUpdateCommandProto)(nil),                   // 12: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.KeyUpdateCommandProto
	(*RegisterCommandProto)(nil),                    // 13: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.RegisterCommandProto
	(*BlockECReconstructionCommandProto)(nil),       // 14: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockECReconstructionCommandProto
	(*RegisterDatanodeRequestProto)(nil),            // 15: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.RegisterDatanodeRequestProto
	(*RegisterDatanodeResponseProto)(nil),           // 16: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.RegisterDatanodeResponseProto
	(*VolumeFailureSummaryProto)(nil),               // 17: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.VolumeFailureSummaryProto
	(*HeartbeatRequestProto)(nil),                   // 18: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.HeartbeatRequestProto
	(*HeartbeatResponseProto)(nil),                  // 19: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.HeartbeatResponseProto
	(*BlockReportRequestProto)(nil),                 // 20: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockReportRequestProto
	(*BlockReportContextProto)(nil),                 // 21: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockReportContextProto
	(*StorageBlockReportProto)(nil),                 // 22: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.StorageBlockReportProto
	(*BlockReportResponseProto)(nil),                // 23: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockReportResponseProto
	(*CacheReportRequestProto)(nil),                 // 24: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.CacheReportRequestProto
	(*CacheReportResponseProto)(nil),                // 25: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.CacheReportResponseProto
	(*ReceivedDeletedBlockInfoProto)(nil),           // 26: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ReceivedDeletedBlockInfoProto
	(*StorageReceivedDeletedBlocksProto)(nil),       // 27: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.StorageReceivedDeletedBlocksProto
	(*BlockReceivedAndDeletedRequestProto)(nil),     // 28: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockReceivedAndDeletedRequestProto
	(*BlockReceivedAndDeletedResponseProto)(nil),    // 29: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockReceivedAndDeletedResponseProto
	(*ErrorReportRequestProto)(nil),                 // 30: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ErrorReportRequestProto
	(*ErrorReportResponseProto)(nil),                // 31: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ErrorReportResponseProto
	(*ReportBadBlocksRequestProto)(nil),             // 32: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ReportBadBlocksRequestProto
	(*ReportBadBlocksResponseProto)(nil),            // 33: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ReportBadBlocksResponseProto
	(*CommitBlockSynchronizationRequestProto)(nil),  // 34: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.CommitBlockSynchronizationRequestProto
	(*CommitBlockSynchronizationResponseProto)(nil), // 35: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.CommitBlockSynchronizationResponseProto
	(*SlowPeerReportProto)(nil),                     // 36: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.SlowPeerReportProto
	(*SlowDiskReportProto)(nil),                     // 37: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.SlowDiskReportProto
	(*client.DatanodeIDProto)(nil),                  // 38: github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.DatanodeIDProto
	(*hdfs.StorageInfoProto)(nil),                   // 39: github.com.kom0055.go_hadoop.v1alpha1.hdfs.StorageInfoProto
	(*hdfs.ExportedBlockKeysProto)(nil),             // 40: github.com.kom0055.go_hadoop.v1alpha1.hdfs.ExportedBlockKeysProto
	(*client.BlockProto)(nil),                       // 41: github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.BlockProto
	(*client.DatanodeInfosProto)(nil),               // 42: github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.DatanodeInfosProto
	(*client.StorageUuidsProto)(nil),                // 43: github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.StorageUuidsProto
	(*client.StorageTypesProto)(nil),                // 44: github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.StorageTypesProto
	(*hdfs.RecoveringBlockProto)(nil),               // 45: github.com.kom0055.go_hadoop.v1alpha1.hdfs.RecoveringBlockProto
	(*client.BlockECReconstructionInfoProto)(nil),   // 46: github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.BlockECReconstructionInfoProto
	(*client.StorageReportProto)(nil),               // 47: github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.StorageReportProto
	(*hdfs.NNHAStatusHeartbeatProto)(nil),           // 48: github.com.kom0055.go_hadoop.v1alpha1.hdfs.NNHAStatusHeartbeatProto
	(*client.RollingUpgradeStatusProto)(nil),        // 49: github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.RollingUpgradeStatusProto
	(*client.DatanodeStorageProto)(nil),             // 50: github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.DatanodeStorageProto
	(*client.LocatedBlockProto)(nil),                // 51: github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.LocatedBlockProto
	(*client.ExtendedBlockProto)(nil),               // 52: github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.ExtendedBlockProto
	(*hdfs.VersionRequestProto)(nil),                // 53: github.com.kom0055.go_hadoop.v1alpha1.hdfs.VersionRequestProto
	(*hdfs.VersionResponseProto)(nil),               // 54: github.com.kom0055.go_hadoop.v1alpha1.hdfs.VersionResponseProto
}
var file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_depIdxs = []int32{
	38, // 0: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeRegistrationProto.datanodeID:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.DatanodeIDProto
	39, // 1: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeRegistrationProto.storageInfo:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.StorageInfoProto
	40, // 2: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeRegistrationProto.keys:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.ExportedBlockKeysProto
	0,  // 3: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeCommandProto.cmdType:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeCommandProto.Type
	7,  // 4: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeCommandProto.balancerCmd:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BalancerBandwidthCommandProto
	8,  // 5: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeCommandProto.blkCmd:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockCommandProto
	10, // 6: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeCommandProto.recoveryCmd:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockRecoveryCommandProto
	11, // 7: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeCommandProto.finalizeCmd:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.FinalizeCommandProto
	12, // 8: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeCommandProto.keyUpdateCmd:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.KeyUpdateCommandProto
	13, // 9: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeCommandProto.registerCmd:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.RegisterCommandProto
	9,  // 10: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeCommandProto.blkIdCmd:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockIdCommandProto
	14, // 11: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeCommandProto.blkECReconstructionCmd:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockECReconstructionCommandProto
	1,  // 12: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockCommandProto.action:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockCommandProto.Action
	41, // 13: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockCommandProto.blocks:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.BlockProto
	42, // 14: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockCommandProto.targets:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.DatanodeInfosProto
	43, // 15: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockCommandProto.targetStorageUuids:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.StorageUuidsProto
	44, // 16: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockCommandProto.targetStorageTypes:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.StorageTypesProto
	2,  // 17: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockIdCommandProto.action:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockIdCommandProto.Action
	45, // 18: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockRecoveryCommandProto.blocks:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.RecoveringBlockProto
	40, // 19: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.KeyUpdateCommandProto.keys:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.ExportedBlockKeysProto
	46, // 20: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockECReconstructionCommandProto.blockECReconstructioninfo:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.BlockECReconstructionInfoProto
	5,  // 21: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.RegisterDatanodeRequestProto.registration:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeRegistrationProto
	5,  // 22: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.RegisterDatanodeResponseProto.registration:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeRegistrationProto
	5,  // 23: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.HeartbeatRequestProto.registration:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeRegistrationProto
	47, // 24: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.HeartbeatRequestProto.reports:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.StorageReportProto
	17, // 25: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.HeartbeatRequestProto.volumeFailureSummary:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.VolumeFailureSummaryProto
	36, // 26: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.HeartbeatRequestProto.slowPeers:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.SlowPeerReportProto
	37, // 27: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.HeartbeatRequestProto.slowDisks:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.SlowDiskReportProto
	6,  // 28: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.HeartbeatResponseProto.cmds:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeCommandProto
	48, // 29: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.HeartbeatResponseProto.haStatus:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.NNHAStatusHeartbeatProto
	49, // 30: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.HeartbeatResponseProto.rollingUpgradeStatus:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.RollingUpgradeStatusProto
	49, // 31: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.HeartbeatResponseProto.rollingUpgradeStatusV2:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.RollingUpgradeStatusProto
	5,  // 32: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockReportRequestProto.registration:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeRegistrationProto
	22, // 33: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockReportRequestProto.reports:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.StorageBlockReportProto
	21, // 34: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockReportRequestProto.context:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockReportContextProto
	50, // 35: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.StorageBlockReportProto.storage:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.DatanodeStorageProto
	6,  // 36: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockReportResponseProto.cmd:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeCommandProto
	5,  // 37: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.CacheReportRequestProto.registration:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeRegistrationProto
	6,  // 38: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.CacheReportResponseProto.cmd:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeCommandProto
	41, // 39: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ReceivedDeletedBlockInfoProto.block:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.BlockProto
	3,  // 40: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ReceivedDeletedBlockInfoProto.status:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ReceivedDeletedBlockInfoProto.BlockStatus
	26, // 41: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.StorageReceivedDeletedBlocksProto.blocks:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ReceivedDeletedBlockInfoProto
	50, // 42: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.StorageReceivedDeletedBlocksProto.storage:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.DatanodeStorageProto
	5,  // 43: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockReceivedAndDeletedRequestProto.registration:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeRegistrationProto
	27, // 44: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockReceivedAndDeletedRequestProto.blocks:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.StorageReceivedDeletedBlocksProto
	5,  // 45: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ErrorReportRequestProto.registartion:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeRegistrationProto
	51, // 46: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ReportBadBlocksRequestProto.blocks:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.LocatedBlockProto
	52, // 47: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.CommitBlockSynchronizationRequestProto.block:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.ExtendedBlockProto
	38, // 48: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.CommitBlockSynchronizationRequestProto.newTaragets:type_name -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.client.DatanodeIDProto
	15, // 49: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.registerDatanode:input_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.RegisterDatanodeRequestProto
	18, // 50: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.sendHeartbeat:input_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.HeartbeatRequestProto
	20, // 51: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.blockReport:input_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockReportRequestProto
	24, // 52: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.cacheReport:input_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.CacheReportRequestProto
	28, // 53: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.blockReceivedAndDeleted:input_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockReceivedAndDeletedRequestProto
	30, // 54: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.errorReport:input_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ErrorReportRequestProto
	53, // 55: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.versionRequest:input_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.VersionRequestProto
	32, // 56: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.reportBadBlocks:input_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ReportBadBlocksRequestProto
	34, // 57: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.commitBlockSynchronization:input_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.CommitBlockSynchronizationRequestProto
	16, // 58: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.registerDatanode:output_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.RegisterDatanodeResponseProto
	19, // 59: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.sendHeartbeat:output_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.HeartbeatResponseProto
	23, // 60: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.blockReport:output_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockReportResponseProto
	25, // 61: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.cacheReport:output_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.CacheReportResponseProto
	29, // 62: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.blockReceivedAndDeleted:output_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.BlockReceivedAndDeletedResponseProto
	31, // 63: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.errorReport:output_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ErrorReportResponseProto
	54, // 64: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.versionRequest:output_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.VersionResponseProto
	33, // 65: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.reportBadBlocks:output_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.ReportBadBlocksResponseProto
	35, // 66: github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.DatanodeProtocolService.commitBlockSynchronization:output_type -> github.com.kom0055.go_hadoop.v1alpha1.hdfs.datanode.CommitBlockSynchronizationResponseProto
	58, // [58:67] is the sub-list for method output_type
	49, // [49:58] is the sub-list for method input_type
	49, // [49:49] is the sub-list for extension type_name
	49, // [49:49] is the sub-list for extension extendee
	0,  // [0:49] is the sub-list for field type_name
}

func init() {
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_init()
}
func file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_init() {
	if File_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatanodeRegistrationProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatanodeCommandProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalancerBandwidthCommandProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockCommandProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockIdCommandProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockRecoveryCommandProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalizeCommandProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyUpdateCommandProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterCommandProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockECReconstructionCommandProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterDatanodeRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterDatanodeResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeFailureSummaryProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockReportRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockReportContextProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageBlockReportProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockReportResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheReportRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheReportResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceivedDeletedBlockInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageReceivedDeletedBlocksProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockReceivedAndDeletedRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockReceivedAndDeletedResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorReportRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorReportResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportBadBlocksRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportBadBlocksResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitBlockSynchronizationRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitBlockSynchronizationResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlowPeerReportProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlowDiskReportProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_goTypes,
		DependencyIndexes: file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_depIdxs,
		EnumInfos:         file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_enumTypes,
		MessageInfos:      file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_msgTypes,
	}.Build()
	File_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto = out.File
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_rawDesc = nil
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_goTypes = nil
	file_github_com_kom0055_go_hadoop_proto_v1alpha1_hdfs_datanode_DatanodeProtocol_proto_depIdxs = nil
}
